

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jul 26 12:24:28 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     
    62                           ; Version 2.10
    63                           ; Generated 31/07/2019 GMT
    64                           ; 
    65                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F1459 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0008                     	;# 
   105  0009                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000D                     	;# 
   110  000E                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  0111                     	;# 
   143  0112                     	;# 
   144  0113                     	;# 
   145  0114                     	;# 
   146  0115                     	;# 
   147  0116                     	;# 
   148  0117                     	;# 
   149  0118                     	;# 
   150  0119                     	;# 
   151  011D                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  018E                     	;# 
   155  0191                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0194                     	;# 
   161  0195                     	;# 
   162  0196                     	;# 
   163  0197                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019C                     	;# 
   169  019D                     	;# 
   170  019E                     	;# 
   171  019F                     	;# 
   172  020C                     	;# 
   173  020D                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0213                     	;# 
   180  0214                     	;# 
   181  0214                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0216                     	;# 
   186  0216                     	;# 
   187  0217                     	;# 
   188  0217                     	;# 
   189  0391                     	;# 
   190  0392                     	;# 
   191  0393                     	;# 
   192  0394                     	;# 
   193  0395                     	;# 
   194  0396                     	;# 
   195  039A                     	;# 
   196  039B                     	;# 
   197  0611                     	;# 
   198  0612                     	;# 
   199  0613                     	;# 
   200  0613                     	;# 
   201  0614                     	;# 
   202  0615                     	;# 
   203  0616                     	;# 
   204  0616                     	;# 
   205  0691                     	;# 
   206  0692                     	;# 
   207  0693                     	;# 
   208  0694                     	;# 
   209  0695                     	;# 
   210  0E8E                     	;# 
   211  0E8F                     	;# 
   212  0E90                     	;# 
   213  0E91                     	;# 
   214  0E92                     	;# 
   215  0E93                     	;# 
   216  0E94                     	;# 
   217  0E94                     	;# 
   218  0E95                     	;# 
   219  0E96                     	;# 
   220  0E97                     	;# 
   221  0E98                     	;# 
   222  0E99                     	;# 
   223  0E9A                     	;# 
   224  0E9B                     	;# 
   225  0E9C                     	;# 
   226  0E9D                     	;# 
   227  0E9E                     	;# 
   228  0E9F                     	;# 
   229  0FE4                     	;# 
   230  0FE5                     	;# 
   231  0FE6                     	;# 
   232  0FE7                     	;# 
   233  0FE8                     	;# 
   234  0FE9                     	;# 
   235  0FEA                     	;# 
   236  0FEB                     	;# 
   237  0FED                     	;# 
   238  0FEE                     	;# 
   239  0FEF                     	;# 
   240  0018                     _T1CONbits	set	24
   241  0018                     _T1CON	set	24
   242  0016                     _TMR1L	set	22
   243  0017                     _TMR1H	set	23
   244  0019                     _T1GCON	set	25
   245  000C                     _PORTAbits	set	12
   246  000D                     _PORTBbits	set	13
   247  000B                     _INTCONbits	set	11
   248  000E                     _PORTCbits	set	14
   249  0011                     _PIR1bits	set	17
   250  008C                     _TXIF	set	140
   251  009C                     _ADRESH	set	156
   252  009B                     _ADRESL	set	155
   253  009D                     _ADCON0bits	set	157
   254  009E                     _ADCON1bits	set	158
   255  008C                     _TRISAbits	set	140
   256  008D                     _TRISBbits	set	141
   257  008E                     _TRISCbits	set	142
   258  0099                     _OSCCONbits	set	153
   259  0091                     _PIE1bits	set	145
   260  010D                     _LATBbits	set	269
   261  0117                     _FVRCONbits	set	279
   262  019B                     _SPBRG	set	411
   263  018C                     _ANSELAbits	set	396
   264  019E                     _TXSTAbits	set	414
   265  019D                     _RCSTAbits	set	413
   266  018D                     _ANSELBbits	set	397
   267  018E                     _ANSELCbits	set	398
   268  019A                     _TXREG	set	410
   269  0CFB                     _BRG16	set	3323
   270  0CF2                     _BRGH	set	3314
   271  0393                     _IOCAF	set	915
   272  0391                     _IOCAPbits	set	913
   273  0393                     _IOCAFbits	set	915
   274                           
   275                           	psect	stringtext1
   276  1000                     __pstringtext1:	
   277  1000                     STR_1:	
   278  1000  345A               	retlw	90	;'Z'
   279  1001  3479               	retlw	121	;'y'
   280  1002  346C               	retlw	108	;'l'
   281  1003  346F               	retlw	111	;'o'
   282  1004  3470               	retlw	112	;'p'
   283  1005  3466               	retlw	102	;'f'
   284  1006  3461               	retlw	97	;'a'
   285  1007  3420               	retlw	32	;' '
   286  1008  3446               	retlw	70	;'F'
   287  1009  346F               	retlw	111	;'o'
   288  100A  346F               	retlw	111	;'o'
   289  100B  347A               	retlw	122	;'z'
   290  100C  3462               	retlw	98	;'b'
   291  100D  3461               	retlw	97	;'a'
   292  100E  346C               	retlw	108	;'l'
   293  100F  346C               	retlw	108	;'l'
   294  1010  3420               	retlw	32	;' '
   295  1011  3454               	retlw	84	;'T'
   296  1012  3469               	retlw	105	;'i'
   297  1013  346D               	retlw	109	;'m'
   298  1014  3465               	retlw	101	;'e'
   299  1015  3472               	retlw	114	;'r'
   300  1016  340D               	retlw	13
   301  1017  340A               	retlw	10
   302  1018  3400               	retlw	0
   303                           
   304                           	psect	stringtext2
   305  1019                     __pstringtext2:	
   306  1019                     STR_3:	
   307  1019  344D               	retlw	77	;'M'
   308  101A  3450               	retlw	80	;'P'
   309  101B  3433               	retlw	51	;'3'
   310  101C  3420               	retlw	32	;' '
   311  101D  344F               	retlw	79	;'O'
   312  101E  344E               	retlw	78	;'N'
   313  101F  3420               	retlw	32	;' '
   314  1020  3472               	retlw	114	;'r'
   315  1021  3473               	retlw	115	;'s'
   316  1022  3474               	retlw	116	;'t'
   317  1023  342E               	retlw	46	;'.'
   318  1024  3420               	retlw	32	;' '
   319  1025  3474               	retlw	116	;'t'
   320  1026  3469               	retlw	105	;'i'
   321  1027  346D               	retlw	109	;'m'
   322  1028  3465               	retlw	101	;'e'
   323  1029  3472               	retlw	114	;'r'
   324  102A  3421               	retlw	33	;'!'
   325  102B  340D               	retlw	13
   326  102C  340A               	retlw	10
   327  102D  3400               	retlw	0
   328                           
   329                           	psect	stringtext3
   330  102E                     __pstringtext3:	
   331  102E                     STR_5:	
   332  102E  3442               	retlw	66	;'B'
   333  102F  3455               	retlw	85	;'U'
   334  1030  3454               	retlw	84	;'T'
   335  1031  3454               	retlw	84	;'T'
   336  1032  344F               	retlw	79	;'O'
   337  1033  344E               	retlw	78	;'N'
   338  1034  3420               	retlw	32	;' '
   339  1035  3450               	retlw	80	;'P'
   340  1036  3452               	retlw	82	;'R'
   341  1037  3445               	retlw	69	;'E'
   342  1038  3453               	retlw	83	;'S'
   343  1039  3453               	retlw	83	;'S'
   344  103A  3445               	retlw	69	;'E'
   345  103B  3444               	retlw	68	;'D'
   346  103C  3421               	retlw	33	;'!'
   347  103D  340D               	retlw	13
   348  103E  340A               	retlw	10
   349  103F  3400               	retlw	0
   350                           
   351                           	psect	stringtext4
   352  1040                     __pstringtext4:	
   353  1040                     STR_7:	
   354  1040  3453               	retlw	83	;'S'
   355  1041  3445               	retlw	69	;'E'
   356  1042  3443               	retlw	67	;'C'
   357  1043  3453               	retlw	83	;'S'
   358  1044  343A               	retlw	58	;':'
   359  1045  3420               	retlw	32	;' '
   360  1046  3425               	retlw	37	;'%'
   361  1047  3464               	retlw	100	;'d'
   362  1048  342C               	retlw	44	;','
   363  1049  3420               	retlw	32	;' '
   364  104A  3425               	retlw	37	;'%'
   365  104B  3464               	retlw	100	;'d'
   366  104C  3420               	retlw	32	;' '
   367  104D  3421               	retlw	33	;'!'
   368  104E  340D               	retlw	13
   369  104F  340A               	retlw	10
   370  1050  3400               	retlw	0
   371                           
   372                           	psect	stringtext5
   373  1051                     __pstringtext5:	
   374  1051                     STR_6:	
   375  1051  3449               	retlw	73	;'I'
   376  1052  344E               	retlw	78	;'N'
   377  1053  3454               	retlw	84	;'T'
   378  1054  3452               	retlw	82	;'R'
   379  1055  344F               	retlw	79	;'O'
   380  1056  3420               	retlw	32	;' '
   381  1057  3446               	retlw	70	;'F'
   382  1058  3449               	retlw	73	;'I'
   383  1059  344E               	retlw	78	;'N'
   384  105A  3421               	retlw	33	;'!'
   385  105B  340D               	retlw	13
   386  105C  340A               	retlw	10
   387  105D  3400               	retlw	0
   388                           
   389                           	psect	stringtext6
   390  105E                     __pstringtext6:	
   391  105E                     STR_8:	
   392  105E  3448               	retlw	72	;'H'
   393  105F  344F               	retlw	79	;'O'
   394  1060  3452               	retlw	82	;'R'
   395  1061  344E               	retlw	78	;'N'
   396  1062  3420               	retlw	32	;' '
   397  1063  3449               	retlw	73	;'I'
   398  1064  344E               	retlw	78	;'N'
   399  1065  3449               	retlw	73	;'I'
   400  1066  3421               	retlw	33	;'!'
   401  1067  340D               	retlw	13
   402  1068  340A               	retlw	10
   403  1069  3400               	retlw	0
   404                           
   405                           	psect	stringtext7
   406  106A                     __pstringtext7:	
   407  106A                     STR_9:	
   408  106A  3448               	retlw	72	;'H'
   409  106B  344F               	retlw	79	;'O'
   410  106C  3452               	retlw	82	;'R'
   411  106D  344E               	retlw	78	;'N'
   412  106E  3420               	retlw	32	;' '
   413  106F  3446               	retlw	70	;'F'
   414  1070  3449               	retlw	73	;'I'
   415  1071  344E               	retlw	78	;'N'
   416  1072  3421               	retlw	33	;'!'
   417  1073  340D               	retlw	13
   418  1074  340A               	retlw	10
   419  1075  3400               	retlw	0
   420                           
   421                           	psect	stringtext8
   422  1076                     __pstringtext8:	
   423  1076                     STR_4:	
   424  1076  344D               	retlw	77	;'M'
   425  1077  3450               	retlw	80	;'P'
   426  1078  3433               	retlw	51	;'3'
   427  1079  3420               	retlw	32	;' '
   428  107A  344F               	retlw	79	;'O'
   429  107B  3446               	retlw	70	;'F'
   430  107C  3446               	retlw	70	;'F'
   431  107D  3421               	retlw	33	;'!'
   432  107E  340D               	retlw	13
   433  107F  340A               	retlw	10
   434  1080  3400               	retlw	0
   435                           
   436                           	psect	stringtext9
   437  1081                     __pstringtext9:	
   438  1081                     STR_2:	
   439  1081  3425               	retlw	37	;'%'
   440  1082  3464               	retlw	100	;'d'
   441  1083  340D               	retlw	13
   442  1084  340A               	retlw	10
   443  1085  3400               	retlw	0
   444                           
   445                           	psect	stringtext10
   446  0000                     __pstringtext10:	
   447                           
   448                           ; #config settings
   449  0000                     
   450                           	psect	cinit
   451  0034                     start_initialization:	
   452  0034                     __initialization:	
   453                           
   454                           ; Clear objects allocated to COMMON
   455  0034  01F6               	clrf	__pbssCOMMON& (0+127)
   456  0035  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   457  0036  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   458  0037  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   459                           
   460                           ; Clear objects allocated to BANK1
   461  0038  30E7               	movlw	low __pbssBANK1
   462  0039  0084               	movwf	4
   463  003A  3000               	movlw	high __pbssBANK1
   464  003B  0085               	movwf	5
   465  003C  3009               	movlw	9
   466  003D  318C  243E  3180   	fcall	clear_ram0
   467                           
   468                           ; Clear objects allocated to BANK3
   469  0040  30CA               	movlw	low __pbssBANK3
   470  0041  0084               	movwf	4
   471  0042  3001               	movlw	high __pbssBANK3
   472  0043  0085               	movwf	5
   473  0044  301A               	movlw	26
   474  0045  318C  243E  3180   	fcall	clear_ram0
   475                           
   476                           ; Clear objects allocated to BANK4
   477  0048  3020               	movlw	low __pbssBANK4
   478  0049  0084               	movwf	4
   479  004A  3002               	movlw	high __pbssBANK4
   480  004B  0085               	movwf	5
   481  004C  3048               	movlw	72
   482  004D  318C  243E  3180   	fcall	clear_ram0
   483                           
   484                           ; Clear objects allocated to BANK5
   485  0050  30A0               	movlw	low __pbssBANK5
   486  0051  0084               	movwf	4
   487  0052  3002               	movlw	high __pbssBANK5
   488  0053  0085               	movwf	5
   489  0054  3050               	movlw	80
   490  0055  318C  243E  3180   	fcall	clear_ram0
   491                           
   492                           ; Clear objects allocated to BANK6
   493  0058  3020               	movlw	low __pbssBANK6
   494  0059  0084               	movwf	4
   495  005A  3003               	movlw	high __pbssBANK6
   496  005B  0085               	movwf	5
   497  005C  302A               	movlw	42
   498  005D  318C  243E  3180   	fcall	clear_ram0
   499  0060                     end_of_initialization:	
   500                           ;End of C runtime variable initialization code
   501                           
   502  0060                     __end_of__initialization:	
   503  0060  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   504  0061  0020               	movlb	0
   505  0062  3180  2864         	ljmp	_main	;jump to C main() function
   506                           
   507                           	psect	bssCOMMON
   508  0076                     __pbssCOMMON:	
   509  0076                     _flags:	
   510  0076                     	ds	2
   511  0078                     _timer1ReloadVal:	
   512  0078                     	ds	2
   513                           
   514                           	psect	bssBANK1
   515  00E7                     __pbssBANK1:	
   516  00E7                     _HORN_END_STOPPED:	
   517  00E7                     	ds	2
   518  00E9                     _GAME_STOPPED:	
   519  00E9                     	ds	2
   520  00EB                     _INTRO_PLAYED:	
   521  00EB                     	ds	2
   522  00ED                     _TIME_INTRO_ELAPSED:	
   523  00ED                     	ds	2
   524  00EF                     _BTN_PRESSED:	
   525  00EF                     	ds	1
   526                           
   527                           	psect	bssBANK3
   528  01CA                     __pbssBANK3:	
   529  01CA                     _nout:	
   530  01CA                     	ds	2
   531  01CC                     _width:	
   532  01CC                     	ds	2
   533  01CE                     _prec:	
   534  01CE                     	ds	2
   535  01D0                     _CountCallBack:	
   536  01D0                     	ds	2
   537  01D2                     _DEBUG:	
   538  01D2                     	ds	2
   539  01D4                     _TMR1_INTERRUPT_TICKER_FACTOR:	
   540  01D4                     	ds	2
   541  01D6                     _analog_reading:	
   542  01D6                     	ds	2
   543  01D8                     _INTRO_FINISHED:	
   544  01D8                     	ds	2
   545  01DA                     _TMR1_InterruptHandler:	
   546  01DA                     	ds	2
   547  01DC                     _seed:	
   548  01DC                     	ds	8
   549                           
   550                           	psect	bssBANK4
   551  0220                     __pbssBANK4:	
   552  0220                     main@F3004:	
   553  0220                     	ds	20
   554  0234                     main@F3002:	
   555  0234                     	ds	20
   556  0248                     _dbuf:	
   557  0248                     	ds	32
   558                           
   559                           	psect	bssBANK5
   560  02A0                     __pbssBANK5:	
   561  02A0                     main@F3016:	
   562  02A0                     	ds	20
   563  02B4                     main@F3014:	
   564  02B4                     	ds	20
   565  02C8                     main@F3010:	
   566  02C8                     	ds	20
   567  02DC                     main@F3008:	
   568  02DC                     	ds	20
   569                           
   570                           	psect	bssBANK6
   571  0320                     __pbssBANK6:	
   572  0320                     main@F3006:	
   573  0320                     	ds	22
   574  0336                     main@F3018:	
   575  0336                     	ds	20
   576                           
   577                           	psect	clrtext
   578  0C3E                     clear_ram0:	
   579                           ;	Called with FSR0 containing the base address, and
   580                           ;	WREG with the size to clear
   581                           
   582  0C3E  0064               	clrwdt	;clear the watchdog before getting into this loop
   583  0C3F                     clrloop0:	
   584  0C3F  0180               	clrf	0	;clear RAM location pointed to by FSR
   585  0C40  3101               	addfsr 0,1
   586  0C41  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   587  0C42  2C3F               	goto	clrloop0	;have we reached the end yet?
   588  0C43  3400               	retlw	0	;all done for this memory range, return
   589                           
   590                           	psect	cstackBANK3
   591  01A0                     __pcstackBANK3:	
   592  01A0                     main@readbuffer_781:	
   593                           
   594                           ; 20 bytes @ 0x0
   595  01A0                     	ds	20
   596  01B4                     main@readbuffer_784:	
   597                           
   598                           ; 20 bytes @ 0x14
   599  01B4                     	ds	20
   600  01C8                     main@new_analog_reading:	
   601                           
   602                           ; 2 bytes @ 0x28
   603  01C8                     	ds	2
   604                           
   605                           	psect	cstackBANK2
   606  0120                     __pcstackBANK2:	
   607  0120                     main@readbuffer_758:	
   608                           
   609                           ; 20 bytes @ 0x0
   610  0120                     	ds	20
   611  0134                     main@readbuffer_769:	
   612                           
   613                           ; 20 bytes @ 0x14
   614  0134                     	ds	20
   615  0148                     main@readbuffer_773:	
   616                           
   617                           ; 20 bytes @ 0x28
   618  0148                     	ds	20
   619  015C                     main@readbuffer_778:	
   620                           
   621                           ; 20 bytes @ 0x3C
   622  015C                     	ds	20
   623                           
   624                           	psect	cstackBANK1
   625  00A0                     __pcstackBANK1:	
   626  00A0                     ?_sprintf:	
   627  00A0                     sprintf@s:	
   628                           ; 2 bytes @ 0x0
   629                           
   630                           
   631                           ; 2 bytes @ 0x0
   632  00A0                     	ds	2
   633  00A2                     sprintf@fmt:	
   634                           
   635                           ; 2 bytes @ 0x2
   636  00A2                     	ds	6
   637  00A8                     ??_sprintf:	
   638                           
   639                           ; 1 bytes @ 0x8
   640  00A8                     	ds	3
   641  00AB                     sprintf@ap:	
   642                           
   643                           ; 1 bytes @ 0xB
   644  00AB                     	ds	1
   645  00AC                     sprintf@f:	
   646                           
   647                           ; 6 bytes @ 0xC
   648  00AC                     	ds	6
   649  00B2                     ?_main:	
   650  00B2                     main@argc:	
   651                           ; 1 bytes @ 0x12
   652                           
   653                           
   654                           ; 2 bytes @ 0x12
   655  00B2                     	ds	2
   656  00B4                     main@argv:	
   657                           
   658                           ; 2 bytes @ 0x14
   659  00B4                     	ds	2
   660  00B6                     ??_main:	
   661                           
   662                           ; 1 bytes @ 0x16
   663  00B6                     	ds	3
   664  00B9                     main@readbuffer_766:	
   665                           
   666                           ; 22 bytes @ 0x19
   667  00B9                     	ds	22
   668  00CF                     main@readbuffer:	
   669                           
   670                           ; 20 bytes @ 0x2F
   671  00CF                     	ds	20
   672  00E3                     main@seconds:	
   673                           
   674                           ; 2 bytes @ 0x43
   675  00E3                     	ds	2
   676  00E5                     main@randNr:	
   677                           
   678                           ; 2 bytes @ 0x45
   679  00E5                     	ds	2
   680                           
   681                           	psect	cstackCOMMON
   682  0070                     __pcstackCOMMON:	
   683  0070                     ?_TMR1_ISR:	
   684  0070                     ?_TMR1_DefaultInterruptHandler:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ??_TMR1_DefaultInterruptHandler:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_TMR1_CallBack:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ??_TMR1_CallBack:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_putch:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_general_int:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_initialize:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_TMR1_Initialize:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_TMR1_StopTimer:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_TMR1_Reload:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_seedRand:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?i1_TMR1_WriteTimer:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_time:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     putch@c:	
   724                           ; 8 bytes @ 0x0
   725                           
   726  0070                     i1TMR1_WriteTimer@timerVal:	
   727                           ; 1 bytes @ 0x0
   728                           
   729                           
   730                           ; 2 bytes @ 0x0
   731  0070                     	ds	2
   732  0072                     ??_TMR1_ISR:	
   733  0072                     ??_general_int:	
   734                           ; 1 bytes @ 0x2
   735                           
   736  0072                     ??i1_TMR1_WriteTimer:	
   737                           ; 1 bytes @ 0x2
   738                           
   739                           
   740                           ; 1 bytes @ 0x2
   741  0072                     	ds	2
   742  0074                     ?_TMR1_SetInterruptHandler:	
   743  0074                     ?_TMR1_WriteTimer:	
   744                           ; 1 bytes @ 0x4
   745                           
   746  0074                     ??_time:	
   747                           ; 1 bytes @ 0x4
   748                           
   749  0074                     ?_srand:	
   750                           ; 1 bytes @ 0x4
   751                           
   752  0074                     ??_putch:	
   753                           ; 1 bytes @ 0x4
   754                           
   755  0074                     ??_initialize:	
   756                           ; 1 bytes @ 0x4
   757                           
   758  0074                     ?_delay100ms:	
   759                           ; 1 bytes @ 0x4
   760                           
   761  0074                     ??_TMR1_StopTimer:	
   762                           ; 1 bytes @ 0x4
   763                           
   764  0074                     ??___omul:	
   765                           ; 1 bytes @ 0x4
   766                           
   767  0074                     ??___aodiv:	
   768                           ; 1 bytes @ 0x4
   769                           
   770  0074                     ??___aomod:	
   771                           ; 1 bytes @ 0x4
   772                           
   773  0074                     ??___awdiv:	
   774                           ; 1 bytes @ 0x4
   775                           
   776  0074                     ?_strlen:	
   777                           ; 1 bytes @ 0x4
   778                           
   779  0074                     ?_fputs:	
   780                           ; 2 bytes @ 0x4
   781                           
   782  0074                     fputs@fp:	
   783                           ; 2 bytes @ 0x4
   784                           
   785  0074                     time@t:	
   786                           ; 1 bytes @ 0x4
   787                           
   788  0074                     delay100ms@n:	
   789                           ; 1 bytes @ 0x4
   790                           
   791  0074                     TMR1_SetInterruptHandler@InterruptHandler:	
   792                           ; 2 bytes @ 0x4
   793                           
   794  0074                     TMR1_WriteTimer@timerVal:	
   795                           ; 2 bytes @ 0x4
   796                           
   797  0074                     srand@s:	
   798                           ; 2 bytes @ 0x4
   799                           
   800  0074                     strlen@s:	
   801                           ; 2 bytes @ 0x4
   802                           
   803                           
   804                           ; 2 bytes @ 0x4
   805  0074                     	ds	1
   806  0075                     ??___awmod:	
   807                           
   808                           ; 1 bytes @ 0x5
   809  0075                     	ds	1
   810  0076                     ??_TMR1_SetInterruptHandler:	
   811  0076                     ??_TMR1_WriteTimer:	
   812                           ; 1 bytes @ 0x6
   813                           
   814  0076                     ??_strlen:	
   815                           ; 1 bytes @ 0x6
   816                           
   817  0076                     ??_sendOnly:	
   818                           ; 1 bytes @ 0x6
   819                           
   820  0076                     ??_TMR1_Initialize:	
   821                           ; 1 bytes @ 0x6
   822                           
   823  0076                     ??_TMR1_Reload:	
   824                           ; 1 bytes @ 0x6
   825                           
   826  0076                     ??_seedRand:	
   827                           ; 1 bytes @ 0x6
   828                           
   829                           
   830                           	psect	cstackBANK0
   831  0020                     __pcstackBANK0:	
   832                           ; 1 bytes @ 0x6
   833                           
   834  0020                     ??_srand:	
   835  0020                     ??_delay100ms:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0020                     ?_fputc:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0020                     ?___awdiv:	
   842                           ; 2 bytes @ 0x0
   843                           
   844  0020                     ?___omul:	
   845                           ; 2 bytes @ 0x0
   846                           
   847  0020                     ?___aodiv:	
   848                           ; 8 bytes @ 0x0
   849                           
   850  0020                     ?___aomod:	
   851                           ; 8 bytes @ 0x0
   852                           
   853  0020                     ___awdiv@divisor:	
   854                           ; 8 bytes @ 0x0
   855                           
   856  0020                     fputc@c:	
   857                           ; 2 bytes @ 0x0
   858                           
   859  0020                     strlen@a:	
   860                           ; 2 bytes @ 0x0
   861                           
   862  0020                     ___omul@multiplier:	
   863                           ; 2 bytes @ 0x0
   864                           
   865  0020                     ___aodiv@divisor:	
   866                           ; 8 bytes @ 0x0
   867                           
   868  0020                     ___aomod@divisor:	
   869                           ; 8 bytes @ 0x0
   870                           
   871                           
   872                           ; 8 bytes @ 0x0
   873  0020                     	ds	2
   874  0022                     ?_sendOnly:	
   875  0022                     fputc@fp:	
   876                           ; 1 bytes @ 0x2
   877                           
   878  0022                     sendOnly@buffer:	
   879                           ; 1 bytes @ 0x2
   880                           
   881  0022                     delay100ms@i:	
   882                           ; 2 bytes @ 0x2
   883                           
   884  0022                     ___awdiv@dividend:	
   885                           ; 2 bytes @ 0x2
   886                           
   887  0022                     seedRand@toc:	
   888                           ; 2 bytes @ 0x2
   889                           
   890                           
   891                           ; 8 bytes @ 0x2
   892  0022                     	ds	1
   893  0023                     ??_fputc:	
   894                           
   895                           ; 1 bytes @ 0x3
   896  0023                     	ds	1
   897  0024                     ___awdiv@counter:	
   898  0024                     sendOnly@size:	
   899                           ; 1 bytes @ 0x4
   900                           
   901                           
   902                           ; 2 bytes @ 0x4
   903  0024                     	ds	1
   904  0025                     ___awdiv@sign:	
   905                           
   906                           ; 1 bytes @ 0x5
   907  0025                     	ds	1
   908  0026                     ___awdiv@quotient:	
   909                           
   910                           ; 2 bytes @ 0x6
   911  0026                     	ds	2
   912  0028                     ??_fputs:	
   913  0028                     ___omul@multiplicand:	
   914                           ; 1 bytes @ 0x8
   915                           
   916  0028                     ___aodiv@dividend:	
   917                           ; 8 bytes @ 0x8
   918                           
   919  0028                     ___aomod@dividend:	
   920                           ; 8 bytes @ 0x8
   921                           
   922                           
   923                           ; 8 bytes @ 0x8
   924  0028                     	ds	3
   925  002B                     fputs@c:	
   926                           
   927                           ; 1 bytes @ 0xB
   928  002B                     	ds	1
   929  002C                     fputs@i:	
   930                           
   931                           ; 2 bytes @ 0xC
   932  002C                     	ds	2
   933  002E                     fputs@s:	
   934                           
   935                           ; 1 bytes @ 0xE
   936  002E                     	ds	1
   937  002F                     ?_pad:	
   938  002F                     pad@buf:	
   939                           ; 2 bytes @ 0xF
   940                           
   941                           
   942                           ; 1 bytes @ 0xF
   943  002F                     	ds	1
   944  0030                     ___aodiv@counter:	
   945  0030                     ___aomod@counter:	
   946                           ; 1 bytes @ 0x10
   947                           
   948  0030                     pad@p:	
   949                           ; 1 bytes @ 0x10
   950                           
   951  0030                     ___omul@product:	
   952                           ; 2 bytes @ 0x10
   953                           
   954                           
   955                           ; 8 bytes @ 0x10
   956  0030                     	ds	1
   957  0031                     ___aodiv@sign:	
   958  0031                     ___aomod@sign:	
   959                           ; 1 bytes @ 0x11
   960                           
   961                           
   962                           ; 1 bytes @ 0x11
   963  0031                     	ds	1
   964  0032                     ??_pad:	
   965  0032                     ?_abs:	
   966                           ; 1 bytes @ 0x12
   967                           
   968  0032                     abs@a:	
   969                           ; 2 bytes @ 0x12
   970                           
   971  0032                     ___aodiv@quotient:	
   972                           ; 2 bytes @ 0x12
   973                           
   974                           
   975                           ; 8 bytes @ 0x12
   976  0032                     	ds	1
   977  0033                     pad@i:	
   978                           
   979                           ; 2 bytes @ 0x13
   980  0033                     	ds	1
   981  0034                     ??_abs:	
   982                           
   983                           ; 1 bytes @ 0x14
   984  0034                     	ds	1
   985  0035                     pad@w:	
   986                           
   987                           ; 2 bytes @ 0x15
   988  0035                     	ds	2
   989  0037                     pad@fp:	
   990                           
   991                           ; 1 bytes @ 0x17
   992  0037                     	ds	1
   993  0038                     ?_rand:	
   994                           
   995                           ; 2 bytes @ 0x18
   996  0038                     	ds	2
   997  003A                     ??_rand:	
   998  003A                     ?_dtoa:	
   999                           ; 1 bytes @ 0x1A
  1000                           
  1001  003A                     dtoa@d:	
  1002                           ; 2 bytes @ 0x1A
  1003                           
  1004                           
  1005                           ; 8 bytes @ 0x1A
  1006  003A                     	ds	8
  1007  0042                     ??_dtoa:	
  1008  0042                     ?___awmod:	
  1009                           ; 1 bytes @ 0x22
  1010                           
  1011  0042                     ___awmod@divisor:	
  1012                           ; 2 bytes @ 0x22
  1013                           
  1014                           
  1015                           ; 2 bytes @ 0x22
  1016  0042                     	ds	2
  1017  0044                     ___awmod@dividend:	
  1018                           
  1019                           ; 2 bytes @ 0x24
  1020  0044                     	ds	1
  1021  0045                     dtoa@fp:	
  1022                           
  1023                           ; 1 bytes @ 0x25
  1024  0045                     	ds	1
  1025  0046                     ___awmod@counter:	
  1026  0046                     _dtoa$861:	
  1027                           ; 1 bytes @ 0x26
  1028                           
  1029                           
  1030                           ; 2 bytes @ 0x26
  1031  0046                     	ds	1
  1032  0047                     ___awmod@sign:	
  1033                           
  1034                           ; 1 bytes @ 0x27
  1035  0047                     	ds	1
  1036  0048                     dtoa@p:	
  1037                           
  1038                           ; 2 bytes @ 0x28
  1039  0048                     	ds	2
  1040  004A                     dtoa@w:	
  1041                           
  1042                           ; 2 bytes @ 0x2A
  1043  004A                     	ds	2
  1044  004C                     dtoa@s:	
  1045                           
  1046                           ; 2 bytes @ 0x2C
  1047  004C                     	ds	2
  1048  004E                     dtoa@n:	
  1049                           
  1050                           ; 8 bytes @ 0x2E
  1051  004E                     	ds	8
  1052  0056                     dtoa@i:	
  1053                           
  1054                           ; 2 bytes @ 0x36
  1055  0056                     	ds	2
  1056  0058                     ?_vfpfcnvrt:	
  1057  0058                     vfpfcnvrt@fmt:	
  1058                           ; 2 bytes @ 0x38
  1059                           
  1060                           
  1061                           ; 1 bytes @ 0x38
  1062  0058                     	ds	1
  1063  0059                     vfpfcnvrt@ap:	
  1064                           
  1065                           ; 1 bytes @ 0x39
  1066  0059                     	ds	1
  1067  005A                     ??_vfpfcnvrt:	
  1068                           
  1069                           ; 1 bytes @ 0x3A
  1070  005A                     	ds	5
  1071  005F                     vfpfcnvrt@ll:	
  1072                           
  1073                           ; 8 bytes @ 0x3F
  1074  005F                     	ds	8
  1075  0067                     vfpfcnvrt@fp:	
  1076                           
  1077                           ; 1 bytes @ 0x47
  1078  0067                     	ds	1
  1079  0068                     ?_vfprintf:	
  1080  0068                     vfprintf@fmt:	
  1081                           ; 2 bytes @ 0x48
  1082                           
  1083                           
  1084                           ; 2 bytes @ 0x48
  1085  0068                     	ds	2
  1086  006A                     vfprintf@ap:	
  1087                           
  1088                           ; 1 bytes @ 0x4A
  1089  006A                     	ds	1
  1090  006B                     ??_vfprintf:	
  1091                           
  1092                           ; 1 bytes @ 0x4B
  1093  006B                     	ds	2
  1094  006D                     vfprintf@fp:	
  1095                           
  1096                           ; 1 bytes @ 0x4D
  1097  006D                     	ds	1
  1098  006E                     vfprintf@cfmt:	
  1099                           
  1100                           ; 2 bytes @ 0x4E
  1101  006E                     	ds	2
  1102                           
  1103                           	psect	maintext
  1104  0064                     __pmaintext:	
  1105 ;;
  1106 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1107 ;;
  1108 ;; *************** function _main *****************
  1109 ;; Defined at:
  1110 ;;		line 320 in file "newmain.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  argc            2   18[BANK1 ] int 
  1113 ;;  argv            2   20[BANK1 ] PTR PTR unsigned char 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  readbuffer     20   20[BANK2 ] unsigned char [20]
  1116 ;;  readbuffer     22   25[BANK1 ] unsigned char [22]
  1117 ;;  readbuffer     20   20[BANK3 ] unsigned char [20]
  1118 ;;  readbuffer     20    0[BANK3 ] unsigned char [20]
  1119 ;;  readbuffer     20   60[BANK2 ] unsigned char [20]
  1120 ;;  randNr          2   69[BANK1 ] int 
  1121 ;;  seconds         2   67[BANK1 ] int 
  1122 ;;  readbuffer     20   40[BANK2 ] unsigned char [20]
  1123 ;;  readbuffer     20    0[BANK2 ] unsigned char [20]
  1124 ;;  readbuffer     20   47[BANK1 ] unsigned char [20]
  1125 ;;  new_analog_r    2   40[BANK3 ] int 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : B1F/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1135 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1136 ;;      Locals:         0       0      46      80      42       0       0       0       0       0       0       0       
      +0       0
  1137 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  1138 ;;      Totals:         0       0      53      80      42       0       0       0       0       0       0       0       
      +0       0
  1139 ;;Total ram usage:      175 bytes
  1140 ;; Hardware stack levels required when called:   12
  1141 ;; This function calls:
  1142 ;;		_TMR1_Initialize
  1143 ;;		_TMR1_Reload
  1144 ;;		_TMR1_StopTimer
  1145 ;;		___awdiv
  1146 ;;		___awmod
  1147 ;;		_delay100ms
  1148 ;;		_initialize
  1149 ;;		_rand
  1150 ;;		_seedRand
  1151 ;;		_sendOnly
  1152 ;;		_sprintf
  1153 ;;		_strlen
  1154 ;; This function is called by:
  1155 ;;		Startup code after reset
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           
  1160                           ;psect for function _main
  1161  0064                     _main:	
  1162  0064                     l2698:	
  1163                           ;incstack = 0
  1164                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1165                           
  1166                           
  1167                           ;newmain.c: 321:     initialize();
  1168  0064  3187  27BF  3180   	fcall	_initialize
  1169                           
  1170                           ;newmain.c: 322:     TMR1_Initialize();
  1171  0067  318C  2481  3180   	fcall	_TMR1_Initialize
  1172  006A                     l2700:	
  1173                           
  1174                           ;newmain.c: 323:     TMR1_StopTimer();
  1175  006A  318C  242F  3180   	fcall	_TMR1_StopTimer
  1176  006D                     l2702:	
  1177                           
  1178                           ;newmain.c: 325:     TIME_INTRO_ELAPSED = 0;
  1179  006D  0021               	movlb	1	; select bank1
  1180  006E  01ED               	clrf	_TIME_INTRO_ELAPSED^(0+128)	;volatile
  1181  006F  01EE               	clrf	(_TIME_INTRO_ELAPSED+1)^(0+128)	;volatile
  1182  0070                     l2704:	
  1183                           
  1184                           ;newmain.c: 326:     INTRO_PLAYED = 0;
  1185  0070  01EB               	clrf	_INTRO_PLAYED^(0+128)	;volatile
  1186  0071  01EC               	clrf	(_INTRO_PLAYED+1)^(0+128)	;volatile
  1187  0072                     l2706:	
  1188                           
  1189                           ;newmain.c: 327:     INTRO_FINISHED = 0;
  1190  0072  0023               	movlb	3	; select bank3
  1191  0073  01D8               	clrf	_INTRO_FINISHED^(0+384)	;volatile
  1192  0074  01D9               	clrf	(_INTRO_FINISHED+1)^(0+384)	;volatile
  1193  0075                     l2708:	
  1194                           
  1195                           ;newmain.c: 328:     GAME_STOPPED = 0;
  1196  0075  0021               	movlb	1	; select bank1
  1197  0076  01E9               	clrf	_GAME_STOPPED^(0+128)	;volatile
  1198  0077  01EA               	clrf	(_GAME_STOPPED+1)^(0+128)	;volatile
  1199  0078                     l2710:	
  1200                           
  1201                           ;newmain.c: 329:     HORN_END_STOPPED = 0;
  1202  0078  01E7               	clrf	_HORN_END_STOPPED^(0+128)	;volatile
  1203  0079  01E8               	clrf	(_HORN_END_STOPPED+1)^(0+128)	;volatile
  1204  007A                     l2712:	
  1205                           
  1206                           ;newmain.c: 331:     delay100ms(20);
  1207  007A  3014               	movlw	20
  1208  007B  00F4               	movwf	delay100ms@n
  1209  007C  3000               	movlw	0
  1210  007D  00F5               	movwf	delay100ms@n+1
  1211  007E  318D  2507  3180   	fcall	_delay100ms
  1212  0081                     l2714:	
  1213                           
  1214                           ;newmain.c: 332:     PORTBbits.RB4 = 0;
  1215  0081  0020               	movlb	0	; select bank0
  1216  0082  120D               	bcf	13,4	;volatile
  1217  0083                     l2716:	
  1218                           
  1219                           ;newmain.c: 334:     seedRand();
  1220  0083  3187  27F3  3180   	fcall	_seedRand
  1221  0086                     l2718:	
  1222                           
  1223                           ;newmain.c: 336:     sendOnly("Zylopfa Foozball Timer\r\n", 24);
  1224  0086  3000               	movlw	low (STR_1| (0+32768))
  1225  0087  0020               	movlb	0	; select bank0
  1226  0088  00A2               	movwf	sendOnly@buffer
  1227  0089  3090               	movlw	high (STR_1| (0+32768))
  1228  008A  00A3               	movwf	sendOnly@buffer+1
  1229  008B  3018               	movlw	24
  1230  008C  00A4               	movwf	sendOnly@size
  1231  008D  3000               	movlw	0
  1232  008E  00A5               	movwf	sendOnly@size+1
  1233  008F  3180  2002  3180   	fcall	_sendOnly
  1234  0092                     l2720:	
  1235                           
  1236                           ;newmain.c: 338:     ADCON0bits.ADON = 1;
  1237  0092  0021               	movlb	1	; select bank1
  1238  0093  141D               	bsf	29,0	;volatile
  1239  0094                     l2722:	
  1240                           
  1241                           ;newmain.c: 339:     INTCONbits.IOCIE = 1;
  1242  0094  158B               	bsf	11,3	;volatile
  1243  0095                     l2724:	
  1244                           
  1245                           ;newmain.c: 340:     IOCAPbits.IOCAP0 = 1;
  1246  0095  0027               	movlb	7	; select bank7
  1247  0096  1411               	bsf	17,0	;volatile
  1248  0097                     l2726:	
  1249                           
  1250                           ;newmain.c: 342:     TMR1_INTERRUPT_TICKER_FACTOR = 64;
  1251  0097  3040               	movlw	64
  1252  0098  0023               	movlb	3	; select bank3
  1253  0099  00D4               	movwf	_TMR1_INTERRUPT_TICKER_FACTOR^(0+384)	;volatile
  1254  009A  3000               	movlw	0
  1255  009B  00D5               	movwf	(_TMR1_INTERRUPT_TICKER_FACTOR^(0+384)+1)	;volatile
  1256  009C                     l180:	
  1257                           ;newmain.c: 344:     while (42) {
  1258                           
  1259                           
  1260                           ;newmain.c: 346:         ADCON0bits.GO_nDONE=1;
  1261  009C  0021               	movlb	1	; select bank1
  1262  009D  149D               	bsf	29,1	;volatile
  1263                           
  1264                           ;newmain.c: 347:         ADCON0bits.GO = 1;
  1265  009E  149D               	bsf	29,1	;volatile
  1266  009F                     l181:	
  1267                           ;newmain.c: 348:         while(ADCON0bits.GO_nDONE==1);
  1268                           
  1269  009F  189D               	btfsc	29,1	;volatile
  1270  00A0  28A2               	goto	u2931
  1271  00A1  28A3               	goto	u2930
  1272  00A2                     u2931:	
  1273  00A2  289F               	goto	l181
  1274  00A3                     u2930:	
  1275  00A3                     l2728:	
  1276                           
  1277                           ;newmain.c: 349:         int new_analog_reading= ADRESL + (ADRESH *256);
  1278  00A3  081C               	movf	28,w	;volatile
  1279  00A4  0023               	movlb	3	; select bank3
  1280  00A5  00C9               	movwf	(main@new_analog_reading+1)^(0+384)
  1281  00A6  0021               	movlb	1	; select bank1
  1282  00A7  081B               	movf	27,w	;volatile
  1283  00A8  0023               	movlb	3	; select bank3
  1284  00A9  00C8               	movwf	main@new_analog_reading^(0+384)
  1285  00AA                     l2730:	
  1286                           
  1287                           ;newmain.c: 350:         if ( (new_analog_reading > analog_reading+1) || (new_analog_rea
      +                          ding < analog_reading-1)) {
  1288  00AA  0856               	movf	_analog_reading^(0+384),w
  1289  00AB  3E01               	addlw	1
  1290  00AC  0021               	movlb	1	; select bank1
  1291  00AD  00B6               	movwf	??_main^(0+128)
  1292  00AE  3000               	movlw	0
  1293  00AF  0023               	movlb	3	; select bank3
  1294  00B0  3D57               	addwfc	(_analog_reading+1)^(0+384),w
  1295  00B1  0021               	movlb	1	; select bank1
  1296  00B2  00B7               	movwf	(??_main+1)^(0+128)
  1297  00B3  0837               	movf	(??_main+1)^(0+128),w
  1298  00B4  3A80               	xorlw	128
  1299  00B5  00B8               	movwf	(??_main+2)^(0+128)
  1300  00B6  0023               	movlb	3	; select bank3
  1301  00B7  0849               	movf	(main@new_analog_reading+1)^(0+384),w
  1302  00B8  3A80               	xorlw	128
  1303  00B9  0021               	movlb	1	; select bank1
  1304  00BA  0238               	subwf	(??_main+2)^(0+128),w
  1305  00BB  1D03               	skipz
  1306  00BC  28C1               	goto	u2945
  1307  00BD  0023               	movlb	3	; select bank3
  1308  00BE  0848               	movf	main@new_analog_reading^(0+384),w
  1309  00BF  0021               	movlb	1	; select bank1
  1310  00C0  0236               	subwf	??_main^(0+128),w
  1311  00C1                     u2945:	
  1312  00C1  1C03               	skipc
  1313  00C2  28C4               	goto	u2941
  1314  00C3  28C5               	goto	u2940
  1315  00C4                     u2941:	
  1316  00C4  28E0               	goto	l2734
  1317  00C5                     u2940:	
  1318  00C5                     l2732:	
  1319  00C5  0023               	movlb	3	; select bank3
  1320  00C6  0856               	movf	_analog_reading^(0+384),w
  1321  00C7  3EFF               	addlw	255
  1322  00C8  0021               	movlb	1	; select bank1
  1323  00C9  00B6               	movwf	??_main^(0+128)
  1324  00CA  30FF               	movlw	255
  1325  00CB  0023               	movlb	3	; select bank3
  1326  00CC  3D57               	addwfc	(_analog_reading+1)^(0+384),w
  1327  00CD  0021               	movlb	1	; select bank1
  1328  00CE  00B7               	movwf	(??_main+1)^(0+128)
  1329  00CF  0023               	movlb	3	; select bank3
  1330  00D0  0849               	movf	(main@new_analog_reading+1)^(0+384),w
  1331  00D1  3A80               	xorlw	128
  1332  00D2  0021               	movlb	1	; select bank1
  1333  00D3  00B8               	movwf	(??_main+2)^(0+128)
  1334  00D4  0837               	movf	(??_main+1)^(0+128),w
  1335  00D5  3A80               	xorlw	128
  1336  00D6  0238               	subwf	(??_main+2)^(0+128),w
  1337  00D7  1D03               	skipz
  1338  00D8  28DC               	goto	u2955
  1339  00D9  0836               	movf	??_main^(0+128),w
  1340  00DA  0023               	movlb	3	; select bank3
  1341  00DB  0248               	subwf	main@new_analog_reading^(0+384),w
  1342  00DC                     u2955:	
  1343  00DC  1803               	skipnc
  1344  00DD  28DF               	goto	u2951
  1345  00DE  28E0               	goto	u2950
  1346  00DF                     u2951:	
  1347  00DF  2917               	goto	l2742
  1348  00E0                     u2950:	
  1349  00E0                     l2734:	
  1350                           
  1351                           ;newmain.c: 351:             unsigned char readbuffer[20] = {0};
  1352  00E0  30CF               	movlw	low main@readbuffer
  1353  00E1  0086               	movwf	6
  1354  00E2  3000               	movlw	high main@readbuffer
  1355  00E3  0087               	movwf	7
  1356  00E4  3014               	movlw	20
  1357  00E5  0021               	movlb	1	; select bank1
  1358  00E6  00B6               	movwf	??_main^(0+128)
  1359  00E7  3000               	movlw	0
  1360  00E8                     u2960:	
  1361  00E8  001E               	movwi fsr1++
  1362  00E9  0BB6               	decfsz	??_main^(0+128),f
  1363  00EA  28E8               	goto	u2960
  1364  00EB                     l2736:	
  1365                           
  1366                           ;newmain.c: 352:             sprintf(readbuffer,"%d\r\n",new_analog_reading);
  1367  00EB  30CF               	movlw	low main@readbuffer
  1368  00EC  00A0               	movwf	sprintf@s^(0+128)
  1369  00ED  3000               	movlw	high main@readbuffer
  1370  00EE  00A1               	movwf	(sprintf@s+1)^(0+128)
  1371  00EF  3081               	movlw	low (STR_2| (0+32768))
  1372  00F0  00A2               	movwf	sprintf@fmt^(0+128)
  1373  00F1  3090               	movlw	high (STR_2| (0+32768))
  1374  00F2  00A3               	movwf	(sprintf@fmt^(0+128)+1)
  1375  00F3  0023               	movlb	3	; select bank3
  1376  00F4  0849               	movf	(main@new_analog_reading+1)^(0+384),w
  1377  00F5  0021               	movlb	1	; select bank1
  1378  00F6  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  1379  00F7  0023               	movlb	3	; select bank3
  1380  00F8  0848               	movf	main@new_analog_reading^(0+384),w
  1381  00F9  0021               	movlb	1	; select bank1
  1382  00FA  00A4               	movwf	(?_sprintf^(0+128)+4)
  1383  00FB  318D  2555  3180   	fcall	_sprintf
  1384  00FE                     l2738:	
  1385                           
  1386                           ;newmain.c: 353:             sendOnly(readbuffer,strlen(readbuffer));
  1387  00FE  30CF               	movlw	low main@readbuffer
  1388  00FF  0020               	movlb	0	; select bank0
  1389  0100  00A2               	movwf	sendOnly@buffer
  1390  0101  3000               	movlw	high main@readbuffer
  1391  0102  00A3               	movwf	sendOnly@buffer+1
  1392  0103  30CF               	movlw	low main@readbuffer
  1393  0104  00F4               	movwf	strlen@s
  1394  0105  3000               	movlw	high main@readbuffer
  1395  0106  00F5               	movwf	strlen@s+1
  1396  0107  318C  24B1  3180   	fcall	_strlen
  1397  010A  0875               	movf	?_strlen+1,w
  1398  010B  0020               	movlb	0	; select bank0
  1399  010C  00A5               	movwf	sendOnly@size+1
  1400  010D  0874               	movf	?_strlen,w
  1401  010E  00A4               	movwf	sendOnly@size
  1402  010F  3180  2002  3180   	fcall	_sendOnly
  1403  0112                     l2740:	
  1404                           
  1405                           ;newmain.c: 354:             analog_reading = new_analog_reading;
  1406  0112  0023               	movlb	3	; select bank3
  1407  0113  0849               	movf	(main@new_analog_reading+1)^(0+384),w
  1408  0114  00D7               	movwf	(_analog_reading+1)^(0+384)
  1409  0115  0848               	movf	main@new_analog_reading^(0+384),w
  1410  0116  00D6               	movwf	_analog_reading^(0+384)
  1411  0117                     l2742:	
  1412                           
  1413                           ;newmain.c: 357:         if (BTN_PRESSED) {
  1414  0117  0021               	movlb	1	; select bank1
  1415  0118  086F               	movf	_BTN_PRESSED^(0+128),w	;volatile
  1416  0119  1903               	btfsc	3,2
  1417  011A  291C               	goto	u2971
  1418  011B  291D               	goto	u2970
  1419  011C                     u2971:	
  1420  011C  29D9               	goto	l2788
  1421  011D                     u2970:	
  1422  011D                     l2744:	
  1423                           
  1424                           ;newmain.c: 358:             unsigned char readbuffer[20] = {0};
  1425  011D  3020               	movlw	low main@readbuffer_758
  1426  011E  0086               	movwf	6
  1427  011F  3001               	movlw	high main@readbuffer_758
  1428  0120  0087               	movwf	7
  1429  0121  3014               	movlw	20
  1430  0122  00B6               	movwf	??_main^(0+128)
  1431  0123  3000               	movlw	0
  1432  0124                     u2980:	
  1433  0124  001E               	movwi fsr1++
  1434  0125  0BB6               	decfsz	??_main^(0+128),f
  1435  0126  2924               	goto	u2980
  1436  0127                     l2746:	
  1437                           
  1438                           ;newmain.c: 359:             LATBbits.LATB4 ^= 1;
  1439  0127  0022               	movlb	2	; select bank2
  1440  0128  0E0D               	swapf	13,w	;volatile
  1441  0129  3901               	andlw	1
  1442  012A  0021               	movlb	1	; select bank1
  1443  012B  00B6               	movwf	??_main^(0+128)
  1444  012C  3001               	movlw	1
  1445  012D  06B6               	xorwf	??_main^(0+128),f
  1446  012E  0EB6               	swapf	??_main^(0+128),f
  1447  012F  0022               	movlb	2	; select bank2
  1448  0130  080D               	movf	13,w	;volatile
  1449  0131  0021               	movlb	1	; select bank1
  1450  0132  0636               	xorwf	??_main^(0+128),w
  1451  0133  39EF               	andlw	-17
  1452  0134  0636               	xorwf	??_main^(0+128),w
  1453  0135  0022               	movlb	2	; select bank2
  1454  0136  008D               	movwf	13	;volatile
  1455  0137                     l2748:	
  1456                           
  1457                           ;newmain.c: 361:             if (PORTBbits.RB4 == 1) {
  1458  0137  0020               	movlb	0	; select bank0
  1459  0138  1E0D               	btfss	13,4	;volatile
  1460  0139  293B               	goto	u2991
  1461  013A  293C               	goto	u2990
  1462  013B                     u2991:	
  1463  013B  297D               	goto	l2764
  1464  013C                     u2990:	
  1465  013C                     l2750:	
  1466                           
  1467                           ;newmain.c: 362:                 PORTBbits.RB6 = 1;
  1468  013C  170D               	bsf	13,6	;volatile
  1469  013D                     l2752:	
  1470                           
  1471                           ;newmain.c: 363:                 INTRO_PLAYED = 0;
  1472  013D  0021               	movlb	1	; select bank1
  1473  013E  01EB               	clrf	_INTRO_PLAYED^(0+128)	;volatile
  1474  013F  01EC               	clrf	(_INTRO_PLAYED+1)^(0+128)	;volatile
  1475                           
  1476                           ;newmain.c: 364:                 INTRO_FINISHED = 0;
  1477  0140  0023               	movlb	3	; select bank3
  1478  0141  01D8               	clrf	_INTRO_FINISHED^(0+384)	;volatile
  1479  0142  01D9               	clrf	(_INTRO_FINISHED+1)^(0+384)	;volatile
  1480                           
  1481                           ;newmain.c: 365:                 TIME_INTRO_ELAPSED = 0;
  1482  0143  0021               	movlb	1	; select bank1
  1483  0144  01ED               	clrf	_TIME_INTRO_ELAPSED^(0+128)	;volatile
  1484  0145  01EE               	clrf	(_TIME_INTRO_ELAPSED+1)^(0+128)	;volatile
  1485                           
  1486                           ;newmain.c: 366:                 GAME_STOPPED = 0;
  1487  0146  01E9               	clrf	_GAME_STOPPED^(0+128)	;volatile
  1488  0147  01EA               	clrf	(_GAME_STOPPED+1)^(0+128)	;volatile
  1489                           
  1490                           ;newmain.c: 367:                 HORN_END_STOPPED = 0;
  1491  0148  01E7               	clrf	_HORN_END_STOPPED^(0+128)	;volatile
  1492  0149  01E8               	clrf	(_HORN_END_STOPPED+1)^(0+128)	;volatile
  1493  014A                     l2754:	
  1494                           
  1495                           ;newmain.c: 370:                 TMR1_INTERRUPT_TICKER_FACTOR = 64;
  1496  014A  3040               	movlw	64
  1497  014B  0023               	movlb	3	; select bank3
  1498  014C  00D4               	movwf	_TMR1_INTERRUPT_TICKER_FACTOR^(0+384)	;volatile
  1499  014D  3000               	movlw	0
  1500  014E  00D5               	movwf	(_TMR1_INTERRUPT_TICKER_FACTOR^(0+384)+1)	;volatile
  1501  014F                     l2756:	
  1502                           
  1503                           ;newmain.c: 371:                 TMR1_Reload();
  1504  014F  318C  2454  3180   	fcall	_TMR1_Reload
  1505  0152                     l2758:	
  1506                           
  1507                           ;newmain.c: 373:                 unsigned char readbuffer[22] = {0};
  1508  0152  30B9               	movlw	low main@readbuffer_766
  1509  0153  0086               	movwf	6
  1510  0154  3000               	movlw	high main@readbuffer_766
  1511  0155  0087               	movwf	7
  1512  0156  3016               	movlw	22
  1513  0157  0021               	movlb	1	; select bank1
  1514  0158  00B6               	movwf	??_main^(0+128)
  1515  0159  3000               	movlw	0
  1516  015A                     u3000:	
  1517  015A  001E               	movwi fsr1++
  1518  015B  0BB6               	decfsz	??_main^(0+128),f
  1519  015C  295A               	goto	u3000
  1520  015D                     l2760:	
  1521                           
  1522                           ;newmain.c: 374:                 sprintf(readbuffer,"MP3 ON rst. timer!\r\n");
  1523  015D  30B9               	movlw	low main@readbuffer_766
  1524  015E  00A0               	movwf	sprintf@s^(0+128)
  1525  015F  3000               	movlw	high main@readbuffer_766
  1526  0160  00A1               	movwf	(sprintf@s+1)^(0+128)
  1527  0161  3019               	movlw	low (STR_3| (0+32768))
  1528  0162  00A2               	movwf	sprintf@fmt^(0+128)
  1529  0163  3090               	movlw	high (STR_3| (0+32768))
  1530  0164  00A3               	movwf	(sprintf@fmt^(0+128)+1)
  1531  0165  318D  2555  3180   	fcall	_sprintf
  1532  0168                     l2762:	
  1533                           
  1534                           ;newmain.c: 375:                 sendOnly(readbuffer,strlen(readbuffer));
  1535  0168  30B9               	movlw	low main@readbuffer_766
  1536  0169  0020               	movlb	0	; select bank0
  1537  016A  00A2               	movwf	sendOnly@buffer
  1538  016B  3000               	movlw	high main@readbuffer_766
  1539  016C  00A3               	movwf	sendOnly@buffer+1
  1540  016D  30B9               	movlw	low main@readbuffer_766
  1541  016E  00F4               	movwf	strlen@s
  1542  016F  3000               	movlw	high main@readbuffer_766
  1543  0170  00F5               	movwf	strlen@s+1
  1544  0171  318C  24B1  3180   	fcall	_strlen
  1545  0174  0875               	movf	?_strlen+1,w
  1546  0175  0020               	movlb	0	; select bank0
  1547  0176  00A5               	movwf	sendOnly@size+1
  1548  0177  0874               	movf	?_strlen,w
  1549  0178  00A4               	movwf	sendOnly@size
  1550  0179  3180  2002  3180   	fcall	_sendOnly
  1551                           
  1552                           ;newmain.c: 376:             } else {
  1553  017C  29B7               	goto	l2782
  1554  017D                     l2764:	
  1555                           
  1556                           ;newmain.c: 377:                 TMR1_StopTimer();
  1557  017D  318C  242F  3180   	fcall	_TMR1_StopTimer
  1558  0180                     l2766:	
  1559                           
  1560                           ;newmain.c: 378:                 INTRO_PLAYED = 0;
  1561  0180  0021               	movlb	1	; select bank1
  1562  0181  01EB               	clrf	_INTRO_PLAYED^(0+128)	;volatile
  1563  0182  01EC               	clrf	(_INTRO_PLAYED+1)^(0+128)	;volatile
  1564  0183                     l2768:	
  1565                           
  1566                           ;newmain.c: 379:                 INTRO_FINISHED = 0;
  1567  0183  0023               	movlb	3	; select bank3
  1568  0184  01D8               	clrf	_INTRO_FINISHED^(0+384)	;volatile
  1569  0185  01D9               	clrf	(_INTRO_FINISHED+1)^(0+384)	;volatile
  1570  0186                     l2770:	
  1571                           
  1572                           ;newmain.c: 380:                 TIME_INTRO_ELAPSED = 0;
  1573  0186  0021               	movlb	1	; select bank1
  1574  0187  01ED               	clrf	_TIME_INTRO_ELAPSED^(0+128)	;volatile
  1575  0188  01EE               	clrf	(_TIME_INTRO_ELAPSED+1)^(0+128)	;volatile
  1576  0189                     l2772:	
  1577                           
  1578                           ;newmain.c: 381:                 GAME_STOPPED = 0;
  1579  0189  01E9               	clrf	_GAME_STOPPED^(0+128)	;volatile
  1580  018A  01EA               	clrf	(_GAME_STOPPED+1)^(0+128)	;volatile
  1581  018B                     l2774:	
  1582                           
  1583                           ;newmain.c: 382:                 PORTBbits.RB6 = 0;
  1584  018B  0020               	movlb	0	; select bank0
  1585  018C  130D               	bcf	13,6	;volatile
  1586  018D                     l2776:	
  1587                           
  1588                           ;newmain.c: 383:                 unsigned char readbuffer[20] = {0};
  1589  018D  3034               	movlw	low main@readbuffer_769
  1590  018E  0086               	movwf	6
  1591  018F  3001               	movlw	high main@readbuffer_769
  1592  0190  0087               	movwf	7
  1593  0191  3014               	movlw	20
  1594  0192  0021               	movlb	1	; select bank1
  1595  0193  00B6               	movwf	??_main^(0+128)
  1596  0194  3000               	movlw	0
  1597  0195                     u3010:	
  1598  0195  001E               	movwi fsr1++
  1599  0196  0BB6               	decfsz	??_main^(0+128),f
  1600  0197  2995               	goto	u3010
  1601  0198                     l2778:	
  1602                           
  1603                           ;newmain.c: 384:                 sprintf(readbuffer,"MP3 OFF!\r\n");
  1604  0198  3034               	movlw	low main@readbuffer_769
  1605  0199  00A0               	movwf	sprintf@s^(0+128)
  1606  019A  3001               	movlw	high main@readbuffer_769
  1607  019B  00A1               	movwf	(sprintf@s+1)^(0+128)
  1608  019C  3076               	movlw	low (STR_4| (0+32768))
  1609  019D  00A2               	movwf	sprintf@fmt^(0+128)
  1610  019E  3090               	movlw	high (STR_4| (0+32768))
  1611  019F  00A3               	movwf	(sprintf@fmt^(0+128)+1)
  1612  01A0  318D  2555  3180   	fcall	_sprintf
  1613  01A3                     l2780:	
  1614                           
  1615                           ;newmain.c: 385:                 sendOnly(readbuffer,strlen(readbuffer));
  1616  01A3  3034               	movlw	low main@readbuffer_769
  1617  01A4  0020               	movlb	0	; select bank0
  1618  01A5  00A2               	movwf	sendOnly@buffer
  1619  01A6  3001               	movlw	high main@readbuffer_769
  1620  01A7  00A3               	movwf	sendOnly@buffer+1
  1621  01A8  3034               	movlw	low main@readbuffer_769
  1622  01A9  00F4               	movwf	strlen@s
  1623  01AA  3001               	movlw	high main@readbuffer_769
  1624  01AB  00F5               	movwf	strlen@s+1
  1625  01AC  318C  24B1  3180   	fcall	_strlen
  1626  01AF  0875               	movf	?_strlen+1,w
  1627  01B0  0020               	movlb	0	; select bank0
  1628  01B1  00A5               	movwf	sendOnly@size+1
  1629  01B2  0874               	movf	?_strlen,w
  1630  01B3  00A4               	movwf	sendOnly@size
  1631  01B4  3180  2002  3180   	fcall	_sendOnly
  1632  01B7                     l2782:	
  1633                           
  1634                           ;newmain.c: 388:             sprintf(readbuffer,"BUTTON PRESSED!\r\n");
  1635  01B7  3020               	movlw	low main@readbuffer_758
  1636  01B8  0021               	movlb	1	; select bank1
  1637  01B9  00A0               	movwf	sprintf@s^(0+128)
  1638  01BA  3001               	movlw	high main@readbuffer_758
  1639  01BB  00A1               	movwf	(sprintf@s+1)^(0+128)
  1640  01BC  302E               	movlw	low (STR_5| (0+32768))
  1641  01BD  00A2               	movwf	sprintf@fmt^(0+128)
  1642  01BE  3090               	movlw	high (STR_5| (0+32768))
  1643  01BF  00A3               	movwf	(sprintf@fmt^(0+128)+1)
  1644  01C0  318D  2555  3180   	fcall	_sprintf
  1645  01C3                     l2784:	
  1646                           
  1647                           ;newmain.c: 389:             sendOnly(readbuffer,strlen(readbuffer));
  1648  01C3  3020               	movlw	low main@readbuffer_758
  1649  01C4  0020               	movlb	0	; select bank0
  1650  01C5  00A2               	movwf	sendOnly@buffer
  1651  01C6  3001               	movlw	high main@readbuffer_758
  1652  01C7  00A3               	movwf	sendOnly@buffer+1
  1653  01C8  3020               	movlw	low main@readbuffer_758
  1654  01C9  00F4               	movwf	strlen@s
  1655  01CA  3001               	movlw	high main@readbuffer_758
  1656  01CB  00F5               	movwf	strlen@s+1
  1657  01CC  318C  24B1  3180   	fcall	_strlen
  1658  01CF  0875               	movf	?_strlen+1,w
  1659  01D0  0020               	movlb	0	; select bank0
  1660  01D1  00A5               	movwf	sendOnly@size+1
  1661  01D2  0874               	movf	?_strlen,w
  1662  01D3  00A4               	movwf	sendOnly@size
  1663  01D4  3180  2002  3180   	fcall	_sendOnly
  1664  01D7                     l2786:	
  1665                           
  1666                           ;newmain.c: 390:             BTN_PRESSED = 0;
  1667  01D7  0021               	movlb	1	; select bank1
  1668  01D8  01EF               	clrf	_BTN_PRESSED^(0+128)	;volatile
  1669  01D9                     l2788:	
  1670                           
  1671                           ;newmain.c: 393:         if (TIME_INTRO_ELAPSED == 1 && INTRO_PLAYED == 0 ) {
  1672  01D9  036D               	decf	_TIME_INTRO_ELAPSED^(0+128),w	;volatile
  1673  01DA  046E               	iorwf	(_TIME_INTRO_ELAPSED+1)^(0+128),w	;volatile
  1674  01DB  1D03               	btfss	3,2
  1675  01DC  29DE               	goto	u3021
  1676  01DD  29DF               	goto	u3020
  1677  01DE                     u3021:	
  1678  01DE  2A23               	goto	l2808
  1679  01DF                     u3020:	
  1680  01DF                     l2790:	
  1681  01DF  086B               	movf	_INTRO_PLAYED^(0+128),w	;volatile
  1682  01E0  046C               	iorwf	(_INTRO_PLAYED+1)^(0+128),w	;volatile
  1683  01E1  1D03               	btfss	3,2
  1684  01E2  29E4               	goto	u3031
  1685  01E3  29E5               	goto	u3030
  1686  01E4                     u3031:	
  1687  01E4  2A23               	goto	l2808
  1688  01E5                     u3030:	
  1689  01E5                     l2792:	
  1690                           
  1691                           ;newmain.c: 394:           TMR1_StopTimer();
  1692  01E5  318C  242F  3180   	fcall	_TMR1_StopTimer
  1693  01E8                     l2794:	
  1694                           
  1695                           ;newmain.c: 395:           PORTCbits.RC2 = 1;
  1696  01E8  0020               	movlb	0	; select bank0
  1697  01E9  150E               	bsf	14,2	;volatile
  1698  01EA                     l2796:	
  1699                           
  1700                           ;newmain.c: 396:           delay100ms(6);
  1701  01EA  3006               	movlw	6
  1702  01EB  00F4               	movwf	delay100ms@n
  1703  01EC  3000               	movlw	0
  1704  01ED  00F5               	movwf	delay100ms@n+1
  1705  01EE  318D  2507  3180   	fcall	_delay100ms
  1706  01F1                     l2798:	
  1707                           
  1708                           ;newmain.c: 397:           PORTCbits.RC2 = 0;
  1709  01F1  0020               	movlb	0	; select bank0
  1710  01F2  110E               	bcf	14,2	;volatile
  1711                           
  1712                           ;newmain.c: 398:           INTRO_PLAYED = 1;
  1713  01F3  3001               	movlw	1
  1714  01F4  0021               	movlb	1	; select bank1
  1715  01F5  00EB               	movwf	_INTRO_PLAYED^(0+128)	;volatile
  1716  01F6  3000               	movlw	0
  1717  01F7  00EC               	movwf	(_INTRO_PLAYED^(0+128)+1)	;volatile
  1718  01F8                     l2800:	
  1719                           
  1720                           ;newmain.c: 399:           TIME_INTRO_ELAPSED = 0;
  1721  01F8  01ED               	clrf	_TIME_INTRO_ELAPSED^(0+128)	;volatile
  1722  01F9  01EE               	clrf	(_TIME_INTRO_ELAPSED+1)^(0+128)	;volatile
  1723  01FA                     l2802:	
  1724                           
  1725                           ;newmain.c: 400:           unsigned char readbuffer[20] = {0};
  1726  01FA  3048               	movlw	low main@readbuffer_773
  1727  01FB  0086               	movwf	6
  1728  01FC  3001               	movlw	high main@readbuffer_773
  1729  01FD  0087               	movwf	7
  1730  01FE  3014               	movlw	20
  1731  01FF  00B6               	movwf	??_main^(0+128)
  1732  0200  3000               	movlw	0
  1733  0201                     u3040:	
  1734  0201  001E               	movwi fsr1++
  1735  0202  0BB6               	decfsz	??_main^(0+128),f
  1736  0203  2A01               	goto	u3040
  1737  0204                     l2804:	
  1738                           
  1739                           ;newmain.c: 401:           sprintf(readbuffer,"INTRO FIN!\r\n");
  1740  0204  3048               	movlw	low main@readbuffer_773
  1741  0205  00A0               	movwf	sprintf@s^(0+128)
  1742  0206  3001               	movlw	high main@readbuffer_773
  1743  0207  00A1               	movwf	(sprintf@s+1)^(0+128)
  1744  0208  3051               	movlw	low (STR_6| (0+32768))
  1745  0209  00A2               	movwf	sprintf@fmt^(0+128)
  1746  020A  3090               	movlw	high (STR_6| (0+32768))
  1747  020B  00A3               	movwf	(sprintf@fmt^(0+128)+1)
  1748  020C  318D  2555  3180   	fcall	_sprintf
  1749  020F                     l2806:	
  1750                           
  1751                           ;newmain.c: 402:           sendOnly(readbuffer,strlen(readbuffer));
  1752  020F  3048               	movlw	low main@readbuffer_773
  1753  0210  0020               	movlb	0	; select bank0
  1754  0211  00A2               	movwf	sendOnly@buffer
  1755  0212  3001               	movlw	high main@readbuffer_773
  1756  0213  00A3               	movwf	sendOnly@buffer+1
  1757  0214  3048               	movlw	low main@readbuffer_773
  1758  0215  00F4               	movwf	strlen@s
  1759  0216  3001               	movlw	high main@readbuffer_773
  1760  0217  00F5               	movwf	strlen@s+1
  1761  0218  318C  24B1  3180   	fcall	_strlen
  1762  021B  0875               	movf	?_strlen+1,w
  1763  021C  0020               	movlb	0	; select bank0
  1764  021D  00A5               	movwf	sendOnly@size+1
  1765  021E  0874               	movf	?_strlen,w
  1766  021F  00A4               	movwf	sendOnly@size
  1767  0220  3180  2002  3180   	fcall	_sendOnly
  1768  0223                     l2808:	
  1769                           
  1770                           ;newmain.c: 405:         if (INTRO_PLAYED == 1 && TIME_INTRO_ELAPSED == 0 && GAME_STOPPE
      +                          D == 0) {
  1771  0223  0021               	movlb	1	; select bank1
  1772  0224  036B               	decf	_INTRO_PLAYED^(0+128),w	;volatile
  1773  0225  046C               	iorwf	(_INTRO_PLAYED+1)^(0+128),w	;volatile
  1774  0226  1D03               	btfss	3,2
  1775  0227  2A29               	goto	u3051
  1776  0228  2A2A               	goto	u3050
  1777  0229                     u3051:	
  1778  0229  2ACC               	goto	l2836
  1779  022A                     u3050:	
  1780  022A                     l2810:	
  1781  022A  086D               	movf	_TIME_INTRO_ELAPSED^(0+128),w	;volatile
  1782  022B  046E               	iorwf	(_TIME_INTRO_ELAPSED+1)^(0+128),w	;volatile
  1783  022C  1D03               	btfss	3,2
  1784  022D  2A2F               	goto	u3061
  1785  022E  2A30               	goto	u3060
  1786  022F                     u3061:	
  1787  022F  2ACC               	goto	l2836
  1788  0230                     u3060:	
  1789  0230                     l2812:	
  1790  0230  0869               	movf	_GAME_STOPPED^(0+128),w	;volatile
  1791  0231  046A               	iorwf	(_GAME_STOPPED+1)^(0+128),w	;volatile
  1792  0232  1D03               	btfss	3,2
  1793  0233  2A35               	goto	u3071
  1794  0234  2A36               	goto	u3070
  1795  0235                     u3071:	
  1796  0235  2ACC               	goto	l2836
  1797  0236                     u3070:	
  1798  0236                     l2814:	
  1799                           
  1800                           ;newmain.c: 407:             seedRand();
  1801  0236  3187  27F3  3180   	fcall	_seedRand
  1802                           
  1803                           ;newmain.c: 410:             int randNr = rand() % ((27*30) + ((analog_reading+1) * 4));
  1804  0239  0023               	movlb	3	; select bank3
  1805  023A  0857               	movf	(_analog_reading+1)^(0+384),w
  1806  023B  0021               	movlb	1	; select bank1
  1807  023C  00B7               	movwf	(??_main^(0+128)+1)
  1808  023D  0023               	movlb	3	; select bank3
  1809  023E  0856               	movf	_analog_reading^(0+384),w
  1810  023F  0021               	movlb	1	; select bank1
  1811  0240  00B6               	movwf	??_main^(0+128)
  1812  0241  35B6               	lslf	??_main^(0+128),f
  1813  0242  0DB7               	rlf	(??_main^(0+128)+1),f
  1814  0243  35B6               	lslf	??_main^(0+128),f
  1815  0244  0DB7               	rlf	(??_main^(0+128)+1),f
  1816  0245  0836               	movf	??_main^(0+128),w
  1817  0246  3E2E               	addlw	46
  1818  0247  0020               	movlb	0	; select bank0
  1819  0248  00C2               	movwf	___awmod@divisor
  1820  0249  3003               	movlw	3
  1821  024A  0021               	movlb	1	; select bank1
  1822  024B  3D37               	addwfc	(??_main+1)^(0+128),w
  1823  024C  0020               	movlb	0	; select bank0
  1824  024D  00C3               	movwf	___awmod@divisor+1
  1825  024E  318F  2761  3180   	fcall	_rand
  1826  0251  0020               	movlb	0	; select bank0
  1827  0252  0839               	movf	?_rand+1,w
  1828  0253  00C5               	movwf	___awmod@dividend+1
  1829  0254  0838               	movf	?_rand,w
  1830  0255  00C4               	movwf	___awmod@dividend
  1831  0256  318D  25FD  3180   	fcall	___awmod
  1832  0259  0020               	movlb	0	; select bank0
  1833  025A  0843               	movf	?___awmod+1,w
  1834  025B  0021               	movlb	1	; select bank1
  1835  025C  00E6               	movwf	(main@randNr+1)^(0+128)
  1836  025D  0020               	movlb	0	; select bank0
  1837  025E  0842               	movf	?___awmod,w
  1838  025F  0021               	movlb	1	; select bank1
  1839  0260  00E5               	movwf	main@randNr^(0+128)
  1840  0261                     l2816:	
  1841                           
  1842                           ;newmain.c: 411:             int seconds = (randNr / 27) * 4;
  1843  0261  301B               	movlw	27
  1844  0262  0020               	movlb	0	; select bank0
  1845  0263  00A0               	movwf	___awdiv@divisor
  1846  0264  3000               	movlw	0
  1847  0265  00A1               	movwf	___awdiv@divisor+1
  1848  0266  0021               	movlb	1	; select bank1
  1849  0267  0866               	movf	(main@randNr+1)^(0+128),w
  1850  0268  0020               	movlb	0	; select bank0
  1851  0269  00A3               	movwf	___awdiv@dividend+1
  1852  026A  0021               	movlb	1	; select bank1
  1853  026B  0865               	movf	main@randNr^(0+128),w
  1854  026C  0020               	movlb	0	; select bank0
  1855  026D  00A2               	movwf	___awdiv@dividend
  1856  026E  318F  2701  3180   	fcall	___awdiv
  1857  0271  0020               	movlb	0	; select bank0
  1858  0272  0820               	movf	?___awdiv,w
  1859  0273  0021               	movlb	1	; select bank1
  1860  0274  00B6               	movwf	??_main^(0+128)
  1861  0275  0020               	movlb	0	; select bank0
  1862  0276  0821               	movf	?___awdiv+1,w
  1863  0277  0021               	movlb	1	; select bank1
  1864  0278  00B7               	movwf	(??_main^(0+128)+1)
  1865  0279  35B6               	lslf	??_main^(0+128),f
  1866  027A  0DB7               	rlf	(??_main^(0+128)+1),f
  1867  027B  35B6               	lslf	??_main^(0+128),f
  1868  027C  0DB7               	rlf	(??_main^(0+128)+1),f
  1869  027D  0836               	movf	??_main^(0+128),w
  1870  027E  00E3               	movwf	main@seconds^(0+128)
  1871  027F  0837               	movf	(??_main+1)^(0+128),w
  1872  0280  00E4               	movwf	(main@seconds+1)^(0+128)
  1873  0281                     l2818:	
  1874                           
  1875                           ;newmain.c: 413:             unsigned char readbuffer[20] = {0};
  1876  0281  305C               	movlw	low main@readbuffer_778
  1877  0282  0086               	movwf	6
  1878  0283  3001               	movlw	high main@readbuffer_778
  1879  0284  0087               	movwf	7
  1880  0285  3014               	movlw	20
  1881  0286  00B6               	movwf	??_main^(0+128)
  1882  0287  3000               	movlw	0
  1883  0288                     u3080:	
  1884  0288  001E               	movwi fsr1++
  1885  0289  0BB6               	decfsz	??_main^(0+128),f
  1886  028A  2A88               	goto	u3080
  1887  028B                     l2820:	
  1888                           
  1889                           ;newmain.c: 414:             sprintf(readbuffer,"SECS: %d, %d !\r\n",seconds,randNr);
  1890  028B  305C               	movlw	low main@readbuffer_778
  1891  028C  00A0               	movwf	sprintf@s^(0+128)
  1892  028D  3001               	movlw	high main@readbuffer_778
  1893  028E  00A1               	movwf	(sprintf@s+1)^(0+128)
  1894  028F  3040               	movlw	low (STR_7| (0+32768))
  1895  0290  00A2               	movwf	sprintf@fmt^(0+128)
  1896  0291  3090               	movlw	high (STR_7| (0+32768))
  1897  0292  00A3               	movwf	(sprintf@fmt^(0+128)+1)
  1898  0293  0864               	movf	(main@seconds+1)^(0+128),w
  1899  0294  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  1900  0295  0863               	movf	main@seconds^(0+128),w
  1901  0296  00A4               	movwf	(?_sprintf^(0+128)+4)
  1902  0297  0866               	movf	(main@randNr+1)^(0+128),w
  1903  0298  00A7               	movwf	((?_sprintf+1)^(0+128)+6)
  1904  0299  0865               	movf	main@randNr^(0+128),w
  1905  029A  00A6               	movwf	(?_sprintf^(0+128)+6)
  1906  029B  318D  2555  3180   	fcall	_sprintf
  1907  029E                     l2822:	
  1908                           
  1909                           ;newmain.c: 415:             sendOnly(readbuffer,strlen(readbuffer));
  1910  029E  305C               	movlw	low main@readbuffer_778
  1911  029F  0020               	movlb	0	; select bank0
  1912  02A0  00A2               	movwf	sendOnly@buffer
  1913  02A1  3001               	movlw	high main@readbuffer_778
  1914  02A2  00A3               	movwf	sendOnly@buffer+1
  1915  02A3  305C               	movlw	low main@readbuffer_778
  1916  02A4  00F4               	movwf	strlen@s
  1917  02A5  3001               	movlw	high main@readbuffer_778
  1918  02A6  00F5               	movwf	strlen@s+1
  1919  02A7  318C  24B1  3180   	fcall	_strlen
  1920  02AA  0875               	movf	?_strlen+1,w
  1921  02AB  0020               	movlb	0	; select bank0
  1922  02AC  00A5               	movwf	sendOnly@size+1
  1923  02AD  0874               	movf	?_strlen,w
  1924  02AE  00A4               	movwf	sendOnly@size
  1925  02AF  3180  2002  3180   	fcall	_sendOnly
  1926  02B2                     l2824:	
  1927                           
  1928                           ;newmain.c: 417:             TMR1_INTERRUPT_TICKER_FACTOR = randNr;
  1929  02B2  0021               	movlb	1	; select bank1
  1930  02B3  0866               	movf	(main@randNr+1)^(0+128),w
  1931  02B4  0023               	movlb	3	; select bank3
  1932  02B5  00D5               	movwf	(_TMR1_INTERRUPT_TICKER_FACTOR+1)^(0+384)	;volatile
  1933  02B6  0021               	movlb	1	; select bank1
  1934  02B7  0865               	movf	main@randNr^(0+128),w
  1935  02B8  0023               	movlb	3	; select bank3
  1936  02B9  00D4               	movwf	_TMR1_INTERRUPT_TICKER_FACTOR^(0+384)	;volatile
  1937  02BA                     l2826:	
  1938                           
  1939                           ;newmain.c: 418:             TIME_INTRO_ELAPSED = 0;
  1940  02BA  0021               	movlb	1	; select bank1
  1941  02BB  01ED               	clrf	_TIME_INTRO_ELAPSED^(0+128)	;volatile
  1942  02BC  01EE               	clrf	(_TIME_INTRO_ELAPSED+1)^(0+128)	;volatile
  1943  02BD                     l2828:	
  1944                           
  1945                           ;newmain.c: 419:             TMR1_Reload();
  1946  02BD  318C  2454  3180   	fcall	_TMR1_Reload
  1947  02C0                     l2830:	
  1948                           
  1949                           ;newmain.c: 420:             INTRO_FINISHED = 0;
  1950  02C0  0023               	movlb	3	; select bank3
  1951  02C1  01D8               	clrf	_INTRO_FINISHED^(0+384)	;volatile
  1952  02C2  01D9               	clrf	(_INTRO_FINISHED+1)^(0+384)	;volatile
  1953  02C3                     l2832:	
  1954                           
  1955                           ;newmain.c: 421:             INTRO_PLAYED = 1;
  1956  02C3  3001               	movlw	1
  1957  02C4  0021               	movlb	1	; select bank1
  1958  02C5  00EB               	movwf	_INTRO_PLAYED^(0+128)	;volatile
  1959  02C6  3000               	movlw	0
  1960  02C7  00EC               	movwf	(_INTRO_PLAYED^(0+128)+1)	;volatile
  1961  02C8                     l2834:	
  1962                           
  1963                           ;newmain.c: 422:             GAME_STOPPED = 1;
  1964  02C8  3001               	movlw	1
  1965  02C9  00E9               	movwf	_GAME_STOPPED^(0+128)	;volatile
  1966  02CA  3000               	movlw	0
  1967  02CB  00EA               	movwf	(_GAME_STOPPED^(0+128)+1)	;volatile
  1968  02CC                     l2836:	
  1969                           
  1970                           ;newmain.c: 425:         if (GAME_STOPPED == 1 && TIME_INTRO_ELAPSED == 1 && HORN_END_ST
      +                          OPPED == 0 ) {
  1971  02CC  0369               	decf	_GAME_STOPPED^(0+128),w	;volatile
  1972  02CD  046A               	iorwf	(_GAME_STOPPED+1)^(0+128),w	;volatile
  1973  02CE  1D03               	btfss	3,2
  1974  02CF  2AD1               	goto	u3091
  1975  02D0  2AD2               	goto	u3090
  1976  02D1                     u3091:	
  1977  02D1  2B2C               	goto	l2866
  1978  02D2                     u3090:	
  1979  02D2                     l2838:	
  1980  02D2  036D               	decf	_TIME_INTRO_ELAPSED^(0+128),w	;volatile
  1981  02D3  046E               	iorwf	(_TIME_INTRO_ELAPSED+1)^(0+128),w	;volatile
  1982  02D4  1D03               	btfss	3,2
  1983  02D5  2AD7               	goto	u3101
  1984  02D6  2AD8               	goto	u3100
  1985  02D7                     u3101:	
  1986  02D7  2B2C               	goto	l2866
  1987  02D8                     u3100:	
  1988  02D8                     l2840:	
  1989  02D8  0867               	movf	_HORN_END_STOPPED^(0+128),w	;volatile
  1990  02D9  0468               	iorwf	(_HORN_END_STOPPED+1)^(0+128),w	;volatile
  1991  02DA  1D03               	btfss	3,2
  1992  02DB  2ADD               	goto	u3111
  1993  02DC  2ADE               	goto	u3110
  1994  02DD                     u3111:	
  1995  02DD  2B2C               	goto	l2866
  1996  02DE                     u3110:	
  1997  02DE                     l2842:	
  1998                           
  1999                           ;newmain.c: 426:           PORTCbits.RC2 = 1;
  2000  02DE  0020               	movlb	0	; select bank0
  2001  02DF  150E               	bsf	14,2	;volatile
  2002  02E0                     l2844:	
  2003                           
  2004                           ;newmain.c: 427:           delay100ms(6);
  2005  02E0  3006               	movlw	6
  2006  02E1  00F4               	movwf	delay100ms@n
  2007  02E2  3000               	movlw	0
  2008  02E3  00F5               	movwf	delay100ms@n+1
  2009  02E4  318D  2507  3180   	fcall	_delay100ms
  2010  02E7                     l2846:	
  2011                           
  2012                           ;newmain.c: 428:           PORTCbits.RC2 = 0;
  2013  02E7  0020               	movlb	0	; select bank0
  2014  02E8  110E               	bcf	14,2	;volatile
  2015  02E9                     l2848:	
  2016                           
  2017                           ;newmain.c: 430:           unsigned char readbuffer[20] = {0};
  2018  02E9  30A0               	movlw	low main@readbuffer_781
  2019  02EA  0086               	movwf	6
  2020  02EB  3001               	movlw	high main@readbuffer_781
  2021  02EC  0087               	movwf	7
  2022  02ED  3014               	movlw	20
  2023  02EE  0021               	movlb	1	; select bank1
  2024  02EF  00B6               	movwf	??_main^(0+128)
  2025  02F0  3000               	movlw	0
  2026  02F1                     u3120:	
  2027  02F1  001E               	movwi fsr1++
  2028  02F2  0BB6               	decfsz	??_main^(0+128),f
  2029  02F3  2AF1               	goto	u3120
  2030  02F4                     l2850:	
  2031                           
  2032                           ;newmain.c: 431:           sprintf(readbuffer,"HORN INI!\r\n");
  2033  02F4  30A0               	movlw	low main@readbuffer_781
  2034  02F5  00A0               	movwf	sprintf@s^(0+128)
  2035  02F6  3001               	movlw	high main@readbuffer_781
  2036  02F7  00A1               	movwf	(sprintf@s+1)^(0+128)
  2037  02F8  305E               	movlw	low (STR_8| (0+32768))
  2038  02F9  00A2               	movwf	sprintf@fmt^(0+128)
  2039  02FA  3090               	movlw	high (STR_8| (0+32768))
  2040  02FB  00A3               	movwf	(sprintf@fmt^(0+128)+1)
  2041  02FC  318D  2555  3180   	fcall	_sprintf
  2042  02FF                     l2852:	
  2043                           
  2044                           ;newmain.c: 432:           sendOnly(readbuffer,strlen(readbuffer));
  2045  02FF  30A0               	movlw	low main@readbuffer_781
  2046  0300  0020               	movlb	0	; select bank0
  2047  0301  00A2               	movwf	sendOnly@buffer
  2048  0302  3001               	movlw	high main@readbuffer_781
  2049  0303  00A3               	movwf	sendOnly@buffer+1
  2050  0304  30A0               	movlw	low main@readbuffer_781
  2051  0305  00F4               	movwf	strlen@s
  2052  0306  3001               	movlw	high main@readbuffer_781
  2053  0307  00F5               	movwf	strlen@s+1
  2054  0308  318C  24B1  3180   	fcall	_strlen
  2055  030B  0875               	movf	?_strlen+1,w
  2056  030C  0020               	movlb	0	; select bank0
  2057  030D  00A5               	movwf	sendOnly@size+1
  2058  030E  0874               	movf	?_strlen,w
  2059  030F  00A4               	movwf	sendOnly@size
  2060  0310  3180  2002  3180   	fcall	_sendOnly
  2061  0313                     l2854:	
  2062                           
  2063                           ;newmain.c: 434:           TMR1_INTERRUPT_TICKER_FACTOR = 27;
  2064  0313  301B               	movlw	27
  2065  0314  0023               	movlb	3	; select bank3
  2066  0315  00D4               	movwf	_TMR1_INTERRUPT_TICKER_FACTOR^(0+384)	;volatile
  2067  0316  3000               	movlw	0
  2068  0317  00D5               	movwf	(_TMR1_INTERRUPT_TICKER_FACTOR^(0+384)+1)	;volatile
  2069  0318                     l2856:	
  2070                           
  2071                           ;newmain.c: 435:           TIME_INTRO_ELAPSED = 0;
  2072  0318  0021               	movlb	1	; select bank1
  2073  0319  01ED               	clrf	_TIME_INTRO_ELAPSED^(0+128)	;volatile
  2074  031A  01EE               	clrf	(_TIME_INTRO_ELAPSED+1)^(0+128)	;volatile
  2075  031B                     l2858:	
  2076                           
  2077                           ;newmain.c: 436:           TMR1_Reload();
  2078  031B  318C  2454  3180   	fcall	_TMR1_Reload
  2079  031E                     l2860:	
  2080                           
  2081                           ;newmain.c: 437:           INTRO_FINISHED = 1;
  2082  031E  3001               	movlw	1
  2083  031F  0023               	movlb	3	; select bank3
  2084  0320  00D8               	movwf	_INTRO_FINISHED^(0+384)	;volatile
  2085  0321  3000               	movlw	0
  2086  0322  00D9               	movwf	(_INTRO_FINISHED^(0+384)+1)	;volatile
  2087  0323                     l2862:	
  2088                           
  2089                           ;newmain.c: 438:           INTRO_PLAYED = 1;
  2090  0323  3001               	movlw	1
  2091  0324  0021               	movlb	1	; select bank1
  2092  0325  00EB               	movwf	_INTRO_PLAYED^(0+128)	;volatile
  2093  0326  3000               	movlw	0
  2094  0327  00EC               	movwf	(_INTRO_PLAYED^(0+128)+1)	;volatile
  2095  0328                     l2864:	
  2096                           
  2097                           ;newmain.c: 439:           HORN_END_STOPPED = 1;
  2098  0328  3001               	movlw	1
  2099  0329  00E7               	movwf	_HORN_END_STOPPED^(0+128)	;volatile
  2100  032A  3000               	movlw	0
  2101  032B  00E8               	movwf	(_HORN_END_STOPPED^(0+128)+1)	;volatile
  2102  032C                     l2866:	
  2103                           
  2104                           ;newmain.c: 441:         if (HORN_END_STOPPED == 1 && TIME_INTRO_ELAPSED == 1) {
  2105  032C  0367               	decf	_HORN_END_STOPPED^(0+128),w	;volatile
  2106  032D  0468               	iorwf	(_HORN_END_STOPPED+1)^(0+128),w	;volatile
  2107  032E  1D03               	btfss	3,2
  2108  032F  2B31               	goto	u3131
  2109  0330  2B32               	goto	u3130
  2110  0331                     u3131:	
  2111  0331  289C               	goto	l180
  2112  0332                     u3130:	
  2113  0332                     l2868:	
  2114  0332  036D               	decf	_TIME_INTRO_ELAPSED^(0+128),w	;volatile
  2115  0333  046E               	iorwf	(_TIME_INTRO_ELAPSED+1)^(0+128),w	;volatile
  2116  0334  1D03               	btfss	3,2
  2117  0335  2B37               	goto	u3141
  2118  0336  2B38               	goto	u3140
  2119  0337                     u3141:	
  2120  0337  289C               	goto	l180
  2121  0338                     u3140:	
  2122  0338                     l2870:	
  2123                           
  2124                           ;newmain.c: 443:           TMR1_StopTimer();
  2125  0338  318C  242F  3180   	fcall	_TMR1_StopTimer
  2126  033B                     l2872:	
  2127                           
  2128                           ;newmain.c: 444:           TIME_INTRO_ELAPSED = 0;
  2129  033B  0021               	movlb	1	; select bank1
  2130  033C  01ED               	clrf	_TIME_INTRO_ELAPSED^(0+128)	;volatile
  2131  033D  01EE               	clrf	(_TIME_INTRO_ELAPSED+1)^(0+128)	;volatile
  2132  033E                     l2874:	
  2133                           
  2134                           ;newmain.c: 445:           TMR1_INTERRUPT_TICKER_FACTOR = 64;
  2135  033E  3040               	movlw	64
  2136  033F  0023               	movlb	3	; select bank3
  2137  0340  00D4               	movwf	_TMR1_INTERRUPT_TICKER_FACTOR^(0+384)	;volatile
  2138  0341  3000               	movlw	0
  2139  0342  00D5               	movwf	(_TMR1_INTERRUPT_TICKER_FACTOR^(0+384)+1)	;volatile
  2140  0343                     l2876:	
  2141                           
  2142                           ;newmain.c: 446:           unsigned char readbuffer[20] = {0};
  2143  0343  30B4               	movlw	low main@readbuffer_784
  2144  0344  0086               	movwf	6
  2145  0345  3001               	movlw	high main@readbuffer_784
  2146  0346  0087               	movwf	7
  2147  0347  3014               	movlw	20
  2148  0348  0021               	movlb	1	; select bank1
  2149  0349  00B6               	movwf	??_main^(0+128)
  2150  034A  3000               	movlw	0
  2151  034B                     u3150:	
  2152  034B  001E               	movwi fsr1++
  2153  034C  0BB6               	decfsz	??_main^(0+128),f
  2154  034D  2B4B               	goto	u3150
  2155  034E                     l2878:	
  2156                           
  2157                           ;newmain.c: 447:           sprintf(readbuffer,"HORN FIN!\r\n");
  2158  034E  30B4               	movlw	low main@readbuffer_784
  2159  034F  00A0               	movwf	sprintf@s^(0+128)
  2160  0350  3001               	movlw	high main@readbuffer_784
  2161  0351  00A1               	movwf	(sprintf@s+1)^(0+128)
  2162  0352  306A               	movlw	low (STR_9| (0+32768))
  2163  0353  00A2               	movwf	sprintf@fmt^(0+128)
  2164  0354  3090               	movlw	high (STR_9| (0+32768))
  2165  0355  00A3               	movwf	(sprintf@fmt^(0+128)+1)
  2166  0356  318D  2555  3180   	fcall	_sprintf
  2167  0359                     l2880:	
  2168                           
  2169                           ;newmain.c: 448:           sendOnly(readbuffer,strlen(readbuffer));
  2170  0359  30B4               	movlw	low main@readbuffer_784
  2171  035A  0020               	movlb	0	; select bank0
  2172  035B  00A2               	movwf	sendOnly@buffer
  2173  035C  3001               	movlw	high main@readbuffer_784
  2174  035D  00A3               	movwf	sendOnly@buffer+1
  2175  035E  30B4               	movlw	low main@readbuffer_784
  2176  035F  00F4               	movwf	strlen@s
  2177  0360  3001               	movlw	high main@readbuffer_784
  2178  0361  00F5               	movwf	strlen@s+1
  2179  0362  318C  24B1  3180   	fcall	_strlen
  2180  0365  0875               	movf	?_strlen+1,w
  2181  0366  0020               	movlb	0	; select bank0
  2182  0367  00A5               	movwf	sendOnly@size+1
  2183  0368  0874               	movf	?_strlen,w
  2184  0369  00A4               	movwf	sendOnly@size
  2185  036A  3180  2002  3180   	fcall	_sendOnly
  2186  036D                     l2882:	
  2187                           
  2188                           ;newmain.c: 450:           PORTCbits.RC2 = 1;
  2189  036D  0020               	movlb	0	; select bank0
  2190  036E  150E               	bsf	14,2	;volatile
  2191  036F                     l2884:	
  2192                           
  2193                           ;newmain.c: 451:           delay100ms(6);
  2194  036F  3006               	movlw	6
  2195  0370  00F4               	movwf	delay100ms@n
  2196  0371  3000               	movlw	0
  2197  0372  00F5               	movwf	delay100ms@n+1
  2198  0373  318D  2507  3180   	fcall	_delay100ms
  2199  0376                     l2886:	
  2200                           
  2201                           ;newmain.c: 452:           PORTCbits.RC2 = 0;
  2202  0376  0020               	movlb	0	; select bank0
  2203  0377  110E               	bcf	14,2	;volatile
  2204  0378                     l2888:	
  2205                           
  2206                           ;newmain.c: 455:           PORTBbits.RB6 = 0;
  2207  0378  130D               	bcf	13,6	;volatile
  2208  0379                     l2890:	
  2209                           
  2210                           ;newmain.c: 456:           INTRO_PLAYED = 0;
  2211  0379  0021               	movlb	1	; select bank1
  2212  037A  01EB               	clrf	_INTRO_PLAYED^(0+128)	;volatile
  2213  037B  01EC               	clrf	(_INTRO_PLAYED+1)^(0+128)	;volatile
  2214  037C                     l2892:	
  2215                           
  2216                           ;newmain.c: 457:           INTRO_FINISHED = 0;
  2217  037C  0023               	movlb	3	; select bank3
  2218  037D  01D8               	clrf	_INTRO_FINISHED^(0+384)	;volatile
  2219  037E  01D9               	clrf	(_INTRO_FINISHED+1)^(0+384)	;volatile
  2220  037F                     l2894:	
  2221                           
  2222                           ;newmain.c: 458:           TIME_INTRO_ELAPSED = 0;
  2223  037F  0021               	movlb	1	; select bank1
  2224  0380  01ED               	clrf	_TIME_INTRO_ELAPSED^(0+128)	;volatile
  2225  0381  01EE               	clrf	(_TIME_INTRO_ELAPSED+1)^(0+128)	;volatile
  2226  0382                     l2896:	
  2227                           
  2228                           ;newmain.c: 459:           GAME_STOPPED = 0;
  2229  0382  01E9               	clrf	_GAME_STOPPED^(0+128)	;volatile
  2230  0383  01EA               	clrf	(_GAME_STOPPED+1)^(0+128)	;volatile
  2231  0384                     l2898:	
  2232                           
  2233                           ;newmain.c: 460:           HORN_END_STOPPED = 0;
  2234  0384  01E7               	clrf	_HORN_END_STOPPED^(0+128)	;volatile
  2235  0385  01E8               	clrf	(_HORN_END_STOPPED+1)^(0+128)	;volatile
  2236  0386                     l2900:	
  2237                           
  2238                           ;newmain.c: 461:           PORTBbits.RB4 = 0;
  2239  0386  0020               	movlb	0	; select bank0
  2240  0387  120D               	bcf	13,4	;volatile
  2241  0388  289C               	goto	l180
  2242  0389  3180  2832         	ljmp	start
  2243  038B                     __end_of_main:	
  2244                           
  2245                           	psect	text1
  2246  0D55                     __ptext1:	
  2247 ;; *************** function _sprintf *****************
  2248 ;; Defined at:
  2249 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  s               2    0[BANK1 ] PTR unsigned char 
  2252 ;;		 -> main@readbuffer_784(20), main@readbuffer_781(20), main@readbuffer_778(20), main@readbuffer_773(20), 
  2253 ;;		 -> main@readbuffer_769(20), main@readbuffer_766(22), main@readbuffer_758(20), main@readbuffer(20), 
  2254 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2255 ;;		 -> STR_9(12), STR_8(12), STR_7(17), STR_6(13), 
  2256 ;;		 -> STR_5(18), STR_4(11), STR_3(21), STR_2(5), 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  f               6   12[BANK1 ] struct _IO_FILE
  2259 ;;  ret             2    0        int 
  2260 ;;  ap              1   11[BANK1 ] PTR void [1]
  2261 ;;		 -> ?_sprintf(2), 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  2    0[BANK1 ] int 
  2264 ;; Registers used:
  2265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2271 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  2272 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;Total ram usage:       18 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:   11
  2278 ;; This function calls:
  2279 ;;		_vfprintf
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           
  2286                           ;psect for function _sprintf
  2287  0D55                     _sprintf:	
  2288  0D55                     l2598:	
  2289                           ;incstack = 0
  2290                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2291                           
  2292  0D55  30A4               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  2293  0D56  0021               	movlb	1	; select bank1
  2294  0D57  00A8               	movwf	??_sprintf^(0+128)
  2295  0D58  0828               	movf	??_sprintf^(0+128),w
  2296  0D59  00AB               	movwf	sprintf@ap^(0+128)
  2297  0D5A  0821               	movf	(sprintf@s+1)^(0+128),w
  2298  0D5B  00AD               	movwf	(sprintf@f+1)^(0+128)
  2299  0D5C  0820               	movf	sprintf@s^(0+128),w
  2300  0D5D  00AC               	movwf	sprintf@f^(0+128)
  2301  0D5E                     l2600:	
  2302  0D5E  01AE               	clrf	(sprintf@f^(0+128)+2)
  2303  0D5F  01AF               	clrf	((sprintf@f+1)^(0+128)+2)
  2304  0D60                     l2602:	
  2305  0D60  01B0               	clrf	(sprintf@f^(0+128)+4)
  2306  0D61  01B1               	clrf	((sprintf@f+1)^(0+128)+4)
  2307  0D62                     l2604:	
  2308  0D62  0823               	movf	(sprintf@fmt+1)^(0+128),w
  2309  0D63  0020               	movlb	0	; select bank0
  2310  0D64  00E9               	movwf	vfprintf@fmt+1
  2311  0D65  0021               	movlb	1	; select bank1
  2312  0D66  0822               	movf	sprintf@fmt^(0+128),w
  2313  0D67  0020               	movlb	0	; select bank0
  2314  0D68  00E8               	movwf	vfprintf@fmt
  2315  0D69  30AB               	movlw	(low (sprintf@ap| 0))& (0+255)
  2316  0D6A  0021               	movlb	1	; select bank1
  2317  0D6B  00A8               	movwf	??_sprintf^(0+128)
  2318  0D6C  0828               	movf	??_sprintf^(0+128),w
  2319  0D6D  0020               	movlb	0	; select bank0
  2320  0D6E  00EA               	movwf	vfprintf@ap
  2321  0D6F  30AC               	movlw	(low (sprintf@f| 0))& (0+255)
  2322  0D70  318D  2580  318D   	fcall	_vfprintf
  2323  0D73                     l2606:	
  2324  0D73  3002               	movlw	2
  2325  0D74  3EAC               	addlw	(low (sprintf@f| 0))& (0+255)
  2326  0D75  0086               	movwf	6
  2327  0D76  0187               	clrf	7
  2328  0D77  3F40               	moviw [0]fsr1
  2329  0D78  0021               	movlb	1	; select bank1
  2330  0D79  0720               	addwf	sprintf@s^(0+128),w
  2331  0D7A  0084               	movwf	4
  2332  0D7B  3F41               	moviw [1]fsr1
  2333  0D7C  3D21               	addwfc	(sprintf@s+1)^(0+128),w
  2334  0D7D  0085               	movwf	5
  2335  0D7E  0180               	clrf	0
  2336  0D7F                     l835:	
  2337  0D7F  0008               	return
  2338  0D80                     __end_of_sprintf:	
  2339                           
  2340                           	psect	text2
  2341  0D80                     __ptext2:	
  2342 ;; *************** function _vfprintf *****************
  2343 ;; Defined at:
  2344 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  fp              1    wreg     PTR struct _IO_FILE
  2347 ;;		 -> sprintf@f(6), 
  2348 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  2349 ;;		 -> STR_9(12), STR_8(12), STR_7(17), STR_6(13), 
  2350 ;;		 -> STR_5(18), STR_4(11), STR_3(21), STR_2(5), 
  2351 ;;  ap              1   74[BANK0 ] PTR PTR void 
  2352 ;;		 -> sprintf@ap(1), 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  fp              1   77[BANK0 ] PTR struct _IO_FILE
  2355 ;;		 -> sprintf@f(6), 
  2356 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2357 ;;		 -> STR_9(12), STR_8(12), STR_7(17), STR_6(13), 
  2358 ;;		 -> STR_5(18), STR_4(11), STR_3(21), STR_2(5), 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  2   72[BANK0 ] int 
  2361 ;; Registers used:
  2362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2368 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2372 ;;Total ram usage:        8 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:   10
  2375 ;; This function calls:
  2376 ;;		_vfpfcnvrt
  2377 ;; This function is called by:
  2378 ;;		_sprintf
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _vfprintf
  2384  0D80                     _vfprintf:	
  2385                           
  2386                           ;incstack = 0
  2387                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2388                           ;vfprintf@fp stored from wreg
  2389  0D80  0020               	movlb	0	; select bank0
  2390  0D81  00ED               	movwf	vfprintf@fp
  2391  0D82                     l2498:	
  2392                           
  2393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2394  0D82  0869               	movf	vfprintf@fmt+1,w
  2395  0D83  00EF               	movwf	vfprintf@cfmt+1
  2396  0D84  0868               	movf	vfprintf@fmt,w
  2397  0D85  00EE               	movwf	vfprintf@cfmt
  2398  0D86                     l2500:	
  2399                           
  2400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2401  0D86  0023               	movlb	3	; select bank3
  2402  0D87  01CA               	clrf	_nout^(0+384)
  2403  0D88  01CB               	clrf	(_nout+1)^(0+384)
  2404                           
  2405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2406  0D89  2D9E               	goto	l2504
  2407  0D8A                     l2502:	
  2408                           
  2409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2410  0D8A  306E               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2411  0D8B  00EB               	movwf	??_vfprintf
  2412  0D8C  086B               	movf	??_vfprintf,w
  2413  0D8D  00D8               	movwf	vfpfcnvrt@fmt
  2414  0D8E  086A               	movf	vfprintf@ap,w
  2415  0D8F  00EC               	movwf	??_vfprintf+1
  2416  0D90  086C               	movf	??_vfprintf+1,w
  2417  0D91  00D9               	movwf	vfpfcnvrt@ap
  2418  0D92  086D               	movf	vfprintf@fp,w
  2419  0D93  3186  26E4  318D   	fcall	_vfpfcnvrt
  2420  0D96  0020               	movlb	0	; select bank0
  2421  0D97  0858               	movf	?_vfpfcnvrt,w
  2422  0D98  0023               	movlb	3	; select bank3
  2423  0D99  07CA               	addwf	_nout^(0+384),f
  2424  0D9A  0020               	movlb	0	; select bank0
  2425  0D9B  0859               	movf	?_vfpfcnvrt+1,w
  2426  0D9C  0023               	movlb	3	; select bank3
  2427  0D9D  3DCB               	addwfc	(_nout+1)^(0+384),f
  2428  0D9E                     l2504:	
  2429                           
  2430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2431  0D9E  0020               	movlb	0	; select bank0
  2432  0D9F  086E               	movf	vfprintf@cfmt,w
  2433  0DA0  0084               	movwf	4
  2434  0DA1  086F               	movf	vfprintf@cfmt+1,w
  2435  0DA2  0085               	movwf	5
  2436  0DA3  0012               	moviw fsr0++
  2437  0DA4  1D03               	btfss	3,2
  2438  0DA5  2DA7               	goto	u2681
  2439  0DA6  2DA8               	goto	u2680
  2440  0DA7                     u2681:	
  2441  0DA7  2D8A               	goto	l2502
  2442  0DA8                     u2680:	
  2443  0DA8                     l2506:	
  2444                           
  2445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2446  0DA8  0023               	movlb	3	; select bank3
  2447  0DA9  084B               	movf	(_nout+1)^(0+384),w
  2448  0DAA  0020               	movlb	0	; select bank0
  2449  0DAB  00E9               	movwf	?_vfprintf+1
  2450  0DAC  0023               	movlb	3	; select bank3
  2451  0DAD  084A               	movf	_nout^(0+384),w
  2452  0DAE  0020               	movlb	0	; select bank0
  2453  0DAF  00E8               	movwf	?_vfprintf
  2454  0DB0                     l347:	
  2455  0DB0  0008               	return
  2456  0DB1                     __end_of_vfprintf:	
  2457                           
  2458                           	psect	text3
  2459  06E4                     __ptext3:	
  2460 ;; *************** function _vfpfcnvrt *****************
  2461 ;; Defined at:
  2462 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  fp              1    wreg     PTR struct _IO_FILE
  2465 ;;		 -> sprintf@f(6), 
  2466 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
  2467 ;;		 -> vfprintf@cfmt(2), 
  2468 ;;  ap              1   57[BANK0 ] PTR PTR void 
  2469 ;;		 -> sprintf@ap(1), 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  2472 ;;		 -> sprintf@f(6), 
  2473 ;;  ll              8   63[BANK0 ] long long 
  2474 ;;  llu             8    0        unsigned long long 
  2475 ;;  f               4    0        unsigned long long 
  2476 ;;  ct              3    0        unsigned char [3]
  2477 ;;  vp              2    0        PTR void 
  2478 ;;  i               2    0        int 
  2479 ;;  done            2    0        int 
  2480 ;;  cp              2    0        PTR unsigned char 
  2481 ;;  c               1    0        unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  2   56[BANK0 ] int 
  2484 ;; Registers used:
  2485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2491 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2492 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2493 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2494 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;Total ram usage:       16 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    9
  2498 ;; This function calls:
  2499 ;;		_dtoa
  2500 ;;		_fputc
  2501 ;; This function is called by:
  2502 ;;		_vfprintf
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _vfpfcnvrt
  2508  06E4                     _vfpfcnvrt:	
  2509                           
  2510                           ;incstack = 0
  2511                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2512                           ;vfpfcnvrt@fp stored from wreg
  2513  06E4  0020               	movlb	0	; select bank0
  2514  06E5  00E7               	movwf	vfpfcnvrt@fp
  2515  06E6                     l2436:	
  2516                           
  2517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2518  06E6  0858               	movf	vfpfcnvrt@fmt,w
  2519  06E7  0086               	movwf	6
  2520  06E8  0187               	clrf	7
  2521  06E9  3F40               	moviw [0]fsr1
  2522  06EA  00DA               	movwf	??_vfpfcnvrt
  2523  06EB  3F41               	moviw [1]fsr1
  2524  06EC  00DB               	movwf	??_vfpfcnvrt+1
  2525  06ED  085A               	movf	??_vfpfcnvrt,w
  2526  06EE  0084               	movwf	4
  2527  06EF  085B               	movf	??_vfpfcnvrt+1,w
  2528  06F0  0085               	movwf	5
  2529  06F1  0012               	moviw fsr0++
  2530  06F2  3A25               	xorlw	37
  2531  06F3  1D03               	btfss	3,2
  2532  06F4  2EF6               	goto	u2631
  2533  06F5  2EF7               	goto	u2630
  2534  06F6                     u2631:	
  2535  06F6  2F9B               	goto	l2472
  2536  06F7                     u2630:	
  2537  06F7                     l2438:	
  2538                           
  2539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2540  06F7  0858               	movf	vfpfcnvrt@fmt,w
  2541  06F8  0086               	movwf	6
  2542  06F9  0187               	clrf	7
  2543  06FA  3001               	movlw	1
  2544  06FB  0781               	addwf	1,f
  2545  06FC  3141               	addfsr 1,1
  2546  06FD  1803               	skipnc
  2547  06FE  0A81               	incf	1,f
  2548  06FF                     l2440:	
  2549                           
  2550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2551  06FF  0023               	movlb	3	; select bank3
  2552  0700  01CC               	clrf	_width^(0+384)
  2553  0701  01CD               	clrf	(_width+1)^(0+384)
  2554  0702  01F6               	clrf	_flags
  2555  0703  01F7               	clrf	_flags+1
  2556  0704                     l2442:	
  2557                           
  2558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2559  0704  30FF               	movlw	255
  2560  0705  00CE               	movwf	_prec^(0+384)
  2561  0706  30FF               	movlw	255
  2562  0707  00CF               	movwf	(_prec^(0+384)+1)
  2563  0708                     l2444:	
  2564                           
  2565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2566  0708  0020               	movlb	0	; select bank0
  2567  0709  0858               	movf	vfpfcnvrt@fmt,w
  2568  070A  0086               	movwf	6
  2569  070B  0187               	clrf	7
  2570  070C  3F40               	moviw [0]fsr1
  2571  070D  00DA               	movwf	??_vfpfcnvrt
  2572  070E  3F41               	moviw [1]fsr1
  2573  070F  00DB               	movwf	??_vfpfcnvrt+1
  2574  0710  085A               	movf	??_vfpfcnvrt,w
  2575  0711  0084               	movwf	4
  2576  0712  085B               	movf	??_vfpfcnvrt+1,w
  2577  0713  0085               	movwf	5
  2578  0714  0012               	moviw fsr0++
  2579  0715  3A64               	xorlw	100
  2580  0716  1903               	btfsc	3,2
  2581  0717  2F19               	goto	u2641
  2582  0718  2F1A               	goto	u2640
  2583  0719                     u2641:	
  2584  0719  2F2B               	goto	l2448
  2585  071A                     u2640:	
  2586  071A                     l2446:	
  2587  071A  0858               	movf	vfpfcnvrt@fmt,w
  2588  071B  0086               	movwf	6
  2589  071C  0187               	clrf	7
  2590  071D  3F40               	moviw [0]fsr1
  2591  071E  00DA               	movwf	??_vfpfcnvrt
  2592  071F  3F41               	moviw [1]fsr1
  2593  0720  00DB               	movwf	??_vfpfcnvrt+1
  2594  0721  085A               	movf	??_vfpfcnvrt,w
  2595  0722  0084               	movwf	4
  2596  0723  085B               	movf	??_vfpfcnvrt+1,w
  2597  0724  0085               	movwf	5
  2598  0725  0012               	moviw fsr0++
  2599  0726  3A69               	xorlw	105
  2600  0727  1D03               	btfss	3,2
  2601  0728  2F2A               	goto	u2651
  2602  0729  2F2B               	goto	u2650
  2603  072A                     u2651:	
  2604  072A  2F66               	goto	l2456
  2605  072B                     u2650:	
  2606  072B                     l2448:	
  2607                           
  2608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2609  072B  0858               	movf	vfpfcnvrt@fmt,w
  2610  072C  0086               	movwf	6
  2611  072D  0187               	clrf	7
  2612  072E  3001               	movlw	1
  2613  072F  0781               	addwf	1,f
  2614  0730  3141               	addfsr 1,1
  2615  0731  1803               	skipnc
  2616  0732  0A81               	incf	1,f
  2617  0733                     l2450:	
  2618                           
  2619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2620  0733  0859               	movf	vfpfcnvrt@ap,w
  2621  0734  0086               	movwf	6
  2622  0735  0187               	clrf	7
  2623  0736  0801               	movf	1,w
  2624  0737  0084               	movwf	4
  2625  0738  0185               	clrf	5
  2626  0739  3002               	movlw	2
  2627  073A  0781               	addwf	1,f
  2628  073B  3F00               	moviw [0]fsr0
  2629  073C  00DA               	movwf	??_vfpfcnvrt
  2630  073D  3F01               	moviw [1]fsr0
  2631  073E  00DB               	movwf	??_vfpfcnvrt+1
  2632  073F  085A               	movf	??_vfpfcnvrt,w
  2633  0740  00DF               	movwf	vfpfcnvrt@ll
  2634  0741  085B               	movf	??_vfpfcnvrt+1,w
  2635  0742  00E0               	movwf	vfpfcnvrt@ll+1
  2636  0743  0D89               	rlf	9,f
  2637  0744  3B89               	subwfb	9,f
  2638  0745  0989               	comf	9,f
  2639  0746  00E1               	movwf	vfpfcnvrt@ll+2
  2640  0747  00E2               	movwf	vfpfcnvrt@ll+3
  2641  0748  00E3               	movwf	vfpfcnvrt@ll+4
  2642  0749  00E4               	movwf	vfpfcnvrt@ll+5
  2643  074A  00E5               	movwf	vfpfcnvrt@ll+6
  2644  074B  00E6               	movwf	vfpfcnvrt@ll+7
  2645  074C                     l2452:	
  2646                           
  2647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2648  074C  085F               	movf	vfpfcnvrt@ll,w
  2649  074D  00BA               	movwf	dtoa@d
  2650  074E  0860               	movf	vfpfcnvrt@ll+1,w
  2651  074F  00BB               	movwf	dtoa@d+1
  2652  0750  0861               	movf	vfpfcnvrt@ll+2,w
  2653  0751  00BC               	movwf	dtoa@d+2
  2654  0752  0862               	movf	vfpfcnvrt@ll+3,w
  2655  0753  00BD               	movwf	dtoa@d+3
  2656  0754  0863               	movf	vfpfcnvrt@ll+4,w
  2657  0755  00BE               	movwf	dtoa@d+4
  2658  0756  0864               	movf	vfpfcnvrt@ll+5,w
  2659  0757  00BF               	movwf	dtoa@d+5
  2660  0758  0865               	movf	vfpfcnvrt@ll+6,w
  2661  0759  00C0               	movwf	dtoa@d+6
  2662  075A  0866               	movf	vfpfcnvrt@ll+7,w
  2663  075B  00C1               	movwf	dtoa@d+7
  2664  075C  0867               	movf	vfpfcnvrt@fp,w
  2665  075D  3183  238B  3186   	fcall	_dtoa
  2666  0760  0020               	movlb	0	; select bank0
  2667  0761  083B               	movf	?_dtoa+1,w
  2668  0762  00D9               	movwf	?_vfpfcnvrt+1
  2669  0763  083A               	movf	?_dtoa,w
  2670  0764  00D8               	movwf	?_vfpfcnvrt
  2671  0765  2FBE               	goto	l340
  2672  0766                     l2456:	
  2673                           
  2674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2675  0766  0858               	movf	vfpfcnvrt@fmt,w
  2676  0767  0086               	movwf	6
  2677  0768  0187               	clrf	7
  2678  0769  3F40               	moviw [0]fsr1
  2679  076A  00DA               	movwf	??_vfpfcnvrt
  2680  076B  3F41               	moviw [1]fsr1
  2681  076C  00DB               	movwf	??_vfpfcnvrt+1
  2682  076D  085A               	movf	??_vfpfcnvrt,w
  2683  076E  0084               	movwf	4
  2684  076F  085B               	movf	??_vfpfcnvrt+1,w
  2685  0770  0085               	movwf	5
  2686  0771  0012               	moviw fsr0++
  2687  0772  3A25               	xorlw	37
  2688  0773  1D03               	btfss	3,2
  2689  0774  2F76               	goto	u2661
  2690  0775  2F77               	goto	u2660
  2691  0776                     u2661:	
  2692  0776  2F90               	goto	l2466
  2693  0777                     u2660:	
  2694  0777                     l2458:	
  2695                           
  2696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2697  0777  0858               	movf	vfpfcnvrt@fmt,w
  2698  0778  0086               	movwf	6
  2699  0779  0187               	clrf	7
  2700  077A  3001               	movlw	1
  2701  077B  0781               	addwf	1,f
  2702  077C  3141               	addfsr 1,1
  2703  077D  1803               	skipnc
  2704  077E  0A81               	incf	1,f
  2705  077F                     l2460:	
  2706                           
  2707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2708  077F  3025               	movlw	37
  2709  0780  00A0               	movwf	fputc@c
  2710  0781  3000               	movlw	0
  2711  0782  00A1               	movwf	fputc@c+1
  2712  0783  0867               	movf	vfpfcnvrt@fp,w
  2713  0784  00DA               	movwf	??_vfpfcnvrt
  2714  0785  085A               	movf	??_vfpfcnvrt,w
  2715  0786  00A2               	movwf	fputc@fp
  2716  0787  318E  2651  3186   	fcall	_fputc
  2717  078A                     l2462:	
  2718                           
  2719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2720  078A  3001               	movlw	1
  2721  078B  0020               	movlb	0	; select bank0
  2722  078C  00D8               	movwf	?_vfpfcnvrt
  2723  078D  3000               	movlw	0
  2724  078E  00D9               	movwf	?_vfpfcnvrt+1
  2725  078F  2FBE               	goto	l340
  2726  0790                     l2466:	
  2727                           
  2728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2729  0790  0858               	movf	vfpfcnvrt@fmt,w
  2730  0791  0086               	movwf	6
  2731  0792  0187               	clrf	7
  2732  0793  3001               	movlw	1
  2733  0794  0781               	addwf	1,f
  2734  0795  3141               	addfsr 1,1
  2735  0796  1803               	skipnc
  2736  0797  0A81               	incf	1,f
  2737  0798                     l2468:	
  2738                           
  2739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2740  0798  01D8               	clrf	?_vfpfcnvrt
  2741  0799  01D9               	clrf	?_vfpfcnvrt+1
  2742  079A  2FBE               	goto	l340
  2743  079B                     l2472:	
  2744                           
  2745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2746  079B  0858               	movf	vfpfcnvrt@fmt,w
  2747  079C  0086               	movwf	6
  2748  079D  0187               	clrf	7
  2749  079E  3F40               	moviw [0]fsr1
  2750  079F  00DA               	movwf	??_vfpfcnvrt
  2751  07A0  3F41               	moviw [1]fsr1
  2752  07A1  00DB               	movwf	??_vfpfcnvrt+1
  2753  07A2  085A               	movf	??_vfpfcnvrt,w
  2754  07A3  0084               	movwf	4
  2755  07A4  085B               	movf	??_vfpfcnvrt+1,w
  2756  07A5  0085               	movwf	5
  2757  07A6  0800               	movf	0,w	;code access
  2758  07A7  00DC               	movwf	??_vfpfcnvrt+2
  2759  07A8  01DD               	clrf	??_vfpfcnvrt+3
  2760  07A9  085C               	movf	??_vfpfcnvrt+2,w
  2761  07AA  00A0               	movwf	fputc@c
  2762  07AB  085D               	movf	??_vfpfcnvrt+3,w
  2763  07AC  00A1               	movwf	fputc@c+1
  2764  07AD  0867               	movf	vfpfcnvrt@fp,w
  2765  07AE  00DE               	movwf	??_vfpfcnvrt+4
  2766  07AF  085E               	movf	??_vfpfcnvrt+4,w
  2767  07B0  00A2               	movwf	fputc@fp
  2768  07B1  318E  2651  3186   	fcall	_fputc
  2769  07B4                     l2474:	
  2770                           
  2771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2772  07B4  0020               	movlb	0	; select bank0
  2773  07B5  0858               	movf	vfpfcnvrt@fmt,w
  2774  07B6  0086               	movwf	6
  2775  07B7  0187               	clrf	7
  2776  07B8  3001               	movlw	1
  2777  07B9  0781               	addwf	1,f
  2778  07BA  3141               	addfsr 1,1
  2779  07BB  1803               	skipnc
  2780  07BC  0A81               	incf	1,f
  2781  07BD  2F8A               	goto	l2462
  2782  07BE                     l340:	
  2783  07BE  0008               	return
  2784  07BF                     __end_of_vfpfcnvrt:	
  2785                           
  2786                           	psect	text4
  2787  038B                     __ptext4:	
  2788 ;; *************** function _dtoa *****************
  2789 ;; Defined at:
  2790 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  fp              1    wreg     PTR struct _IO_FILE
  2793 ;;		 -> sprintf@f(6), 
  2794 ;;  d               8   26[BANK0 ] long long 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  fp              1   37[BANK0 ] PTR struct _IO_FILE
  2797 ;;		 -> sprintf@f(6), 
  2798 ;;  n               8   46[BANK0 ] long long 
  2799 ;;  i               2   54[BANK0 ] int 
  2800 ;;  s               2   44[BANK0 ] int 
  2801 ;;  w               2   42[BANK0 ] int 
  2802 ;;  p               2   40[BANK0 ] int 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  2   26[BANK0 ] int 
  2805 ;; Registers used:
  2806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2812 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2814 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2815 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2816 ;;Total ram usage:       30 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    8
  2819 ;; This function calls:
  2820 ;;		___aodiv
  2821 ;;		___aomod
  2822 ;;		_abs
  2823 ;;		_pad
  2824 ;; This function is called by:
  2825 ;;		_vfpfcnvrt
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           
  2830                           ;psect for function _dtoa
  2831  038B                     _dtoa:	
  2832                           
  2833                           ;incstack = 0
  2834                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2835                           ;dtoa@fp stored from wreg
  2836  038B  0020               	movlb	0	; select bank0
  2837  038C  00C5               	movwf	dtoa@fp
  2838  038D                     l2378:	
  2839                           
  2840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2841  038D  083A               	movf	dtoa@d,w
  2842  038E  00CE               	movwf	dtoa@n
  2843  038F  083B               	movf	dtoa@d+1,w
  2844  0390  00CF               	movwf	dtoa@n+1
  2845  0391  083C               	movf	dtoa@d+2,w
  2846  0392  00D0               	movwf	dtoa@n+2
  2847  0393  083D               	movf	dtoa@d+3,w
  2848  0394  00D1               	movwf	dtoa@n+3
  2849  0395  083E               	movf	dtoa@d+4,w
  2850  0396  00D2               	movwf	dtoa@n+4
  2851  0397  083F               	movf	dtoa@d+5,w
  2852  0398  00D3               	movwf	dtoa@n+5
  2853  0399  0840               	movf	dtoa@d+6,w
  2854  039A  00D4               	movwf	dtoa@n+6
  2855  039B  0841               	movf	dtoa@d+7,w
  2856  039C  00D5               	movwf	dtoa@n+7
  2857  039D                     l2380:	
  2858                           
  2859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2860  039D  304E               	movlw	low dtoa@n
  2861  039E  0086               	movwf	6
  2862  039F  3000               	movlw	high dtoa@n
  2863  03A0  0087               	movwf	7
  2864  03A1  3F47               	moviw [7]fsr1
  2865  03A2  00C2               	movwf	??_dtoa
  2866  03A3  1BC2               	btfsc	??_dtoa,7
  2867  03A4  2BA6               	goto	u2471
  2868  03A5  2BA8               	goto	u2470
  2869  03A6                     u2471:	
  2870  03A6  3001               	movlw	1
  2871  03A7  2BA9               	goto	u2480
  2872  03A8                     u2470:	
  2873  03A8  3000               	movlw	0
  2874  03A9                     u2480:	
  2875  03A9  0020               	movlb	0	; select bank0
  2876  03AA  00C3               	movwf	??_dtoa+1
  2877  03AB  01C4               	clrf	??_dtoa+2
  2878  03AC  0843               	movf	??_dtoa+1,w
  2879  03AD  00CC               	movwf	dtoa@s
  2880  03AE  0844               	movf	??_dtoa+2,w
  2881  03AF  00CD               	movwf	dtoa@s+1
  2882  03B0                     l2382:	
  2883                           
  2884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2885  03B0  084C               	movf	dtoa@s,w
  2886  03B1  044D               	iorwf	dtoa@s+1,w
  2887  03B2  1903               	btfsc	3,2
  2888  03B3  2BB5               	goto	u2491
  2889  03B4  2BB6               	goto	u2490
  2890  03B5                     u2491:	
  2891  03B5  2BD4               	goto	l310
  2892  03B6                     u2490:	
  2893  03B6                     l2384:	
  2894                           
  2895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2896  03B6  09CE               	comf	dtoa@n,f
  2897  03B7  09CF               	comf	dtoa@n+1,f
  2898  03B8  09D0               	comf	dtoa@n+2,f
  2899  03B9  09D1               	comf	dtoa@n+3,f
  2900  03BA  09D2               	comf	dtoa@n+4,f
  2901  03BB  09D3               	comf	dtoa@n+5,f
  2902  03BC  09D4               	comf	dtoa@n+6,f
  2903  03BD  09D5               	comf	dtoa@n+7,f
  2904  03BE  0ACE               	incf	dtoa@n,f
  2905  03BF  1D03               	skipz
  2906  03C0  2BD4               	goto	u250lld
  2907  03C1  0ACF               	incf	dtoa@n+1,f
  2908  03C2  1D03               	skipz
  2909  03C3  2BD4               	goto	u250lld
  2910  03C4  0AD0               	incf	dtoa@n+2,f
  2911  03C5  1D03               	skipz
  2912  03C6  2BD4               	goto	u250lld
  2913  03C7  0AD1               	incf	dtoa@n+3,f
  2914  03C8  1D03               	skipz
  2915  03C9  2BD4               	goto	u250lld
  2916  03CA  0AD2               	incf	dtoa@n+4,f
  2917  03CB  1D03               	skipz
  2918  03CC  2BD4               	goto	u250lld
  2919  03CD  0AD3               	incf	dtoa@n+5,f
  2920  03CE  1D03               	skipz
  2921  03CF  2BD4               	goto	u250lld
  2922  03D0  0AD4               	incf	dtoa@n+6,f
  2923  03D1  1D03               	skipz
  2924  03D2  2BD4               	goto	u250lld
  2925  03D3  0AD5               	incf	dtoa@n+7,f
  2926  03D4                     u250lld:	
  2927  03D4                     l310:	
  2928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 284:     }
  2929                           
  2930                           
  2931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2932  03D4  0023               	movlb	3	; select bank3
  2933  03D5  1BCF               	btfsc	(_prec+1)^(0+384),7
  2934  03D6  2BD8               	goto	u2511
  2935  03D7  2BD9               	goto	u2510
  2936  03D8                     u2511:	
  2937  03D8  2BDD               	goto	l311
  2938  03D9                     u2510:	
  2939  03D9                     l2386:	
  2940                           
  2941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2942  03D9  30FD               	movlw	253
  2943  03DA  05F6               	andwf	_flags,f
  2944  03DB  30FF               	movlw	255
  2945  03DC  05F7               	andwf	_flags+1,f
  2946  03DD                     l311:	
  2947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 289:     }
  2948                           
  2949                           
  2950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2951  03DD  084F               	movf	(_prec+1)^(0+384),w
  2952  03DE  3A80               	xorlw	128
  2953  03DF  0020               	movlb	0	; select bank0
  2954  03E0  00C2               	movwf	??_dtoa
  2955  03E1  3080               	movlw	128
  2956  03E2  0242               	subwf	??_dtoa,w
  2957  03E3  1D03               	skipz
  2958  03E4  2BE8               	goto	u2525
  2959  03E5  3001               	movlw	1
  2960  03E6  0023               	movlb	3	; select bank3
  2961  03E7  024E               	subwf	_prec^(0+384),w
  2962  03E8                     u2525:	
  2963  03E8  1803               	skipnc
  2964  03E9  2BEB               	goto	u2521
  2965  03EA  2BEC               	goto	u2520
  2966  03EB                     u2521:	
  2967  03EB  2BF2               	goto	l2390
  2968  03EC                     u2520:	
  2969  03EC                     l2388:	
  2970  03EC  3001               	movlw	1
  2971  03ED  0020               	movlb	0	; select bank0
  2972  03EE  00C8               	movwf	dtoa@p
  2973  03EF  3000               	movlw	0
  2974  03F0  00C9               	movwf	dtoa@p+1
  2975  03F1  2BFA               	goto	l315
  2976  03F2                     l2390:	
  2977  03F2  0023               	movlb	3	; select bank3
  2978  03F3  084F               	movf	(_prec+1)^(0+384),w
  2979  03F4  0020               	movlb	0	; select bank0
  2980  03F5  00C9               	movwf	dtoa@p+1
  2981  03F6  0023               	movlb	3	; select bank3
  2982  03F7  084E               	movf	_prec^(0+384),w
  2983  03F8  0020               	movlb	0	; select bank0
  2984  03F9  00C8               	movwf	dtoa@p
  2985  03FA                     l315:	
  2986                           
  2987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2988  03FA  0023               	movlb	3	; select bank3
  2989  03FB  084D               	movf	(_width+1)^(0+384),w
  2990  03FC  0020               	movlb	0	; select bank0
  2991  03FD  00CB               	movwf	dtoa@w+1
  2992  03FE  0023               	movlb	3	; select bank3
  2993  03FF  084C               	movf	_width^(0+384),w
  2994  0400  0020               	movlb	0	; select bank0
  2995  0401  00CA               	movwf	dtoa@w
  2996  0402                     l2392:	
  2997                           
  2998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2999  0402  084C               	movf	dtoa@s,w
  3000  0403  044D               	iorwf	dtoa@s+1,w
  3001  0404  1D03               	btfss	3,2
  3002  0405  2C07               	goto	u2531
  3003  0406  2C08               	goto	u2530
  3004  0407                     u2531:	
  3005  0407  2C0C               	goto	l2396
  3006  0408                     u2530:	
  3007  0408                     l2394:	
  3008  0408  1D76               	btfss	_flags,2
  3009  0409  2C0B               	goto	u2541
  3010  040A  2C0C               	goto	u2540
  3011  040B                     u2541:	
  3012  040B  2C10               	goto	l316
  3013  040C                     u2540:	
  3014  040C                     l2396:	
  3015                           
  3016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  3017  040C  30FF               	movlw	255
  3018  040D  07CA               	addwf	dtoa@w,f
  3019  040E  30FF               	movlw	255
  3020  040F  3DCB               	addwfc	dtoa@w+1,f
  3021  0410                     l316:	
  3022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 294:     }
  3023                           
  3024                           
  3025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  3026  0410  301F               	movlw	31
  3027  0411  00D6               	movwf	dtoa@i
  3028  0412  3000               	movlw	0
  3029  0413  00D7               	movwf	dtoa@i+1
  3030  0414                     l2398:	
  3031                           
  3032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  3033  0414  0024               	movlb	4	; select bank4
  3034  0415  01E7               	clrf	(_dbuf^(0+512)+31)
  3035                           
  3036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3037  0416  2C80               	goto	l319
  3038  0417                     l2400:	
  3039                           
  3040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  3041  0417  30FF               	movlw	255
  3042  0418  0020               	movlb	0	; select bank0
  3043  0419  07D6               	addwf	dtoa@i,f
  3044  041A  30FF               	movlw	255
  3045  041B  3DD7               	addwfc	dtoa@i+1,f
  3046  041C                     l2402:	
  3047                           
  3048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  3049  041C  300A               	movlw	10
  3050  041D  00A0               	movwf	___aomod@divisor
  3051  041E  01A1               	clrf	___aomod@divisor+1
  3052  041F  01A2               	clrf	___aomod@divisor+2
  3053  0420  01A3               	clrf	___aomod@divisor+3
  3054  0421  01A4               	clrf	___aomod@divisor+4
  3055  0422  01A5               	clrf	___aomod@divisor+5
  3056  0423  01A6               	clrf	___aomod@divisor+6
  3057  0424  01A7               	clrf	___aomod@divisor+7
  3058  0425  084E               	movf	dtoa@n,w
  3059  0426  00A8               	movwf	___aomod@dividend
  3060  0427  084F               	movf	dtoa@n+1,w
  3061  0428  00A9               	movwf	___aomod@dividend+1
  3062  0429  0850               	movf	dtoa@n+2,w
  3063  042A  00AA               	movwf	___aomod@dividend+2
  3064  042B  0851               	movf	dtoa@n+3,w
  3065  042C  00AB               	movwf	___aomod@dividend+3
  3066  042D  0852               	movf	dtoa@n+4,w
  3067  042E  00AC               	movwf	___aomod@dividend+4
  3068  042F  0853               	movf	dtoa@n+5,w
  3069  0430  00AD               	movwf	___aomod@dividend+5
  3070  0431  0854               	movf	dtoa@n+6,w
  3071  0432  00AE               	movwf	___aomod@dividend+6
  3072  0433  0855               	movf	dtoa@n+7,w
  3073  0434  00AF               	movwf	___aomod@dividend+7
  3074  0435  3185  25F8  3183   	fcall	___aomod
  3075  0438  0020               	movlb	0	; select bank0
  3076  0439  0821               	movf	?___aomod+1,w
  3077  043A  00B3               	movwf	abs@a+1
  3078  043B  0820               	movf	?___aomod,w
  3079  043C  00B2               	movwf	abs@a
  3080  043D  318C  24CC  3183   	fcall	_abs
  3081  0440  0020               	movlb	0	; select bank0
  3082  0441  0832               	movf	?_abs,w
  3083  0442  3E30               	addlw	48
  3084  0443  00C2               	movwf	??_dtoa
  3085  0444  0856               	movf	dtoa@i,w
  3086  0445  3E48               	addlw	(low (_dbuf| (0+512)))& (0+255)
  3087  0446  0086               	movwf	6
  3088  0447  3002               	movlw	2	; select bank4/5
  3089  0448  0087               	movwf	7
  3090  0449  0842               	movf	??_dtoa,w
  3091  044A  0081               	movwf	1
  3092  044B                     l2404:	
  3093                           
  3094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  3095  044B  30FF               	movlw	255
  3096  044C  07C8               	addwf	dtoa@p,f
  3097  044D  30FF               	movlw	255
  3098  044E  3DC9               	addwfc	dtoa@p+1,f
  3099  044F                     l2406:	
  3100                           
  3101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  3102  044F  30FF               	movlw	255
  3103  0450  07CA               	addwf	dtoa@w,f
  3104  0451  30FF               	movlw	255
  3105  0452  3DCB               	addwfc	dtoa@w+1,f
  3106  0453                     l2408:	
  3107                           
  3108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  3109  0453  300A               	movlw	10
  3110  0454  00A0               	movwf	___aodiv@divisor
  3111  0455  01A1               	clrf	___aodiv@divisor+1
  3112  0456  01A2               	clrf	___aodiv@divisor+2
  3113  0457  01A3               	clrf	___aodiv@divisor+3
  3114  0458  01A4               	clrf	___aodiv@divisor+4
  3115  0459  01A5               	clrf	___aodiv@divisor+5
  3116  045A  01A6               	clrf	___aodiv@divisor+6
  3117  045B  01A7               	clrf	___aodiv@divisor+7
  3118  045C  084E               	movf	dtoa@n,w
  3119  045D  00A8               	movwf	___aodiv@dividend
  3120  045E  084F               	movf	dtoa@n+1,w
  3121  045F  00A9               	movwf	___aodiv@dividend+1
  3122  0460  0850               	movf	dtoa@n+2,w
  3123  0461  00AA               	movwf	___aodiv@dividend+2
  3124  0462  0851               	movf	dtoa@n+3,w
  3125  0463  00AB               	movwf	___aodiv@dividend+3
  3126  0464  0852               	movf	dtoa@n+4,w
  3127  0465  00AC               	movwf	___aodiv@dividend+4
  3128  0466  0853               	movf	dtoa@n+5,w
  3129  0467  00AD               	movwf	___aodiv@dividend+5
  3130  0468  0854               	movf	dtoa@n+6,w
  3131  0469  00AE               	movwf	___aodiv@dividend+6
  3132  046A  0855               	movf	dtoa@n+7,w
  3133  046B  00AF               	movwf	___aodiv@dividend+7
  3134  046C  3184  24F4  3183   	fcall	___aodiv
  3135  046F  0020               	movlb	0	; select bank0
  3136  0470  0820               	movf	?___aodiv,w
  3137  0471  00CE               	movwf	dtoa@n
  3138  0472  0821               	movf	?___aodiv+1,w
  3139  0473  00CF               	movwf	dtoa@n+1
  3140  0474  0822               	movf	?___aodiv+2,w
  3141  0475  00D0               	movwf	dtoa@n+2
  3142  0476  0823               	movf	?___aodiv+3,w
  3143  0477  00D1               	movwf	dtoa@n+3
  3144  0478  0824               	movf	?___aodiv+4,w
  3145  0479  00D2               	movwf	dtoa@n+4
  3146  047A  0825               	movf	?___aodiv+5,w
  3147  047B  00D3               	movwf	dtoa@n+5
  3148  047C  0826               	movf	?___aodiv+6,w
  3149  047D  00D4               	movwf	dtoa@n+6
  3150  047E  0827               	movf	?___aodiv+7,w
  3151  047F  00D5               	movwf	dtoa@n+7
  3152  0480                     l319:	
  3153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 305:     }
  3154                           
  3155                           
  3156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3157  0480  0020               	movlb	0	; select bank0
  3158  0481  0857               	movf	dtoa@i+1,w
  3159  0482  3A80               	xorlw	128
  3160  0483  00C2               	movwf	??_dtoa
  3161  0484  3080               	movlw	128
  3162  0485  0242               	subwf	??_dtoa,w
  3163  0486  1D03               	skipz
  3164  0487  2C8A               	goto	u2555
  3165  0488  3001               	movlw	1
  3166  0489  0256               	subwf	dtoa@i,w
  3167  048A                     u2555:	
  3168  048A  1C03               	skipc
  3169  048B  2C8D               	goto	u2551
  3170  048C  2C8E               	goto	u2550
  3171  048D                     u2551:	
  3172  048D  2CBA               	goto	l2418
  3173  048E                     u2550:	
  3174  048E                     l2410:	
  3175  048E  0020               	movlb	0	; select bank0
  3176  048F  084E               	movf	dtoa@n,w
  3177  0490  044F               	iorwf	dtoa@n+1,w
  3178  0491  0450               	iorwf	dtoa@n+2,w
  3179  0492  0451               	iorwf	dtoa@n+3,w
  3180  0493  0452               	iorwf	dtoa@n+4,w
  3181  0494  0453               	iorwf	dtoa@n+5,w
  3182  0495  0454               	iorwf	dtoa@n+6,w
  3183  0496  0455               	iorwf	dtoa@n+7,w
  3184  0497  1D03               	skipz
  3185  0498  2C9A               	goto	u2561
  3186  0499  2C9B               	goto	u2560
  3187  049A                     u2561:	
  3188  049A  2C17               	goto	l2400
  3189  049B                     u2560:	
  3190  049B                     l2412:	
  3191  049B  0849               	movf	dtoa@p+1,w
  3192  049C  3A80               	xorlw	128
  3193  049D  00C2               	movwf	??_dtoa
  3194  049E  3080               	movlw	128
  3195  049F  0242               	subwf	??_dtoa,w
  3196  04A0  1D03               	skipz
  3197  04A1  2CA4               	goto	u2575
  3198  04A2  3001               	movlw	1
  3199  04A3  0248               	subwf	dtoa@p,w
  3200  04A4                     u2575:	
  3201  04A4  1803               	skipnc
  3202  04A5  2CA7               	goto	u2571
  3203  04A6  2CA8               	goto	u2570
  3204  04A7                     u2571:	
  3205  04A7  2C17               	goto	l2400
  3206  04A8                     u2570:	
  3207  04A8                     l2414:	
  3208  04A8  0020               	movlb	0	; select bank0
  3209  04A9  084B               	movf	dtoa@w+1,w
  3210  04AA  3A80               	xorlw	128
  3211  04AB  00C2               	movwf	??_dtoa
  3212  04AC  3080               	movlw	128
  3213  04AD  0242               	subwf	??_dtoa,w
  3214  04AE  1D03               	skipz
  3215  04AF  2CB2               	goto	u2585
  3216  04B0  3001               	movlw	1
  3217  04B1  024A               	subwf	dtoa@w,w
  3218  04B2                     u2585:	
  3219  04B2  1C03               	skipc
  3220  04B3  2CB5               	goto	u2581
  3221  04B4  2CB6               	goto	u2580
  3222  04B5                     u2581:	
  3223  04B5  2CBA               	goto	l2418
  3224  04B6                     u2580:	
  3225  04B6                     l2416:	
  3226  04B6  18F6               	btfsc	_flags,1
  3227  04B7  2CB9               	goto	u2591
  3228  04B8  2CBA               	goto	u2590
  3229  04B9                     u2591:	
  3230  04B9  2C17               	goto	l2400
  3231  04BA                     u2590:	
  3232  04BA                     l2418:	
  3233                           
  3234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  3235  04BA  0020               	movlb	0	; select bank0
  3236  04BB  084C               	movf	dtoa@s,w
  3237  04BC  044D               	iorwf	dtoa@s+1,w
  3238  04BD  1D03               	btfss	3,2
  3239  04BE  2CC0               	goto	u2601
  3240  04BF  2CC1               	goto	u2600
  3241  04C0                     u2601:	
  3242  04C0  2CC5               	goto	l2422
  3243  04C1                     u2600:	
  3244  04C1                     l2420:	
  3245  04C1  1D76               	btfss	_flags,2
  3246  04C2  2CC4               	goto	u2611
  3247  04C3  2CC5               	goto	u2610
  3248  04C4                     u2611:	
  3249  04C4  2CE1               	goto	l2432
  3250  04C5                     u2610:	
  3251  04C5                     l2422:	
  3252                           
  3253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  3254  04C5  30FF               	movlw	255
  3255  04C6  07D6               	addwf	dtoa@i,f
  3256  04C7  30FF               	movlw	255
  3257  04C8  3DD7               	addwfc	dtoa@i+1,f
  3258  04C9                     l2424:	
  3259                           
  3260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  3261  04C9  084C               	movf	dtoa@s,w
  3262  04CA  044D               	iorwf	dtoa@s+1,w
  3263  04CB  1D03               	btfss	3,2
  3264  04CC  2CCE               	goto	u2621
  3265  04CD  2CCF               	goto	u2620
  3266  04CE                     u2621:	
  3267  04CE  2CD4               	goto	l2428
  3268  04CF                     u2620:	
  3269  04CF                     l2426:	
  3270  04CF  302B               	movlw	43
  3271  04D0  00C6               	movwf	_dtoa$861
  3272  04D1  3000               	movlw	0
  3273  04D2  00C7               	movwf	_dtoa$861+1
  3274  04D3  2CD8               	goto	l2430
  3275  04D4                     l2428:	
  3276  04D4  302D               	movlw	45
  3277  04D5  00C6               	movwf	_dtoa$861
  3278  04D6  3000               	movlw	0
  3279  04D7  00C7               	movwf	_dtoa$861+1
  3280  04D8                     l2430:	
  3281  04D8  0846               	movf	_dtoa$861,w
  3282  04D9  00C2               	movwf	??_dtoa
  3283  04DA  0856               	movf	dtoa@i,w
  3284  04DB  3E48               	addlw	(low (_dbuf| (0+512)))& (0+255)
  3285  04DC  0086               	movwf	6
  3286  04DD  3002               	movlw	2	; select bank4/5
  3287  04DE  0087               	movwf	7
  3288  04DF  0842               	movf	??_dtoa,w
  3289  04E0  0081               	movwf	1
  3290  04E1                     l2432:	
  3291                           
  3292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  3293  04E1  0856               	movf	dtoa@i,w
  3294  04E2  3E48               	addlw	(low (_dbuf| (0+512)))& (0+255)
  3295  04E3  00C2               	movwf	??_dtoa
  3296  04E4  0842               	movf	??_dtoa,w
  3297  04E5  00AF               	movwf	pad@buf
  3298  04E6  084B               	movf	dtoa@w+1,w
  3299  04E7  00B1               	movwf	pad@p+1
  3300  04E8  084A               	movf	dtoa@w,w
  3301  04E9  00B0               	movwf	pad@p
  3302  04EA  0845               	movf	dtoa@fp,w
  3303  04EB  318E  26A8  3183   	fcall	_pad
  3304  04EE  0020               	movlb	0	; select bank0
  3305  04EF  0830               	movf	?_pad+1,w
  3306  04F0  00BB               	movwf	?_dtoa+1
  3307  04F1  082F               	movf	?_pad,w
  3308  04F2  00BA               	movwf	?_dtoa
  3309  04F3                     l333:	
  3310  04F3  0008               	return
  3311  04F4                     __end_of_dtoa:	
  3312                           
  3313                           	psect	text5
  3314  0EA8                     __ptext5:	
  3315 ;; *************** function _pad *****************
  3316 ;; Defined at:
  3317 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  fp              1    wreg     PTR struct _IO_FILE
  3320 ;;		 -> sprintf@f(6), 
  3321 ;;  buf             1   15[BANK0 ] PTR unsigned char 
  3322 ;;		 -> dbuf(32), 
  3323 ;;  p               2   16[BANK0 ] int 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  fp              1   23[BANK0 ] PTR struct _IO_FILE
  3326 ;;		 -> sprintf@f(6), 
  3327 ;;  w               2   21[BANK0 ] int 
  3328 ;;  i               2   19[BANK0 ] int 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  2   15[BANK0 ] int 
  3331 ;; Registers used:
  3332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3338 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3342 ;;Total ram usage:        9 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    7
  3345 ;; This function calls:
  3346 ;;		_fputc
  3347 ;;		_fputs
  3348 ;;		_strlen
  3349 ;; This function is called by:
  3350 ;;		_dtoa
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           
  3355                           ;psect for function _pad
  3356  0EA8                     _pad:	
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3360                           ;pad@fp stored from wreg
  3361  0EA8  0020               	movlb	0	; select bank0
  3362  0EA9  00B7               	movwf	pad@fp
  3363  0EAA                     l2284:	
  3364                           
  3365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3366  0EAA  1C76               	btfss	_flags,0
  3367  0EAB  2EAD               	goto	u2211
  3368  0EAC  2EAE               	goto	u2210
  3369  0EAD                     u2211:	
  3370  0EAD  2EB6               	goto	l2288
  3371  0EAE                     u2210:	
  3372  0EAE                     l2286:	
  3373                           
  3374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3375  0EAE  0837               	movf	pad@fp,w
  3376  0EAF  00B2               	movwf	??_pad
  3377  0EB0  0832               	movf	??_pad,w
  3378  0EB1  00F4               	movwf	fputs@fp
  3379  0EB2  082F               	movf	pad@buf,w
  3380  0EB3  318D  252C  318E   	fcall	_fputs
  3381  0EB6                     l2288:	
  3382                           
  3383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3384  0EB6  0020               	movlb	0	; select bank0
  3385  0EB7  1BB1               	btfsc	pad@p+1,7
  3386  0EB8  2EBA               	goto	u2221
  3387  0EB9  2EBB               	goto	u2220
  3388  0EBA                     u2221:	
  3389  0EBA  2EC0               	goto	l2292
  3390  0EBB                     u2220:	
  3391  0EBB                     l2290:	
  3392  0EBB  0831               	movf	pad@p+1,w
  3393  0EBC  00B6               	movwf	pad@w+1
  3394  0EBD  0830               	movf	pad@p,w
  3395  0EBE  00B5               	movwf	pad@w
  3396  0EBF  2EC2               	goto	l302
  3397  0EC0                     l2292:	
  3398  0EC0  01B5               	clrf	pad@w
  3399  0EC1  01B6               	clrf	pad@w+1
  3400  0EC2                     l302:	
  3401                           
  3402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3403  0EC2  01B3               	clrf	pad@i
  3404  0EC3  01B4               	clrf	pad@i+1
  3405                           
  3406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3407  0EC4  2ED6               	goto	l2298
  3408  0EC5                     l2294:	
  3409                           
  3410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3411  0EC5  3020               	movlw	32
  3412  0EC6  0020               	movlb	0	; select bank0
  3413  0EC7  00A0               	movwf	fputc@c
  3414  0EC8  3000               	movlw	0
  3415  0EC9  00A1               	movwf	fputc@c+1
  3416  0ECA  0837               	movf	pad@fp,w
  3417  0ECB  00B2               	movwf	??_pad
  3418  0ECC  0832               	movf	??_pad,w
  3419  0ECD  00A2               	movwf	fputc@fp
  3420  0ECE  318E  2651  318E   	fcall	_fputc
  3421  0ED1                     l2296:	
  3422                           
  3423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3424  0ED1  3001               	movlw	1
  3425  0ED2  0020               	movlb	0	; select bank0
  3426  0ED3  07B3               	addwf	pad@i,f
  3427  0ED4  3000               	movlw	0
  3428  0ED5  3DB4               	addwfc	pad@i+1,f
  3429  0ED6                     l2298:	
  3430                           
  3431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3432  0ED6  0834               	movf	pad@i+1,w
  3433  0ED7  3A80               	xorlw	128
  3434  0ED8  00B2               	movwf	??_pad
  3435  0ED9  0836               	movf	pad@w+1,w
  3436  0EDA  3A80               	xorlw	128
  3437  0EDB  0232               	subwf	??_pad,w
  3438  0EDC  1D03               	skipz
  3439  0EDD  2EE0               	goto	u2235
  3440  0EDE  0835               	movf	pad@w,w
  3441  0EDF  0233               	subwf	pad@i,w
  3442  0EE0                     u2235:	
  3443  0EE0  1C03               	skipc
  3444  0EE1  2EE3               	goto	u2231
  3445  0EE2  2EE4               	goto	u2230
  3446  0EE3                     u2231:	
  3447  0EE3  2EC5               	goto	l2294
  3448  0EE4                     u2230:	
  3449  0EE4                     l305:	
  3450                           
  3451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3452  0EE4  1876               	btfsc	_flags,0
  3453  0EE5  2EE7               	goto	u2241
  3454  0EE6  2EE8               	goto	u2240
  3455  0EE7                     u2241:	
  3456  0EE7  2EF1               	goto	l2302
  3457  0EE8                     u2240:	
  3458  0EE8                     l2300:	
  3459                           
  3460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3461  0EE8  0020               	movlb	0	; select bank0
  3462  0EE9  0837               	movf	pad@fp,w
  3463  0EEA  00B2               	movwf	??_pad
  3464  0EEB  0832               	movf	??_pad,w
  3465  0EEC  00F4               	movwf	fputs@fp
  3466  0EED  082F               	movf	pad@buf,w
  3467  0EEE  318D  252C  318E   	fcall	_fputs
  3468  0EF1                     l2302:	
  3469                           
  3470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3471  0EF1  0020               	movlb	0	; select bank0
  3472  0EF2  082F               	movf	pad@buf,w
  3473  0EF3  00F4               	movwf	strlen@s
  3474  0EF4  3002               	movlw	2
  3475  0EF5  00F5               	movwf	strlen@s+1
  3476  0EF6  318C  24B1  318E   	fcall	_strlen
  3477  0EF9  0020               	movlb	0	; select bank0
  3478  0EFA  0835               	movf	pad@w,w
  3479  0EFB  0774               	addwf	?_strlen,w
  3480  0EFC  00AF               	movwf	?_pad
  3481  0EFD  0836               	movf	pad@w+1,w
  3482  0EFE  3D75               	addwfc	?_strlen+1,w
  3483  0EFF  00B0               	movwf	?_pad+1
  3484  0F00                     l307:	
  3485  0F00  0008               	return
  3486  0F01                     __end_of_pad:	
  3487                           
  3488                           	psect	text6
  3489  0CB1                     __ptext6:	
  3490 ;; *************** function _strlen *****************
  3491 ;; Defined at:
  3492 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  s               2    4[COMMON] PTR const unsigned char 
  3495 ;;		 -> dbuf(32), main@readbuffer_784(20), main@readbuffer_781(20), main@readbuffer_778(20), 
  3496 ;;		 -> main@readbuffer_773(20), main@readbuffer_769(20), main@readbuffer_766(22), main@readbuffer_758(20), 
  3497 ;;		 -> main@readbuffer(20), 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  a               2    0[BANK0 ] PTR const unsigned char 
  3500 ;;		 -> dbuf(32), main@readbuffer_784(20), main@readbuffer_781(20), main@readbuffer_778(20), 
  3501 ;;		 -> main@readbuffer_773(20), main@readbuffer_769(20), main@readbuffer_766(22), main@readbuffer_758(20), 
  3502 ;;		 -> main@readbuffer(20), 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  2    4[COMMON] unsigned int 
  3505 ;; Registers used:
  3506 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;Total ram usage:        4 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    4
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;;		_pad
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function _strlen
  3529  0CB1                     _strlen:	
  3530  0CB1                     l2266:	
  3531                           ;incstack = 0
  3532                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3533                           
  3534  0CB1  0875               	movf	strlen@s+1,w
  3535  0CB2  0020               	movlb	0	; select bank0
  3536  0CB3  00A1               	movwf	strlen@a+1
  3537  0CB4  0874               	movf	strlen@s,w
  3538  0CB5  00A0               	movwf	strlen@a
  3539  0CB6  2CBB               	goto	l2270
  3540  0CB7                     l2268:	
  3541  0CB7  3001               	movlw	1
  3542  0CB8  07F4               	addwf	strlen@s,f
  3543  0CB9  3000               	movlw	0
  3544  0CBA  3DF5               	addwfc	strlen@s+1,f
  3545  0CBB                     l2270:	
  3546  0CBB  0874               	movf	strlen@s,w
  3547  0CBC  0086               	movwf	6
  3548  0CBD  0875               	movf	strlen@s+1,w
  3549  0CBE  0087               	movwf	7
  3550  0CBF  0801               	movf	1,w
  3551  0CC0  1D03               	btfss	3,2
  3552  0CC1  2CC3               	goto	u2191
  3553  0CC2  2CC4               	goto	u2190
  3554  0CC3                     u2191:	
  3555  0CC3  2CB7               	goto	l2268
  3556  0CC4                     u2190:	
  3557  0CC4                     l2272:	
  3558  0CC4  0020               	movlb	0	; select bank0
  3559  0CC5  0820               	movf	strlen@a,w
  3560  0CC6  0274               	subwf	strlen@s,w
  3561  0CC7  00F4               	movwf	?_strlen
  3562  0CC8  0821               	movf	strlen@a+1,w
  3563  0CC9  3B75               	subwfb	strlen@s+1,w
  3564  0CCA  00F5               	movwf	?_strlen+1
  3565  0CCB                     l852:	
  3566  0CCB  0008               	return
  3567  0CCC                     __end_of_strlen:	
  3568                           
  3569                           	psect	text7
  3570  0D2C                     __ptext7:	
  3571 ;; *************** function _fputs *****************
  3572 ;; Defined at:
  3573 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  s               1    wreg     PTR const unsigned char 
  3576 ;;		 -> dbuf(32), 
  3577 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  3578 ;;		 -> sprintf@f(6), 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  s               1   14[BANK0 ] PTR const unsigned char 
  3581 ;;		 -> dbuf(32), 
  3582 ;;  i               2   12[BANK0 ] int 
  3583 ;;  c               1   11[BANK0 ] unsigned char 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  2    4[COMMON] int 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3593 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3594 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3595 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3596 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3597 ;;Total ram usage:        8 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    6
  3600 ;; This function calls:
  3601 ;;		_fputc
  3602 ;; This function is called by:
  3603 ;;		_pad
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           
  3608                           ;psect for function _fputs
  3609  0D2C                     _fputs:	
  3610                           
  3611                           ;incstack = 0
  3612                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3613                           ;fputs@s stored from wreg
  3614  0D2C  0020               	movlb	0	; select bank0
  3615  0D2D  00AE               	movwf	fputs@s
  3616  0D2E                     l2276:	
  3617  0D2E  01AC               	clrf	fputs@i
  3618  0D2F  01AD               	clrf	fputs@i+1
  3619  0D30  2D44               	goto	l2282
  3620  0D31                     l2278:	
  3621  0D31  082B               	movf	fputs@c,w
  3622  0D32  00A8               	movwf	??_fputs
  3623  0D33  01A9               	clrf	??_fputs+1
  3624  0D34  0828               	movf	??_fputs,w
  3625  0D35  00A0               	movwf	fputc@c
  3626  0D36  0829               	movf	??_fputs+1,w
  3627  0D37  00A1               	movwf	fputc@c+1
  3628  0D38  0874               	movf	fputs@fp,w
  3629  0D39  00AA               	movwf	??_fputs+2
  3630  0D3A  082A               	movf	??_fputs+2,w
  3631  0D3B  00A2               	movwf	fputc@fp
  3632  0D3C  318E  2651  318D   	fcall	_fputc
  3633  0D3F                     l2280:	
  3634  0D3F  3001               	movlw	1
  3635  0D40  0020               	movlb	0	; select bank0
  3636  0D41  07AC               	addwf	fputs@i,f
  3637  0D42  3000               	movlw	0
  3638  0D43  3DAD               	addwfc	fputs@i+1,f
  3639  0D44                     l2282:	
  3640  0D44  082C               	movf	fputs@i,w
  3641  0D45  072E               	addwf	fputs@s,w
  3642  0D46  00A8               	movwf	??_fputs
  3643  0D47  0828               	movf	??_fputs,w
  3644  0D48  0086               	movwf	6
  3645  0D49  3002               	movlw	2	; select bank4/5
  3646  0D4A  0087               	movwf	7
  3647  0D4B  0801               	movf	1,w
  3648  0D4C  00A9               	movwf	??_fputs+1
  3649  0D4D  0829               	movf	??_fputs+1,w
  3650  0D4E  00AB               	movwf	fputs@c
  3651  0D4F  082B               	movf	fputs@c,w
  3652  0D50  1D03               	btfss	3,2
  3653  0D51  2D53               	goto	u2201
  3654  0D52  2D54               	goto	u2200
  3655  0D53                     u2201:	
  3656  0D53  2D31               	goto	l2278
  3657  0D54                     u2200:	
  3658  0D54                     l828:	
  3659  0D54  0008               	return
  3660  0D55                     __end_of_fputs:	
  3661                           
  3662                           	psect	text8
  3663  0E51                     __ptext8:	
  3664 ;; *************** function _fputc *****************
  3665 ;; Defined at:
  3666 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  c               2    0[BANK0 ] int 
  3669 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  3670 ;;		 -> sprintf@f(6), 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  2    0[BANK0 ] int 
  3675 ;; Registers used:
  3676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3682 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3686 ;;Total ram usage:        8 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    5
  3689 ;; This function calls:
  3690 ;;		_putch
  3691 ;; This function is called by:
  3692 ;;		_pad
  3693 ;;		_vfpfcnvrt
  3694 ;;		_fputs
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           
  3699                           ;psect for function _fputc
  3700  0E51                     _fputc:	
  3701  0E51                     l2250:	
  3702                           ;incstack = 0
  3703                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3704                           
  3705  0E51  0020               	movlb	0	; select bank0
  3706  0E52  0822               	movf	fputc@fp,w
  3707  0E53  1903               	btfsc	3,2
  3708  0E54  2E56               	goto	u2151
  3709  0E55  2E57               	goto	u2150
  3710  0E56                     u2151:	
  3711  0E56  2E5C               	goto	l2254
  3712  0E57                     u2150:	
  3713  0E57                     l2252:	
  3714  0E57  0822               	movf	fputc@fp,w
  3715  0E58  1D03               	btfss	3,2
  3716  0E59  2E5B               	goto	u2161
  3717  0E5A  2E5C               	goto	u2160
  3718  0E5B                     u2161:	
  3719  0E5B  2E61               	goto	l2256
  3720  0E5C                     u2160:	
  3721  0E5C                     l2254:	
  3722  0E5C  0820               	movf	fputc@c,w
  3723  0E5D  3180  2003  318E   	fcall	_putch
  3724  0E60  2EA7               	goto	l820
  3725  0E61                     l2256:	
  3726  0E61  0822               	movf	fputc@fp,w
  3727  0E62  3E04               	addlw	4
  3728  0E63  0086               	movwf	6
  3729  0E64  0187               	clrf	7
  3730  0E65  0016               	moviw fsr1++
  3731  0E66  0401               	iorwf	1,w
  3732  0E67  1903               	btfsc	3,2
  3733  0E68  2E6A               	goto	u2171
  3734  0E69  2E6B               	goto	u2170
  3735  0E6A                     u2171:	
  3736  0E6A  2E89               	goto	l2260
  3737  0E6B                     u2170:	
  3738  0E6B                     l2258:	
  3739  0E6B  0822               	movf	fputc@fp,w
  3740  0E6C  3E04               	addlw	4
  3741  0E6D  0086               	movwf	6
  3742  0E6E  0187               	clrf	7
  3743  0E6F  3F40               	moviw [0]fsr1
  3744  0E70  00A3               	movwf	??_fputc
  3745  0E71  3F41               	moviw [1]fsr1
  3746  0E72  00A4               	movwf	??_fputc+1
  3747  0E73  0822               	movf	fputc@fp,w
  3748  0E74  3E02               	addlw	2
  3749  0E75  0086               	movwf	6
  3750  0E76  0187               	clrf	7
  3751  0E77  3F40               	moviw [0]fsr1
  3752  0E78  00A5               	movwf	??_fputc+2
  3753  0E79  3F41               	moviw [1]fsr1
  3754  0E7A  00A6               	movwf	??_fputc+3
  3755  0E7B  0826               	movf	??_fputc+3,w
  3756  0E7C  3A80               	xorlw	128
  3757  0E7D  00A7               	movwf	??_fputc+4
  3758  0E7E  0824               	movf	??_fputc+1,w
  3759  0E7F  3A80               	xorlw	128
  3760  0E80  0227               	subwf	??_fputc+4,w
  3761  0E81  1D03               	skipz
  3762  0E82  2E85               	goto	u2185
  3763  0E83  0823               	movf	??_fputc,w
  3764  0E84  0225               	subwf	??_fputc+2,w
  3765  0E85                     u2185:	
  3766  0E85  1803               	skipnc
  3767  0E86  2E88               	goto	u2181
  3768  0E87  2E89               	goto	u2180
  3769  0E88                     u2181:	
  3770  0E88  2EA7               	goto	l820
  3771  0E89                     u2180:	
  3772  0E89                     l2260:	
  3773  0E89  0020               	movlb	0	; select bank0
  3774  0E8A  0822               	movf	fputc@fp,w
  3775  0E8B  3E02               	addlw	2
  3776  0E8C  0086               	movwf	6
  3777  0E8D  0187               	clrf	7
  3778  0E8E  0822               	movf	fputc@fp,w
  3779  0E8F  0084               	movwf	4
  3780  0E90  0185               	clrf	5
  3781  0E91  3F40               	moviw [0]fsr1
  3782  0E92  0700               	addwf	0,w
  3783  0E93  00A3               	movwf	??_fputc
  3784  0E94  3101               	addfsr 0,1
  3785  0E95  3F41               	moviw [1]fsr1
  3786  0E96  3D00               	addwfc	0,w
  3787  0E97  00A4               	movwf	??_fputc+1
  3788  0E98  0823               	movf	??_fputc,w
  3789  0E99  0086               	movwf	6
  3790  0E9A  0824               	movf	??_fputc+1,w
  3791  0E9B  0087               	movwf	7
  3792  0E9C  0820               	movf	fputc@c,w
  3793  0E9D  0081               	movwf	1
  3794  0E9E                     l2262:	
  3795  0E9E  0822               	movf	fputc@fp,w
  3796  0E9F  3E02               	addlw	2
  3797  0EA0  0086               	movwf	6
  3798  0EA1  0187               	clrf	7
  3799  0EA2  3001               	movlw	1
  3800  0EA3  0781               	addwf	1,f
  3801  0EA4  3141               	addfsr 1,1
  3802  0EA5  1803               	skipnc
  3803  0EA6  0A81               	incf	1,f
  3804  0EA7                     l820:	
  3805  0EA7  0008               	return
  3806  0EA8                     __end_of_fputc:	
  3807                           
  3808                           	psect	text9
  3809  0003                     __ptext9:	
  3810 ;; *************** function _putch *****************
  3811 ;; Defined at:
  3812 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  c               1    wreg     unsigned char 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  c               1    0[COMMON] unsigned char 
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3830 ;;Total ram usage:        0 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    4
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_fputc
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           
  3841                           ;psect for function _putch
  3842  0003                     _putch:	
  3843  0003                     l838:	
  3844                           ;incstack = 0
  3845                           ; Regs used in _putch: [wreg]
  3846                           
  3847  0003  0008               	return
  3848  0004                     __end_of_putch:	
  3849                           
  3850                           	psect	text10
  3851  0CCC                     __ptext10:	
  3852 ;; *************** function _abs *****************
  3853 ;; Defined at:
  3854 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  a               2   18[BANK0 ] int 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  2   18[BANK0 ] int 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3868 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3870 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3871 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3872 ;;Total ram usage:        4 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    4
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_dtoa
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           
  3883                           ;psect for function _abs
  3884  0CCC                     _abs:	
  3885  0CCC                     l2306:	
  3886                           ;incstack = 0
  3887                           ; Regs used in _abs: [wreg+status,2+status,0]
  3888                           
  3889  0CCC  0020               	movlb	0	; select bank0
  3890  0CCD  0833               	movf	abs@a+1,w
  3891  0CCE  3A80               	xorlw	128
  3892  0CCF  00B4               	movwf	??_abs
  3893  0CD0  3080               	movlw	128
  3894  0CD1  0234               	subwf	??_abs,w
  3895  0CD2  1D03               	skipz
  3896  0CD3  2CD6               	goto	u2255
  3897  0CD4  3001               	movlw	1
  3898  0CD5  0232               	subwf	abs@a,w
  3899  0CD6                     u2255:	
  3900  0CD6  1803               	skipnc
  3901  0CD7  2CD9               	goto	u2251
  3902  0CD8  2CDA               	goto	u2250
  3903  0CD9                     u2251:	
  3904  0CD9  2CE7               	goto	l805
  3905  0CDA                     u2250:	
  3906  0CDA                     l2308:	
  3907  0CDA  0020               	movlb	0	; select bank0
  3908  0CDB  0932               	comf	abs@a,w
  3909  0CDC  00B4               	movwf	??_abs
  3910  0CDD  0933               	comf	abs@a+1,w
  3911  0CDE  00B5               	movwf	??_abs+1
  3912  0CDF  0AB4               	incf	??_abs,f
  3913  0CE0  1903               	skipnz
  3914  0CE1  0AB5               	incf	??_abs+1,f
  3915  0CE2  0834               	movf	??_abs,w
  3916  0CE3  00B2               	movwf	?_abs
  3917  0CE4  0835               	movf	??_abs+1,w
  3918  0CE5  00B3               	movwf	?_abs+1
  3919  0CE6  2CE7               	goto	l808
  3920  0CE7                     l805:	
  3921  0CE7                     l808:	
  3922  0CE7  0008               	return
  3923  0CE8                     __end_of_abs:	
  3924                           
  3925                           	psect	text11
  3926  05F8                     __ptext11:	
  3927 ;; *************** function ___aomod *****************
  3928 ;; Defined at:
  3929 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  divisor         8    0[BANK0 ] long long 
  3932 ;;  dividend        8    8[BANK0 ] long long 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  sign            1   17[BANK0 ] unsigned char 
  3935 ;;  counter         1   16[BANK0 ] unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  8    0[BANK0 ] long long 
  3938 ;; Registers used:
  3939 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3945 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3946 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3948 ;;      Totals:         1      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;Total ram usage:       19 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    4
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_dtoa
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           
  3960                           ;psect for function ___aomod
  3961  05F8                     ___aomod:	
  3962  05F8                     l2348:	
  3963                           ;incstack = 0
  3964                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3965                           
  3966  05F8  0020               	movlb	0	; select bank0
  3967  05F9  01B1               	clrf	___aomod@sign
  3968  05FA                     l2350:	
  3969  05FA  3028               	movlw	low ___aomod@dividend
  3970  05FB  0086               	movwf	6
  3971  05FC  3000               	movlw	high ___aomod@dividend
  3972  05FD  0087               	movwf	7
  3973  05FE  3F47               	moviw [7]fsr1
  3974  05FF  00F4               	movwf	??___aomod
  3975  0600  1FF4               	btfss	??___aomod,7
  3976  0601  2E03               	goto	u2371
  3977  0602  2E04               	goto	u2370
  3978  0603                     u2371:	
  3979  0603  2E26               	goto	l2354
  3980  0604                     u2370:	
  3981  0604                     l2352:	
  3982  0604  0020               	movlb	0	; select bank0
  3983  0605  09A8               	comf	___aomod@dividend,f
  3984  0606  09A9               	comf	___aomod@dividend+1,f
  3985  0607  09AA               	comf	___aomod@dividend+2,f
  3986  0608  09AB               	comf	___aomod@dividend+3,f
  3987  0609  09AC               	comf	___aomod@dividend+4,f
  3988  060A  09AD               	comf	___aomod@dividend+5,f
  3989  060B  09AE               	comf	___aomod@dividend+6,f
  3990  060C  09AF               	comf	___aomod@dividend+7,f
  3991  060D  0AA8               	incf	___aomod@dividend,f
  3992  060E  1D03               	skipz
  3993  060F  2E23               	goto	u238lld
  3994  0610  0AA9               	incf	___aomod@dividend+1,f
  3995  0611  1D03               	skipz
  3996  0612  2E23               	goto	u238lld
  3997  0613  0AAA               	incf	___aomod@dividend+2,f
  3998  0614  1D03               	skipz
  3999  0615  2E23               	goto	u238lld
  4000  0616  0AAB               	incf	___aomod@dividend+3,f
  4001  0617  1D03               	skipz
  4002  0618  2E23               	goto	u238lld
  4003  0619  0AAC               	incf	___aomod@dividend+4,f
  4004  061A  1D03               	skipz
  4005  061B  2E23               	goto	u238lld
  4006  061C  0AAD               	incf	___aomod@dividend+5,f
  4007  061D  1D03               	skipz
  4008  061E  2E23               	goto	u238lld
  4009  061F  0AAE               	incf	___aomod@dividend+6,f
  4010  0620  1D03               	skipz
  4011  0621  2E23               	goto	u238lld
  4012  0622  0AAF               	incf	___aomod@dividend+7,f
  4013  0623                     u238lld:	
  4014  0623  0020               	movlb	0	; select bank0
  4015  0624  01B1               	clrf	___aomod@sign
  4016  0625  0AB1               	incf	___aomod@sign,f
  4017  0626                     l2354:	
  4018  0626  3020               	movlw	low ___aomod@divisor
  4019  0627  0086               	movwf	6
  4020  0628  3000               	movlw	high ___aomod@divisor
  4021  0629  0087               	movwf	7
  4022  062A  3F47               	moviw [7]fsr1
  4023  062B  00F4               	movwf	??___aomod
  4024  062C  1FF4               	btfss	??___aomod,7
  4025  062D  2E2F               	goto	u2391
  4026  062E  2E30               	goto	u2390
  4027  062F                     u2391:	
  4028  062F  2E4F               	goto	l2358
  4029  0630                     u2390:	
  4030  0630                     l2356:	
  4031  0630  0020               	movlb	0	; select bank0
  4032  0631  09A0               	comf	___aomod@divisor,f
  4033  0632  09A1               	comf	___aomod@divisor+1,f
  4034  0633  09A2               	comf	___aomod@divisor+2,f
  4035  0634  09A3               	comf	___aomod@divisor+3,f
  4036  0635  09A4               	comf	___aomod@divisor+4,f
  4037  0636  09A5               	comf	___aomod@divisor+5,f
  4038  0637  09A6               	comf	___aomod@divisor+6,f
  4039  0638  09A7               	comf	___aomod@divisor+7,f
  4040  0639  0AA0               	incf	___aomod@divisor,f
  4041  063A  1D03               	skipz
  4042  063B  2E4F               	goto	u240lld
  4043  063C  0AA1               	incf	___aomod@divisor+1,f
  4044  063D  1D03               	skipz
  4045  063E  2E4F               	goto	u240lld
  4046  063F  0AA2               	incf	___aomod@divisor+2,f
  4047  0640  1D03               	skipz
  4048  0641  2E4F               	goto	u240lld
  4049  0642  0AA3               	incf	___aomod@divisor+3,f
  4050  0643  1D03               	skipz
  4051  0644  2E4F               	goto	u240lld
  4052  0645  0AA4               	incf	___aomod@divisor+4,f
  4053  0646  1D03               	skipz
  4054  0647  2E4F               	goto	u240lld
  4055  0648  0AA5               	incf	___aomod@divisor+5,f
  4056  0649  1D03               	skipz
  4057  064A  2E4F               	goto	u240lld
  4058  064B  0AA6               	incf	___aomod@divisor+6,f
  4059  064C  1D03               	skipz
  4060  064D  2E4F               	goto	u240lld
  4061  064E  0AA7               	incf	___aomod@divisor+7,f
  4062  064F                     u240lld:	
  4063  064F                     l2358:	
  4064  064F  0020               	movlb	0	; select bank0
  4065  0650  0820               	movf	___aomod@divisor,w
  4066  0651  0421               	iorwf	___aomod@divisor+1,w
  4067  0652  0422               	iorwf	___aomod@divisor+2,w
  4068  0653  0423               	iorwf	___aomod@divisor+3,w
  4069  0654  0424               	iorwf	___aomod@divisor+4,w
  4070  0655  0425               	iorwf	___aomod@divisor+5,w
  4071  0656  0426               	iorwf	___aomod@divisor+6,w
  4072  0657  0427               	iorwf	___aomod@divisor+7,w
  4073  0658  1903               	skipnz
  4074  0659  2E5B               	goto	u2411
  4075  065A  2E5C               	goto	u2410
  4076  065B                     u2411:	
  4077  065B  2EAF               	goto	l2374
  4078  065C                     u2410:	
  4079  065C                     l2360:	
  4080  065C  01B0               	clrf	___aomod@counter
  4081  065D  0AB0               	incf	___aomod@counter,f
  4082  065E  2E6B               	goto	l2366
  4083  065F                     l2362:	
  4084  065F  35A0               	lslf	___aomod@divisor,f
  4085  0660  0DA1               	rlf	___aomod@divisor+1,f
  4086  0661  0DA2               	rlf	___aomod@divisor+2,f
  4087  0662  0DA3               	rlf	___aomod@divisor+3,f
  4088  0663  0DA4               	rlf	___aomod@divisor+4,f
  4089  0664  0DA5               	rlf	___aomod@divisor+5,f
  4090  0665  0DA6               	rlf	___aomod@divisor+6,f
  4091  0666  0DA7               	rlf	___aomod@divisor+7,f
  4092  0667                     l2364:	
  4093  0667  3001               	movlw	1
  4094  0668  00F4               	movwf	??___aomod
  4095  0669  0874               	movf	??___aomod,w
  4096  066A  07B0               	addwf	___aomod@counter,f
  4097  066B                     l2366:	
  4098  066B  1FA7               	btfss	___aomod@divisor+7,7
  4099  066C  2E6E               	goto	u2421
  4100  066D  2E6F               	goto	u2420
  4101  066E                     u2421:	
  4102  066E  2E5F               	goto	l2362
  4103  066F                     u2420:	
  4104  066F                     l2368:	
  4105  066F  0827               	movf	___aomod@divisor+7,w
  4106  0670  022F               	subwf	___aomod@dividend+7,w
  4107  0671  1D03               	skipz
  4108  0672  2E8D               	goto	u2435
  4109  0673  0826               	movf	___aomod@divisor+6,w
  4110  0674  022E               	subwf	___aomod@dividend+6,w
  4111  0675  1D03               	skipz
  4112  0676  2E8D               	goto	u2435
  4113  0677  0825               	movf	___aomod@divisor+5,w
  4114  0678  022D               	subwf	___aomod@dividend+5,w
  4115  0679  1D03               	skipz
  4116  067A  2E8D               	goto	u2435
  4117  067B  0824               	movf	___aomod@divisor+4,w
  4118  067C  022C               	subwf	___aomod@dividend+4,w
  4119  067D  1D03               	skipz
  4120  067E  2E8D               	goto	u2435
  4121  067F  0823               	movf	___aomod@divisor+3,w
  4122  0680  022B               	subwf	___aomod@dividend+3,w
  4123  0681  1D03               	skipz
  4124  0682  2E8D               	goto	u2435
  4125  0683  0822               	movf	___aomod@divisor+2,w
  4126  0684  022A               	subwf	___aomod@dividend+2,w
  4127  0685  1D03               	skipz
  4128  0686  2E8D               	goto	u2435
  4129  0687  0821               	movf	___aomod@divisor+1,w
  4130  0688  0229               	subwf	___aomod@dividend+1,w
  4131  0689  1D03               	skipz
  4132  068A  2E8D               	goto	u2435
  4133  068B  0820               	movf	___aomod@divisor,w
  4134  068C  0228               	subwf	___aomod@dividend,w
  4135  068D                     u2435:	
  4136  068D  1C03               	skipc
  4137  068E  2E90               	goto	u2431
  4138  068F  2E91               	goto	u2430
  4139  0690                     u2431:	
  4140  0690  2EA1               	goto	l2372
  4141  0691                     u2430:	
  4142  0691                     l2370:	
  4143  0691  0820               	movf	___aomod@divisor,w
  4144  0692  02A8               	subwf	___aomod@dividend,f
  4145  0693  0821               	movf	___aomod@divisor+1,w
  4146  0694  3BA9               	subwfb	___aomod@dividend+1,f
  4147  0695  0822               	movf	___aomod@divisor+2,w
  4148  0696  3BAA               	subwfb	___aomod@dividend+2,f
  4149  0697  0823               	movf	___aomod@divisor+3,w
  4150  0698  3BAB               	subwfb	___aomod@dividend+3,f
  4151  0699  0824               	movf	___aomod@divisor+4,w
  4152  069A  3BAC               	subwfb	___aomod@dividend+4,f
  4153  069B  0825               	movf	___aomod@divisor+5,w
  4154  069C  3BAD               	subwfb	___aomod@dividend+5,f
  4155  069D  0826               	movf	___aomod@divisor+6,w
  4156  069E  3BAE               	subwfb	___aomod@dividend+6,f
  4157  069F  0827               	movf	___aomod@divisor+7,w
  4158  06A0  3BAF               	subwfb	___aomod@dividend+7,f
  4159  06A1                     l2372:	
  4160  06A1  36A7               	lsrf	___aomod@divisor+7,f
  4161  06A2  0CA6               	rrf	___aomod@divisor+6,f
  4162  06A3  0CA5               	rrf	___aomod@divisor+5,f
  4163  06A4  0CA4               	rrf	___aomod@divisor+4,f
  4164  06A5  0CA3               	rrf	___aomod@divisor+3,f
  4165  06A6  0CA2               	rrf	___aomod@divisor+2,f
  4166  06A7  0CA1               	rrf	___aomod@divisor+1,f
  4167  06A8  0CA0               	rrf	___aomod@divisor,f
  4168  06A9  3001               	movlw	1
  4169  06AA  02B0               	subwf	___aomod@counter,f
  4170  06AB  1D03               	btfss	3,2
  4171  06AC  2EAE               	goto	u2441
  4172  06AD  2EAF               	goto	u2440
  4173  06AE                     u2441:	
  4174  06AE  2E6F               	goto	l2368
  4175  06AF                     u2440:	
  4176  06AF                     l2374:	
  4177  06AF  0831               	movf	___aomod@sign,w
  4178  06B0  1903               	btfsc	3,2
  4179  06B1  2EB3               	goto	u2451
  4180  06B2  2EB4               	goto	u2450
  4181  06B3                     u2451:	
  4182  06B3  2ED2               	goto	l464
  4183  06B4                     u2450:	
  4184  06B4                     l2376:	
  4185  06B4  09A8               	comf	___aomod@dividend,f
  4186  06B5  09A9               	comf	___aomod@dividend+1,f
  4187  06B6  09AA               	comf	___aomod@dividend+2,f
  4188  06B7  09AB               	comf	___aomod@dividend+3,f
  4189  06B8  09AC               	comf	___aomod@dividend+4,f
  4190  06B9  09AD               	comf	___aomod@dividend+5,f
  4191  06BA  09AE               	comf	___aomod@dividend+6,f
  4192  06BB  09AF               	comf	___aomod@dividend+7,f
  4193  06BC  0AA8               	incf	___aomod@dividend,f
  4194  06BD  1D03               	skipz
  4195  06BE  2ED2               	goto	u246lld
  4196  06BF  0AA9               	incf	___aomod@dividend+1,f
  4197  06C0  1D03               	skipz
  4198  06C1  2ED2               	goto	u246lld
  4199  06C2  0AAA               	incf	___aomod@dividend+2,f
  4200  06C3  1D03               	skipz
  4201  06C4  2ED2               	goto	u246lld
  4202  06C5  0AAB               	incf	___aomod@dividend+3,f
  4203  06C6  1D03               	skipz
  4204  06C7  2ED2               	goto	u246lld
  4205  06C8  0AAC               	incf	___aomod@dividend+4,f
  4206  06C9  1D03               	skipz
  4207  06CA  2ED2               	goto	u246lld
  4208  06CB  0AAD               	incf	___aomod@dividend+5,f
  4209  06CC  1D03               	skipz
  4210  06CD  2ED2               	goto	u246lld
  4211  06CE  0AAE               	incf	___aomod@dividend+6,f
  4212  06CF  1D03               	skipz
  4213  06D0  2ED2               	goto	u246lld
  4214  06D1  0AAF               	incf	___aomod@dividend+7,f
  4215  06D2                     u246lld:	
  4216  06D2                     l464:	
  4217  06D2  0020               	movlb	0	; select bank0
  4218  06D3  0828               	movf	___aomod@dividend,w
  4219  06D4  00A0               	movwf	?___aomod
  4220  06D5  0829               	movf	___aomod@dividend+1,w
  4221  06D6  00A1               	movwf	?___aomod+1
  4222  06D7  082A               	movf	___aomod@dividend+2,w
  4223  06D8  00A2               	movwf	?___aomod+2
  4224  06D9  082B               	movf	___aomod@dividend+3,w
  4225  06DA  00A3               	movwf	?___aomod+3
  4226  06DB  082C               	movf	___aomod@dividend+4,w
  4227  06DC  00A4               	movwf	?___aomod+4
  4228  06DD  082D               	movf	___aomod@dividend+5,w
  4229  06DE  00A5               	movwf	?___aomod+5
  4230  06DF  082E               	movf	___aomod@dividend+6,w
  4231  06E0  00A6               	movwf	?___aomod+6
  4232  06E1  082F               	movf	___aomod@dividend+7,w
  4233  06E2  00A7               	movwf	?___aomod+7
  4234  06E3                     l465:	
  4235  06E3  0008               	return
  4236  06E4                     __end_of___aomod:	
  4237                           
  4238                           	psect	text12
  4239  04F4                     __ptext12:	
  4240 ;; *************** function ___aodiv *****************
  4241 ;; Defined at:
  4242 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  divisor         8    0[BANK0 ] long long 
  4245 ;;  dividend        8    8[BANK0 ] long long 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  quotient        8   18[BANK0 ] long long 
  4248 ;;  sign            1   17[BANK0 ] unsigned char 
  4249 ;;  counter         1   16[BANK0 ] unsigned char 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  8    0[BANK0 ] long long 
  4252 ;; Registers used:
  4253 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4259 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4262 ;;      Totals:         1      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;Total ram usage:       27 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; Hardware stack levels required when called:    4
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_dtoa
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           
  4274                           ;psect for function ___aodiv
  4275  04F4                     ___aodiv:	
  4276  04F4                     l2310:	
  4277                           ;incstack = 0
  4278                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4279                           
  4280  04F4  0020               	movlb	0	; select bank0
  4281  04F5  01B1               	clrf	___aodiv@sign
  4282  04F6                     l2312:	
  4283  04F6  3020               	movlw	low ___aodiv@divisor
  4284  04F7  0086               	movwf	6
  4285  04F8  3000               	movlw	high ___aodiv@divisor
  4286  04F9  0087               	movwf	7
  4287  04FA  3F47               	moviw [7]fsr1
  4288  04FB  00F4               	movwf	??___aodiv
  4289  04FC  1FF4               	btfss	??___aodiv,7
  4290  04FD  2CFF               	goto	u2261
  4291  04FE  2D00               	goto	u2260
  4292  04FF                     u2261:	
  4293  04FF  2D22               	goto	l2316
  4294  0500                     u2260:	
  4295  0500                     l2314:	
  4296  0500  0020               	movlb	0	; select bank0
  4297  0501  09A0               	comf	___aodiv@divisor,f
  4298  0502  09A1               	comf	___aodiv@divisor+1,f
  4299  0503  09A2               	comf	___aodiv@divisor+2,f
  4300  0504  09A3               	comf	___aodiv@divisor+3,f
  4301  0505  09A4               	comf	___aodiv@divisor+4,f
  4302  0506  09A5               	comf	___aodiv@divisor+5,f
  4303  0507  09A6               	comf	___aodiv@divisor+6,f
  4304  0508  09A7               	comf	___aodiv@divisor+7,f
  4305  0509  0AA0               	incf	___aodiv@divisor,f
  4306  050A  1D03               	skipz
  4307  050B  2D1F               	goto	u227lld
  4308  050C  0AA1               	incf	___aodiv@divisor+1,f
  4309  050D  1D03               	skipz
  4310  050E  2D1F               	goto	u227lld
  4311  050F  0AA2               	incf	___aodiv@divisor+2,f
  4312  0510  1D03               	skipz
  4313  0511  2D1F               	goto	u227lld
  4314  0512  0AA3               	incf	___aodiv@divisor+3,f
  4315  0513  1D03               	skipz
  4316  0514  2D1F               	goto	u227lld
  4317  0515  0AA4               	incf	___aodiv@divisor+4,f
  4318  0516  1D03               	skipz
  4319  0517  2D1F               	goto	u227lld
  4320  0518  0AA5               	incf	___aodiv@divisor+5,f
  4321  0519  1D03               	skipz
  4322  051A  2D1F               	goto	u227lld
  4323  051B  0AA6               	incf	___aodiv@divisor+6,f
  4324  051C  1D03               	skipz
  4325  051D  2D1F               	goto	u227lld
  4326  051E  0AA7               	incf	___aodiv@divisor+7,f
  4327  051F                     u227lld:	
  4328  051F  0020               	movlb	0	; select bank0
  4329  0520  01B1               	clrf	___aodiv@sign
  4330  0521  0AB1               	incf	___aodiv@sign,f
  4331  0522                     l2316:	
  4332  0522  3028               	movlw	low ___aodiv@dividend
  4333  0523  0086               	movwf	6
  4334  0524  3000               	movlw	high ___aodiv@dividend
  4335  0525  0087               	movwf	7
  4336  0526  3F47               	moviw [7]fsr1
  4337  0527  00F4               	movwf	??___aodiv
  4338  0528  1FF4               	btfss	??___aodiv,7
  4339  0529  2D2B               	goto	u2281
  4340  052A  2D2C               	goto	u2280
  4341  052B                     u2281:	
  4342  052B  2D50               	goto	l2322
  4343  052C                     u2280:	
  4344  052C                     l2318:	
  4345  052C  0020               	movlb	0	; select bank0
  4346  052D  09A8               	comf	___aodiv@dividend,f
  4347  052E  09A9               	comf	___aodiv@dividend+1,f
  4348  052F  09AA               	comf	___aodiv@dividend+2,f
  4349  0530  09AB               	comf	___aodiv@dividend+3,f
  4350  0531  09AC               	comf	___aodiv@dividend+4,f
  4351  0532  09AD               	comf	___aodiv@dividend+5,f
  4352  0533  09AE               	comf	___aodiv@dividend+6,f
  4353  0534  09AF               	comf	___aodiv@dividend+7,f
  4354  0535  0AA8               	incf	___aodiv@dividend,f
  4355  0536  1D03               	skipz
  4356  0537  2D4B               	goto	u229lld
  4357  0538  0AA9               	incf	___aodiv@dividend+1,f
  4358  0539  1D03               	skipz
  4359  053A  2D4B               	goto	u229lld
  4360  053B  0AAA               	incf	___aodiv@dividend+2,f
  4361  053C  1D03               	skipz
  4362  053D  2D4B               	goto	u229lld
  4363  053E  0AAB               	incf	___aodiv@dividend+3,f
  4364  053F  1D03               	skipz
  4365  0540  2D4B               	goto	u229lld
  4366  0541  0AAC               	incf	___aodiv@dividend+4,f
  4367  0542  1D03               	skipz
  4368  0543  2D4B               	goto	u229lld
  4369  0544  0AAD               	incf	___aodiv@dividend+5,f
  4370  0545  1D03               	skipz
  4371  0546  2D4B               	goto	u229lld
  4372  0547  0AAE               	incf	___aodiv@dividend+6,f
  4373  0548  1D03               	skipz
  4374  0549  2D4B               	goto	u229lld
  4375  054A  0AAF               	incf	___aodiv@dividend+7,f
  4376  054B                     u229lld:	
  4377  054B                     l2320:	
  4378  054B  3001               	movlw	1
  4379  054C  00F4               	movwf	??___aodiv
  4380  054D  0874               	movf	??___aodiv,w
  4381  054E  0020               	movlb	0	; select bank0
  4382  054F  06B1               	xorwf	___aodiv@sign,f
  4383  0550                     l2322:	
  4384  0550  3032               	movlw	low ___aodiv@quotient
  4385  0551  0086               	movwf	6
  4386  0552  3000               	movlw	high ___aodiv@quotient
  4387  0553  0087               	movwf	7
  4388  0554  3008               	movlw	8
  4389  0555  00F4               	movwf	??___aodiv
  4390  0556  3000               	movlw	0
  4391  0557                     u2300:	
  4392  0557  001E               	movwi fsr1++
  4393  0558  0BF4               	decfsz	??___aodiv,f
  4394  0559  2D57               	goto	u2300
  4395  055A                     l2324:	
  4396  055A  0020               	movlb	0	; select bank0
  4397  055B  0820               	movf	___aodiv@divisor,w
  4398  055C  0421               	iorwf	___aodiv@divisor+1,w
  4399  055D  0422               	iorwf	___aodiv@divisor+2,w
  4400  055E  0423               	iorwf	___aodiv@divisor+3,w
  4401  055F  0424               	iorwf	___aodiv@divisor+4,w
  4402  0560  0425               	iorwf	___aodiv@divisor+5,w
  4403  0561  0426               	iorwf	___aodiv@divisor+6,w
  4404  0562  0427               	iorwf	___aodiv@divisor+7,w
  4405  0563  1903               	skipnz
  4406  0564  2D66               	goto	u2311
  4407  0565  2D67               	goto	u2310
  4408  0566                     u2311:	
  4409  0566  2DC3               	goto	l2344
  4410  0567                     u2310:	
  4411  0567                     l2326:	
  4412  0567  01B0               	clrf	___aodiv@counter
  4413  0568  0AB0               	incf	___aodiv@counter,f
  4414  0569  2D76               	goto	l2332
  4415  056A                     l2328:	
  4416  056A  35A0               	lslf	___aodiv@divisor,f
  4417  056B  0DA1               	rlf	___aodiv@divisor+1,f
  4418  056C  0DA2               	rlf	___aodiv@divisor+2,f
  4419  056D  0DA3               	rlf	___aodiv@divisor+3,f
  4420  056E  0DA4               	rlf	___aodiv@divisor+4,f
  4421  056F  0DA5               	rlf	___aodiv@divisor+5,f
  4422  0570  0DA6               	rlf	___aodiv@divisor+6,f
  4423  0571  0DA7               	rlf	___aodiv@divisor+7,f
  4424  0572                     l2330:	
  4425  0572  3001               	movlw	1
  4426  0573  00F4               	movwf	??___aodiv
  4427  0574  0874               	movf	??___aodiv,w
  4428  0575  07B0               	addwf	___aodiv@counter,f
  4429  0576                     l2332:	
  4430  0576  1FA7               	btfss	___aodiv@divisor+7,7
  4431  0577  2D79               	goto	u2321
  4432  0578  2D7A               	goto	u2320
  4433  0579                     u2321:	
  4434  0579  2D6A               	goto	l2328
  4435  057A                     u2320:	
  4436  057A                     l2334:	
  4437  057A  35B2               	lslf	___aodiv@quotient,f
  4438  057B  0DB3               	rlf	___aodiv@quotient+1,f
  4439  057C  0DB4               	rlf	___aodiv@quotient+2,f
  4440  057D  0DB5               	rlf	___aodiv@quotient+3,f
  4441  057E  0DB6               	rlf	___aodiv@quotient+4,f
  4442  057F  0DB7               	rlf	___aodiv@quotient+5,f
  4443  0580  0DB8               	rlf	___aodiv@quotient+6,f
  4444  0581  0DB9               	rlf	___aodiv@quotient+7,f
  4445  0582                     l2336:	
  4446  0582  0827               	movf	___aodiv@divisor+7,w
  4447  0583  022F               	subwf	___aodiv@dividend+7,w
  4448  0584  1D03               	skipz
  4449  0585  2DA0               	goto	u2335
  4450  0586  0826               	movf	___aodiv@divisor+6,w
  4451  0587  022E               	subwf	___aodiv@dividend+6,w
  4452  0588  1D03               	skipz
  4453  0589  2DA0               	goto	u2335
  4454  058A  0825               	movf	___aodiv@divisor+5,w
  4455  058B  022D               	subwf	___aodiv@dividend+5,w
  4456  058C  1D03               	skipz
  4457  058D  2DA0               	goto	u2335
  4458  058E  0824               	movf	___aodiv@divisor+4,w
  4459  058F  022C               	subwf	___aodiv@dividend+4,w
  4460  0590  1D03               	skipz
  4461  0591  2DA0               	goto	u2335
  4462  0592  0823               	movf	___aodiv@divisor+3,w
  4463  0593  022B               	subwf	___aodiv@dividend+3,w
  4464  0594  1D03               	skipz
  4465  0595  2DA0               	goto	u2335
  4466  0596  0822               	movf	___aodiv@divisor+2,w
  4467  0597  022A               	subwf	___aodiv@dividend+2,w
  4468  0598  1D03               	skipz
  4469  0599  2DA0               	goto	u2335
  4470  059A  0821               	movf	___aodiv@divisor+1,w
  4471  059B  0229               	subwf	___aodiv@dividend+1,w
  4472  059C  1D03               	skipz
  4473  059D  2DA0               	goto	u2335
  4474  059E  0820               	movf	___aodiv@divisor,w
  4475  059F  0228               	subwf	___aodiv@dividend,w
  4476  05A0                     u2335:	
  4477  05A0  1C03               	skipc
  4478  05A1  2DA3               	goto	u2331
  4479  05A2  2DA4               	goto	u2330
  4480  05A3                     u2331:	
  4481  05A3  2DB5               	goto	l2342
  4482  05A4                     u2330:	
  4483  05A4                     l2338:	
  4484  05A4  0820               	movf	___aodiv@divisor,w
  4485  05A5  02A8               	subwf	___aodiv@dividend,f
  4486  05A6  0821               	movf	___aodiv@divisor+1,w
  4487  05A7  3BA9               	subwfb	___aodiv@dividend+1,f
  4488  05A8  0822               	movf	___aodiv@divisor+2,w
  4489  05A9  3BAA               	subwfb	___aodiv@dividend+2,f
  4490  05AA  0823               	movf	___aodiv@divisor+3,w
  4491  05AB  3BAB               	subwfb	___aodiv@dividend+3,f
  4492  05AC  0824               	movf	___aodiv@divisor+4,w
  4493  05AD  3BAC               	subwfb	___aodiv@dividend+4,f
  4494  05AE  0825               	movf	___aodiv@divisor+5,w
  4495  05AF  3BAD               	subwfb	___aodiv@dividend+5,f
  4496  05B0  0826               	movf	___aodiv@divisor+6,w
  4497  05B1  3BAE               	subwfb	___aodiv@dividend+6,f
  4498  05B2  0827               	movf	___aodiv@divisor+7,w
  4499  05B3  3BAF               	subwfb	___aodiv@dividend+7,f
  4500  05B4                     l2340:	
  4501  05B4  1432               	bsf	___aodiv@quotient,0
  4502  05B5                     l2342:	
  4503  05B5  36A7               	lsrf	___aodiv@divisor+7,f
  4504  05B6  0CA6               	rrf	___aodiv@divisor+6,f
  4505  05B7  0CA5               	rrf	___aodiv@divisor+5,f
  4506  05B8  0CA4               	rrf	___aodiv@divisor+4,f
  4507  05B9  0CA3               	rrf	___aodiv@divisor+3,f
  4508  05BA  0CA2               	rrf	___aodiv@divisor+2,f
  4509  05BB  0CA1               	rrf	___aodiv@divisor+1,f
  4510  05BC  0CA0               	rrf	___aodiv@divisor,f
  4511  05BD  3001               	movlw	1
  4512  05BE  02B0               	subwf	___aodiv@counter,f
  4513  05BF  1D03               	btfss	3,2
  4514  05C0  2DC2               	goto	u2341
  4515  05C1  2DC3               	goto	u2340
  4516  05C2                     u2341:	
  4517  05C2  2D7A               	goto	l2334
  4518  05C3                     u2340:	
  4519  05C3                     l2344:	
  4520  05C3  0831               	movf	___aodiv@sign,w
  4521  05C4  1903               	btfsc	3,2
  4522  05C5  2DC7               	goto	u2351
  4523  05C6  2DC8               	goto	u2350
  4524  05C7                     u2351:	
  4525  05C7  2DE6               	goto	l451
  4526  05C8                     u2350:	
  4527  05C8                     l2346:	
  4528  05C8  09B2               	comf	___aodiv@quotient,f
  4529  05C9  09B3               	comf	___aodiv@quotient+1,f
  4530  05CA  09B4               	comf	___aodiv@quotient+2,f
  4531  05CB  09B5               	comf	___aodiv@quotient+3,f
  4532  05CC  09B6               	comf	___aodiv@quotient+4,f
  4533  05CD  09B7               	comf	___aodiv@quotient+5,f
  4534  05CE  09B8               	comf	___aodiv@quotient+6,f
  4535  05CF  09B9               	comf	___aodiv@quotient+7,f
  4536  05D0  0AB2               	incf	___aodiv@quotient,f
  4537  05D1  1D03               	skipz
  4538  05D2  2DE6               	goto	u236lld
  4539  05D3  0AB3               	incf	___aodiv@quotient+1,f
  4540  05D4  1D03               	skipz
  4541  05D5  2DE6               	goto	u236lld
  4542  05D6  0AB4               	incf	___aodiv@quotient+2,f
  4543  05D7  1D03               	skipz
  4544  05D8  2DE6               	goto	u236lld
  4545  05D9  0AB5               	incf	___aodiv@quotient+3,f
  4546  05DA  1D03               	skipz
  4547  05DB  2DE6               	goto	u236lld
  4548  05DC  0AB6               	incf	___aodiv@quotient+4,f
  4549  05DD  1D03               	skipz
  4550  05DE  2DE6               	goto	u236lld
  4551  05DF  0AB7               	incf	___aodiv@quotient+5,f
  4552  05E0  1D03               	skipz
  4553  05E1  2DE6               	goto	u236lld
  4554  05E2  0AB8               	incf	___aodiv@quotient+6,f
  4555  05E3  1D03               	skipz
  4556  05E4  2DE6               	goto	u236lld
  4557  05E5  0AB9               	incf	___aodiv@quotient+7,f
  4558  05E6                     u236lld:	
  4559  05E6                     l451:	
  4560  05E6  0020               	movlb	0	; select bank0
  4561  05E7  0832               	movf	___aodiv@quotient,w
  4562  05E8  00A0               	movwf	?___aodiv
  4563  05E9  0833               	movf	___aodiv@quotient+1,w
  4564  05EA  00A1               	movwf	?___aodiv+1
  4565  05EB  0834               	movf	___aodiv@quotient+2,w
  4566  05EC  00A2               	movwf	?___aodiv+2
  4567  05ED  0835               	movf	___aodiv@quotient+3,w
  4568  05EE  00A3               	movwf	?___aodiv+3
  4569  05EF  0836               	movf	___aodiv@quotient+4,w
  4570  05F0  00A4               	movwf	?___aodiv+4
  4571  05F1  0837               	movf	___aodiv@quotient+5,w
  4572  05F2  00A5               	movwf	?___aodiv+5
  4573  05F3  0838               	movf	___aodiv@quotient+6,w
  4574  05F4  00A6               	movwf	?___aodiv+6
  4575  05F5  0839               	movf	___aodiv@quotient+7,w
  4576  05F6  00A7               	movwf	?___aodiv+7
  4577  05F7                     l452:	
  4578  05F7  0008               	return
  4579  05F8                     __end_of___aodiv:	
  4580                           
  4581                           	psect	text13
  4582  0002                     __ptext13:	
  4583 ;; *************** function _sendOnly *****************
  4584 ;; Defined at:
  4585 ;;		line 139 in file "newmain.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
  4588 ;;		 -> main@readbuffer_784(20), main@readbuffer_781(20), main@readbuffer_778(20), main@readbuffer_773(20), 
  4589 ;;		 -> main@readbuffer_769(20), main@readbuffer_766(22), main@readbuffer_758(20), main@readbuffer(20), 
  4590 ;;		 -> STR_1(25), 
  4591 ;;  size            2    4[BANK0 ] int 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  i               2    0        int 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		None
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4603 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;Total ram usage:        6 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    4
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_main
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           
  4618                           ;psect for function _sendOnly
  4619  0002                     _sendOnly:	
  4620  0002                     l2520:	
  4621                           ;incstack = 0
  4622                           ; Regs used in _sendOnly: []
  4623                           
  4624  0002                     l124:	
  4625  0002  0008               	return
  4626  0003                     __end_of_sendOnly:	
  4627                           
  4628                           	psect	text14
  4629  07F3                     __ptext14:	
  4630 ;; *************** function _seedRand *****************
  4631 ;; Defined at:
  4632 ;;		line 314 in file "newmain.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;		None
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  toc             8    2[BANK0 ] long long 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4649 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;Total ram usage:        8 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    5
  4653 ;; This function calls:
  4654 ;;		_srand
  4655 ;;		_time
  4656 ;; This function is called by:
  4657 ;;		_main
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           
  4662                           ;psect for function _seedRand
  4663  07F3                     _seedRand:	
  4664  07F3                     l2594:	
  4665                           ;incstack = 0
  4666                           ; Regs used in _seedRand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4667                           
  4668                           
  4669                           ;newmain.c: 315:    time_t toc;;newmain.c: 316:    time(&toc);
  4670  07F3  3022               	movlw	(low (seedRand@toc| 0))& (0+255)
  4671  07F4  318C  2497  3187   	fcall	_time
  4672  07F7                     l2596:	
  4673                           
  4674                           ;newmain.c: 317:    srand((int)toc);
  4675  07F7  0020               	movlb	0	; select bank0
  4676  07F8  0823               	movf	seedRand@toc+1,w
  4677  07F9  00F5               	movwf	srand@s+1
  4678  07FA  0822               	movf	seedRand@toc,w
  4679  07FB  00F4               	movwf	srand@s
  4680  07FC  318C  246C  3187   	fcall	_srand
  4681  07FF                     l174:	
  4682  07FF  0008               	return
  4683  0800                     __end_of_seedRand:	
  4684                           
  4685                           	psect	text15
  4686  0C97                     __ptext15:	
  4687 ;; *************** function _time *****************
  4688 ;; Defined at:
  4689 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\time.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  t               1    wreg     PTR long long 
  4692 ;;		 -> seedRand@toc(8), 
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;  t               1    4[COMMON] PTR long long 
  4695 ;;		 -> seedRand@toc(8), 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  8   76[None  ] long long 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;Total ram usage:        1 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    4
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_seedRand
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           
  4720                           ;psect for function _time
  4721  0C97                     _time:	
  4722                           
  4723                           ;incstack = 0
  4724                           ; Regs used in _time: [wreg+fsr1l+fsr1h+status,2+status,0]
  4725                           ;time@t stored from wreg
  4726  0C97  00F4               	movwf	time@t
  4727  0C98                     l2490:	
  4728  0C98  0874               	movf	time@t,w
  4729  0C99  1903               	btfsc	3,2
  4730  0C9A  2C9C               	goto	u2671
  4731  0C9B  2C9D               	goto	u2670
  4732  0C9C                     u2671:	
  4733  0C9C  2CB0               	goto	l856
  4734  0C9D                     u2670:	
  4735  0C9D                     l2492:	
  4736  0C9D  0874               	movf	time@t,w
  4737  0C9E  0086               	movwf	6
  4738  0C9F  0187               	clrf	7
  4739  0CA0  30FF               	movlw	255
  4740  0CA1  3FC0               	movwi [0]fsr1
  4741  0CA2  30FF               	movlw	255
  4742  0CA3  3FC1               	movwi [1]fsr1
  4743  0CA4  30FF               	movlw	255
  4744  0CA5  3FC2               	movwi [2]fsr1
  4745  0CA6  30FF               	movlw	255
  4746  0CA7  3FC3               	movwi [3]fsr1
  4747  0CA8  30FF               	movlw	255
  4748  0CA9  3FC4               	movwi [4]fsr1
  4749  0CAA  30FF               	movlw	255
  4750  0CAB  3FC5               	movwi [5]fsr1
  4751  0CAC  30FF               	movlw	255
  4752  0CAD  3FC6               	movwi [6]fsr1
  4753  0CAE  30FF               	movlw	255
  4754  0CAF  3FC7               	movwi [7]fsr1
  4755  0CB0                     l856:	
  4756  0CB0  0008               	return
  4757  0CB1                     __end_of_time:	
  4758                           
  4759                           	psect	text16
  4760  0C6C                     __ptext16:	
  4761 ;; *************** function _srand *****************
  4762 ;; Defined at:
  4763 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  s               2    4[COMMON] unsigned int 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;		None
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      void 
  4770 ;; Registers used:
  4771 ;;		wreg, status,2, status,0
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4779 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4780 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4781 ;;Total ram usage:        4 bytes
  4782 ;; Hardware stack levels used:    1
  4783 ;; Hardware stack levels required when called:    4
  4784 ;; This function calls:
  4785 ;;		Nothing
  4786 ;; This function is called by:
  4787 ;;		_seedRand
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           
  4792                           ;psect for function _srand
  4793  0C6C                     _srand:	
  4794  0C6C                     l2496:	
  4795                           ;incstack = 0
  4796                           ; Regs used in _srand: [wreg+status,2+status,0]
  4797                           
  4798  0C6C  0874               	movf	srand@s,w
  4799  0C6D  3EFF               	addlw	255
  4800  0C6E  0020               	movlb	0	; select bank0
  4801  0C6F  00A0               	movwf	??_srand
  4802  0C70  30FF               	movlw	255
  4803  0C71  3D75               	addwfc	srand@s+1,w
  4804  0C72  00A1               	movwf	??_srand+1
  4805  0C73  0820               	movf	??_srand,w
  4806  0C74  0023               	movlb	3	; select bank3
  4807  0C75  00DC               	movwf	_seed^(0+384)
  4808  0C76  0020               	movlb	0	; select bank0
  4809  0C77  0821               	movf	??_srand+1,w
  4810  0C78  0023               	movlb	3	; select bank3
  4811  0C79  00DD               	movwf	(_seed+1)^(0+384)
  4812  0C7A  01DE               	clrf	(_seed+2)^(0+384)
  4813  0C7B  01DF               	clrf	(_seed+3)^(0+384)
  4814  0C7C  01E0               	clrf	(_seed+4)^(0+384)
  4815  0C7D  01E1               	clrf	(_seed+5)^(0+384)
  4816  0C7E  01E2               	clrf	(_seed+6)^(0+384)
  4817  0C7F  01E3               	clrf	(_seed+7)^(0+384)
  4818  0C80                     l843:	
  4819  0C80  0008               	return
  4820  0C81                     __end_of_srand:	
  4821                           
  4822                           	psect	text17
  4823  0F61                     __ptext17:	
  4824 ;; *************** function _rand *****************
  4825 ;; Defined at:
  4826 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;		None
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;		None
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  2   24[BANK0 ] int 
  4833 ;; Registers used:
  4834 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4842 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4843 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;Total ram usage:       10 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; Hardware stack levels required when called:    5
  4847 ;; This function calls:
  4848 ;;		___omul
  4849 ;; This function is called by:
  4850 ;;		_main
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           
  4855                           ;psect for function _rand
  4856  0F61                     _rand:	
  4857  0F61                     l2610:	
  4858                           ;incstack = 0
  4859                           ; Regs used in _rand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4860                           
  4861  0F61  3001               	movlw	1
  4862  0F62  0020               	movlb	0	; select bank0
  4863  0F63  00BA               	movwf	??_rand
  4864  0F64  3000               	movlw	0
  4865  0F65  00BB               	movwf	??_rand+1
  4866  0F66  3000               	movlw	0
  4867  0F67  00BC               	movwf	??_rand+2
  4868  0F68  3000               	movlw	0
  4869  0F69  00BD               	movwf	??_rand+3
  4870  0F6A  3000               	movlw	0
  4871  0F6B  00BE               	movwf	??_rand+4
  4872  0F6C  3000               	movlw	0
  4873  0F6D  00BF               	movwf	??_rand+5
  4874  0F6E  3000               	movlw	0
  4875  0F6F  00C0               	movwf	??_rand+6
  4876  0F70  3000               	movlw	0
  4877  0F71  00C1               	movwf	??_rand+7
  4878  0F72  0023               	movlb	3	; select bank3
  4879  0F73  085C               	movf	_seed^(0+384),w
  4880  0F74  0020               	movlb	0	; select bank0
  4881  0F75  00A0               	movwf	___omul@multiplier
  4882  0F76  0023               	movlb	3	; select bank3
  4883  0F77  085D               	movf	(_seed+1)^(0+384),w
  4884  0F78  0020               	movlb	0	; select bank0
  4885  0F79  00A1               	movwf	___omul@multiplier+1
  4886  0F7A  0023               	movlb	3	; select bank3
  4887  0F7B  085E               	movf	(_seed+2)^(0+384),w
  4888  0F7C  0020               	movlb	0	; select bank0
  4889  0F7D  00A2               	movwf	___omul@multiplier+2
  4890  0F7E  0023               	movlb	3	; select bank3
  4891  0F7F  085F               	movf	(_seed+3)^(0+384),w
  4892  0F80  0020               	movlb	0	; select bank0
  4893  0F81  00A3               	movwf	___omul@multiplier+3
  4894  0F82  0023               	movlb	3	; select bank3
  4895  0F83  0860               	movf	(_seed+4)^(0+384),w
  4896  0F84  0020               	movlb	0	; select bank0
  4897  0F85  00A4               	movwf	___omul@multiplier+4
  4898  0F86  0023               	movlb	3	; select bank3
  4899  0F87  0861               	movf	(_seed+5)^(0+384),w
  4900  0F88  0020               	movlb	0	; select bank0
  4901  0F89  00A5               	movwf	___omul@multiplier+5
  4902  0F8A  0023               	movlb	3	; select bank3
  4903  0F8B  0862               	movf	(_seed+6)^(0+384),w
  4904  0F8C  0020               	movlb	0	; select bank0
  4905  0F8D  00A6               	movwf	___omul@multiplier+6
  4906  0F8E  0023               	movlb	3	; select bank3
  4907  0F8F  0863               	movf	(_seed+7)^(0+384),w
  4908  0F90  0020               	movlb	0	; select bank0
  4909  0F91  00A7               	movwf	___omul@multiplier+7
  4910  0F92  3058               	movlw	88
  4911  0F93  00AF               	movwf	___omul@multiplicand+7
  4912  0F94  3051               	movlw	81
  4913  0F95  00AE               	movwf	___omul@multiplicand+6
  4914  0F96  30F4               	movlw	244
  4915  0F97  00AD               	movwf	___omul@multiplicand+5
  4916  0F98  302D               	movlw	45
  4917  0F99  00AC               	movwf	___omul@multiplicand+4
  4918  0F9A  304C               	movlw	76
  4919  0F9B  00AB               	movwf	___omul@multiplicand+3
  4920  0F9C  3095               	movlw	149
  4921  0F9D  00AA               	movwf	___omul@multiplicand+2
  4922  0F9E  307F               	movlw	127
  4923  0F9F  00A9               	movwf	___omul@multiplicand+1
  4924  0FA0  302D               	movlw	45
  4925  0FA1  00A8               	movwf	___omul@multiplicand
  4926  0FA2  318D  25B1  318F   	fcall	___omul
  4927  0FA5  0020               	movlb	0	; select bank0
  4928  0FA6  3020               	movlw	low ?___omul
  4929  0FA7  0086               	movwf	6
  4930  0FA8  3000               	movlw	high ?___omul
  4931  0FA9  0087               	movwf	7
  4932  0FAA  3F40               	moviw [0]fsr1
  4933  0FAB  07BA               	addwf	??_rand,f
  4934  0FAC  3F41               	moviw [1]fsr1
  4935  0FAD  3DBB               	addwfc	??_rand+1,f
  4936  0FAE  3F42               	moviw [2]fsr1
  4937  0FAF  3DBC               	addwfc	??_rand+2,f
  4938  0FB0  3F43               	moviw [3]fsr1
  4939  0FB1  3DBD               	addwfc	??_rand+3,f
  4940  0FB2  3F44               	moviw [4]fsr1
  4941  0FB3  3DBE               	addwfc	??_rand+4,f
  4942  0FB4  3F45               	moviw [5]fsr1
  4943  0FB5  3DBF               	addwfc	??_rand+5,f
  4944  0FB6  3F46               	moviw [6]fsr1
  4945  0FB7  3DC0               	addwfc	??_rand+6,f
  4946  0FB8  3F47               	moviw [7]fsr1
  4947  0FB9  3DC1               	addwfc	??_rand+7,f
  4948  0FBA  0841               	movf	??_rand+7,w
  4949  0FBB  0023               	movlb	3	; select bank3
  4950  0FBC  00E3               	movwf	(_seed+7)^(0+384)
  4951  0FBD  0020               	movlb	0	; select bank0
  4952  0FBE  0840               	movf	??_rand+6,w
  4953  0FBF  0023               	movlb	3	; select bank3
  4954  0FC0  00E2               	movwf	(_seed+6)^(0+384)
  4955  0FC1  0020               	movlb	0	; select bank0
  4956  0FC2  083F               	movf	??_rand+5,w
  4957  0FC3  0023               	movlb	3	; select bank3
  4958  0FC4  00E1               	movwf	(_seed+5)^(0+384)
  4959  0FC5  0020               	movlb	0	; select bank0
  4960  0FC6  083E               	movf	??_rand+4,w
  4961  0FC7  0023               	movlb	3	; select bank3
  4962  0FC8  00E0               	movwf	(_seed+4)^(0+384)
  4963  0FC9  0020               	movlb	0	; select bank0
  4964  0FCA  083D               	movf	??_rand+3,w
  4965  0FCB  0023               	movlb	3	; select bank3
  4966  0FCC  00DF               	movwf	(_seed+3)^(0+384)
  4967  0FCD  0020               	movlb	0	; select bank0
  4968  0FCE  083C               	movf	??_rand+2,w
  4969  0FCF  0023               	movlb	3	; select bank3
  4970  0FD0  00DE               	movwf	(_seed+2)^(0+384)
  4971  0FD1  0020               	movlb	0	; select bank0
  4972  0FD2  083B               	movf	??_rand+1,w
  4973  0FD3  0023               	movlb	3	; select bank3
  4974  0FD4  00DD               	movwf	(_seed+1)^(0+384)
  4975  0FD5  0020               	movlb	0	; select bank0
  4976  0FD6  083A               	movf	??_rand,w
  4977  0FD7  0023               	movlb	3	; select bank3
  4978  0FD8  00DC               	movwf	_seed^(0+384)
  4979  0FD9                     l2612:	
  4980  0FD9  30DC               	movlw	low _seed
  4981  0FDA  0086               	movwf	6
  4982  0FDB  3001               	movlw	high _seed
  4983  0FDC  0087               	movwf	7
  4984  0FDD  3F40               	moviw [0]fsr1
  4985  0FDE  0020               	movlb	0	; select bank0
  4986  0FDF  00BA               	movwf	??_rand
  4987  0FE0  3F41               	moviw [1]fsr1
  4988  0FE1  00BB               	movwf	??_rand+1
  4989  0FE2  3F42               	moviw [2]fsr1
  4990  0FE3  00BC               	movwf	??_rand+2
  4991  0FE4  3F43               	moviw [3]fsr1
  4992  0FE5  00BD               	movwf	??_rand+3
  4993  0FE6  3F44               	moviw [4]fsr1
  4994  0FE7  00BE               	movwf	??_rand+4
  4995  0FE8  3F45               	moviw [5]fsr1
  4996  0FE9  00BF               	movwf	??_rand+5
  4997  0FEA  3F46               	moviw [6]fsr1
  4998  0FEB  00C0               	movwf	??_rand+6
  4999  0FEC  3F47               	moviw [7]fsr1
  5000  0FED  00C1               	movwf	??_rand+7
  5001  0FEE  3031               	movlw	49
  5002  0FEF                     u2735:	
  5003  0FEF  0020               	movlb	0	; select bank0
  5004  0FF0  36C1               	lsrf	??_rand+7,f
  5005  0FF1  0CC0               	rrf	??_rand+6,f
  5006  0FF2  0CBF               	rrf	??_rand+5,f
  5007  0FF3  0CBE               	rrf	??_rand+4,f
  5008  0FF4  0CBD               	rrf	??_rand+3,f
  5009  0FF5  0CBC               	rrf	??_rand+2,f
  5010  0FF6  0CBB               	rrf	??_rand+1,f
  5011  0FF7  0CBA               	rrf	??_rand,f
  5012  0FF8                     u2730:	
  5013  0FF8  0B89               	decfsz	9,f
  5014  0FF9  2FEF               	goto	u2735
  5015  0FFA  0020               	movlb	0	; select bank0
  5016  0FFB  083B               	movf	??_rand+1,w
  5017  0FFC  00B9               	movwf	?_rand+1
  5018  0FFD  083A               	movf	??_rand,w
  5019  0FFE  00B8               	movwf	?_rand
  5020  0FFF                     l846:	
  5021  0FFF  0008               	return
  5022  1000                     __end_of_rand:	
  5023                           
  5024                           	psect	text18
  5025  0DB1                     __ptext18:	
  5026 ;; *************** function ___omul *****************
  5027 ;; Defined at:
  5028 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  multiplier      8    0[BANK0 ] unsigned long long 
  5031 ;;  multiplicand    8    8[BANK0 ] unsigned long long 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  product         8   16[BANK0 ] unsigned long long 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  8    0[BANK0 ] unsigned long long 
  5036 ;; Registers used:
  5037 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5043 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;      Totals:         1      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;Total ram usage:       25 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    4
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_rand
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           
  5058                           ;psect for function ___omul
  5059  0DB1                     ___omul:	
  5060  0DB1                     l2510:	
  5061                           ;incstack = 0
  5062                           ; Regs used in ___omul: [wreg+fsr1l+fsr1h+status,2+status,0]
  5063                           
  5064  0DB1  3030               	movlw	low ___omul@product
  5065  0DB2  0086               	movwf	6
  5066  0DB3  3000               	movlw	high ___omul@product
  5067  0DB4  0087               	movwf	7
  5068  0DB5  3008               	movlw	8
  5069  0DB6  00F4               	movwf	??___omul
  5070  0DB7  3000               	movlw	0
  5071  0DB8                     u2690:	
  5072  0DB8  001E               	movwi fsr1++
  5073  0DB9  0BF4               	decfsz	??___omul,f
  5074  0DBA  2DB8               	goto	u2690
  5075  0DBB                     l2512:	
  5076  0DBB  0020               	movlb	0	; select bank0
  5077  0DBC  1C20               	btfss	___omul@multiplier,0
  5078  0DBD  2DBF               	goto	u2701
  5079  0DBE  2DC0               	goto	u2700
  5080  0DBF                     u2701:	
  5081  0DBF  2DD0               	goto	l2516
  5082  0DC0                     u2700:	
  5083  0DC0                     l2514:	
  5084  0DC0  0828               	movf	___omul@multiplicand,w
  5085  0DC1  07B0               	addwf	___omul@product,f
  5086  0DC2  0829               	movf	___omul@multiplicand+1,w
  5087  0DC3  3DB1               	addwfc	___omul@product+1,f
  5088  0DC4  082A               	movf	___omul@multiplicand+2,w
  5089  0DC5  3DB2               	addwfc	___omul@product+2,f
  5090  0DC6  082B               	movf	___omul@multiplicand+3,w
  5091  0DC7  3DB3               	addwfc	___omul@product+3,f
  5092  0DC8  082C               	movf	___omul@multiplicand+4,w
  5093  0DC9  3DB4               	addwfc	___omul@product+4,f
  5094  0DCA  082D               	movf	___omul@multiplicand+5,w
  5095  0DCB  3DB5               	addwfc	___omul@product+5,f
  5096  0DCC  082E               	movf	___omul@multiplicand+6,w
  5097  0DCD  3DB6               	addwfc	___omul@product+6,f
  5098  0DCE  082F               	movf	___omul@multiplicand+7,w
  5099  0DCF  3DB7               	addwfc	___omul@product+7,f
  5100  0DD0                     l2516:	
  5101  0DD0  35A8               	lslf	___omul@multiplicand,f
  5102  0DD1  0DA9               	rlf	___omul@multiplicand+1,f
  5103  0DD2  0DAA               	rlf	___omul@multiplicand+2,f
  5104  0DD3  0DAB               	rlf	___omul@multiplicand+3,f
  5105  0DD4  0DAC               	rlf	___omul@multiplicand+4,f
  5106  0DD5  0DAD               	rlf	___omul@multiplicand+5,f
  5107  0DD6  0DAE               	rlf	___omul@multiplicand+6,f
  5108  0DD7  0DAF               	rlf	___omul@multiplicand+7,f
  5109  0DD8                     l2518:	
  5110  0DD8  36A7               	lsrf	___omul@multiplier+7,f
  5111  0DD9  0CA6               	rrf	___omul@multiplier+6,f
  5112  0DDA  0CA5               	rrf	___omul@multiplier+5,f
  5113  0DDB  0CA4               	rrf	___omul@multiplier+4,f
  5114  0DDC  0CA3               	rrf	___omul@multiplier+3,f
  5115  0DDD  0CA2               	rrf	___omul@multiplier+2,f
  5116  0DDE  0CA1               	rrf	___omul@multiplier+1,f
  5117  0DDF  0CA0               	rrf	___omul@multiplier,f
  5118  0DE0  0820               	movf	___omul@multiplier,w
  5119  0DE1  0421               	iorwf	___omul@multiplier+1,w
  5120  0DE2  0422               	iorwf	___omul@multiplier+2,w
  5121  0DE3  0423               	iorwf	___omul@multiplier+3,w
  5122  0DE4  0424               	iorwf	___omul@multiplier+4,w
  5123  0DE5  0425               	iorwf	___omul@multiplier+5,w
  5124  0DE6  0426               	iorwf	___omul@multiplier+6,w
  5125  0DE7  0427               	iorwf	___omul@multiplier+7,w
  5126  0DE8  1D03               	skipz
  5127  0DE9  2DEB               	goto	u2711
  5128  0DEA  2DEC               	goto	u2710
  5129  0DEB                     u2711:	
  5130  0DEB  2DBB               	goto	l2512
  5131  0DEC                     u2710:	
  5132  0DEC                     l370:	
  5133  0DEC  0830               	movf	___omul@product,w
  5134  0DED  00A0               	movwf	?___omul
  5135  0DEE  0831               	movf	___omul@product+1,w
  5136  0DEF  00A1               	movwf	?___omul+1
  5137  0DF0  0832               	movf	___omul@product+2,w
  5138  0DF1  00A2               	movwf	?___omul+2
  5139  0DF2  0833               	movf	___omul@product+3,w
  5140  0DF3  00A3               	movwf	?___omul+3
  5141  0DF4  0834               	movf	___omul@product+4,w
  5142  0DF5  00A4               	movwf	?___omul+4
  5143  0DF6  0835               	movf	___omul@product+5,w
  5144  0DF7  00A5               	movwf	?___omul+5
  5145  0DF8  0836               	movf	___omul@product+6,w
  5146  0DF9  00A6               	movwf	?___omul+6
  5147  0DFA  0837               	movf	___omul@product+7,w
  5148  0DFB  00A7               	movwf	?___omul+7
  5149  0DFC                     l371:	
  5150  0DFC  0008               	return
  5151  0DFD                     __end_of___omul:	
  5152                           
  5153                           	psect	text19
  5154  07BF                     __ptext19:	
  5155 ;; *************** function _initialize *****************
  5156 ;; Defined at:
  5157 ;;		line 147 in file "newmain.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;		None
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;		None
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  1    wreg      void 
  5164 ;; Registers used:
  5165 ;;		wreg, status,2, status,0
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5175 ;;Total ram usage:        0 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:    4
  5178 ;; This function calls:
  5179 ;;		Nothing
  5180 ;; This function is called by:
  5181 ;;		_main
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           
  5186                           ;psect for function _initialize
  5187  07BF                     _initialize:	
  5188  07BF                     l2530:	
  5189                           ;incstack = 0
  5190                           ; Regs used in _initialize: [wreg+status,2+status,0]
  5191                           
  5192                           
  5193                           ;newmain.c: 149:     OSCCONbits.IRCF = 0b1111;
  5194  07BF  303C               	movlw	60
  5195  07C0  0021               	movlb	1	; select bank1
  5196  07C1  0499               	iorwf	25,f	;volatile
  5197                           
  5198                           ;newmain.c: 150:     OSCCONbits.SCS = 0b10;
  5199  07C2  0819               	movf	25,w	;volatile
  5200  07C3  39FC               	andlw	-4
  5201  07C4  3802               	iorlw	2
  5202  07C5  0099               	movwf	25	;volatile
  5203  07C6                     l2532:	
  5204                           
  5205                           ;newmain.c: 151:     TRISCbits.TRISC5 = 0;
  5206  07C6  128E               	bcf	14,5	;volatile
  5207  07C7                     l2534:	
  5208                           
  5209                           ;newmain.c: 152:     ANSELCbits.ANSC6 = 0;
  5210  07C7  0023               	movlb	3	; select bank3
  5211  07C8  130E               	bcf	14,6	;volatile
  5212  07C9                     l2536:	
  5213                           
  5214                           ;newmain.c: 153:     ANSELCbits.ANSC7 = 0;
  5215  07C9  138E               	bcf	14,7	;volatile
  5216  07CA                     l2538:	
  5217                           
  5218                           ;newmain.c: 155:     TRISCbits.TRISC6 = 1;
  5219  07CA  0021               	movlb	1	; select bank1
  5220  07CB  170E               	bsf	14,6	;volatile
  5221  07CC                     l2540:	
  5222                           
  5223                           ;newmain.c: 156:     TRISCbits.TRISC7 = 1;
  5224  07CC  178E               	bsf	14,7	;volatile
  5225  07CD                     l2542:	
  5226                           
  5227                           ;newmain.c: 158:     ANSELCbits.ANSC2 = 0;
  5228  07CD  0023               	movlb	3	; select bank3
  5229  07CE  110E               	bcf	14,2	;volatile
  5230  07CF                     l2544:	
  5231                           
  5232                           ;newmain.c: 159:     ANSELBbits.ANSB4 = 0;
  5233  07CF  120D               	bcf	13,4	;volatile
  5234  07D0                     l2546:	
  5235                           
  5236                           ;newmain.c: 160:     TRISCbits.TRISC2 = 0;
  5237  07D0  0021               	movlb	1	; select bank1
  5238  07D1  110E               	bcf	14,2	;volatile
  5239  07D2                     l2548:	
  5240                           
  5241                           ;newmain.c: 161:     PORTCbits.RC2 = 0;
  5242  07D2  0020               	movlb	0	; select bank0
  5243  07D3  110E               	bcf	14,2	;volatile
  5244  07D4                     l2550:	
  5245                           
  5246                           ;newmain.c: 162:     TRISBbits.TRISB4 = 0;
  5247  07D4  0021               	movlb	1	; select bank1
  5248  07D5  120D               	bcf	13,4	;volatile
  5249  07D6                     l133:	
  5250                           ;newmain.c: 181:     }
  5251                           
  5252                           
  5253                           ;newmain.c: 183:     INTCONbits.PEIE = 1;
  5254  07D6  170B               	bsf	11,6	;volatile
  5255                           
  5256                           ;newmain.c: 184:     INTCONbits.GIE = 1;
  5257  07D7  178B               	bsf	11,7	;volatile
  5258                           
  5259                           ;newmain.c: 187:     FVRCONbits.FVREN = 0;
  5260  07D8  0022               	movlb	2	; select bank2
  5261  07D9  1397               	bcf	23,7	;volatile
  5262                           
  5263                           ;newmain.c: 192:     TRISBbits.TRISB4 = 0;
  5264  07DA  0021               	movlb	1	; select bank1
  5265  07DB  120D               	bcf	13,4	;volatile
  5266                           
  5267                           ;newmain.c: 193:     PORTBbits.RB4 = 0;
  5268  07DC  0020               	movlb	0	; select bank0
  5269  07DD  120D               	bcf	13,4	;volatile
  5270                           
  5271                           ;newmain.c: 194:     PORTAbits.RA0 = 0;
  5272  07DE  100C               	bcf	12,0	;volatile
  5273  07DF                     l2554:	
  5274                           
  5275                           ;newmain.c: 195:     BTN_PRESSED = 0;
  5276  07DF  0021               	movlb	1	; select bank1
  5277  07E0  01EF               	clrf	_BTN_PRESSED^(0+128)	;volatile
  5278  07E1                     l2556:	
  5279                           
  5280                           ;newmain.c: 198:     TRISAbits.TRISA4 = 1;
  5281  07E1  160C               	bsf	12,4	;volatile
  5282  07E2                     l2558:	
  5283                           
  5284                           ;newmain.c: 199:     ANSELAbits.ANSA4 = 1;
  5285  07E2  0023               	movlb	3	; select bank3
  5286  07E3  160C               	bsf	12,4	;volatile
  5287  07E4                     l2560:	
  5288                           
  5289                           ;newmain.c: 200:     ADCON1bits.ADFM = 1;
  5290  07E4  0021               	movlb	1	; select bank1
  5291  07E5  179E               	bsf	30,7	;volatile
  5292  07E6                     l2562:	
  5293                           
  5294                           ;newmain.c: 201:     ADCON1bits.ADCS = 0b111;
  5295  07E6  3070               	movlw	112
  5296  07E7  049E               	iorwf	30,f	;volatile
  5297  07E8                     l2564:	
  5298                           
  5299                           ;newmain.c: 202:     ADCON1bits.ADPREF = 0b00;
  5300  07E8  30FC               	movlw	-4
  5301  07E9  059E               	andwf	30,f	;volatile
  5302  07EA                     l2566:	
  5303                           
  5304                           ;newmain.c: 203:     ADCON0bits.CHS = 0b00011;
  5305  07EA  081D               	movf	29,w	;volatile
  5306  07EB  3983               	andlw	-125
  5307  07EC  380C               	iorlw	12
  5308  07ED  009D               	movwf	29	;volatile
  5309  07EE                     l2568:	
  5310                           
  5311                           ;newmain.c: 205:     PORTBbits.RB6 = 0;
  5312  07EE  0020               	movlb	0	; select bank0
  5313  07EF  130D               	bcf	13,6	;volatile
  5314  07F0                     l2570:	
  5315                           
  5316                           ;newmain.c: 206:     TRISBbits.TRISB6 = 0;
  5317  07F0  0021               	movlb	1	; select bank1
  5318  07F1  130D               	bcf	13,6	;volatile
  5319  07F2                     l134:	
  5320  07F2  0008               	return
  5321  07F3                     __end_of_initialize:	
  5322                           
  5323                           	psect	text20
  5324  0D07                     __ptext20:	
  5325 ;; *************** function _delay100ms *****************
  5326 ;; Defined at:
  5327 ;;		line 211 in file "newmain.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;  n               2    4[COMMON] int 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  i               2    2[BANK0 ] int 
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      void 
  5334 ;; Registers used:
  5335 ;;		wreg, status,2
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5342 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5343 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5344 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5345 ;;Total ram usage:        6 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; Hardware stack levels required when called:    4
  5348 ;; This function calls:
  5349 ;;		Nothing
  5350 ;; This function is called by:
  5351 ;;		_main
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354                           
  5355                           
  5356                           ;psect for function _delay100ms
  5357  0D07                     _delay100ms:	
  5358  0D07                     l2572:	
  5359                           ;incstack = 0
  5360                           ; Regs used in _delay100ms: [wreg+status,2]
  5361                           
  5362                           
  5363                           ;newmain.c: 212:     for (int i =0; i < n; i++) {
  5364  0D07  0020               	movlb	0	; select bank0
  5365  0D08  01A2               	clrf	delay100ms@i
  5366  0D09  01A3               	clrf	delay100ms@i+1
  5367  0D0A  2D1D               	goto	l137
  5368  0D0B                     l2574:	
  5369                           
  5370                           ;newmain.c: 213:         _delay((unsigned long)((50)*(16000000/4000.0)));
  5371  0D0B  3002               	movlw	2
  5372  0D0C  0020               	movlb	0	; select bank0
  5373  0D0D  00A1               	movwf	??_delay100ms+1
  5374  0D0E  3004               	movlw	4
  5375  0D0F  00A0               	movwf	??_delay100ms
  5376  0D10  30BA               	movlw	186
  5377  0D11                     u3167:	
  5378  0D11  0B89               	decfsz	9,f
  5379  0D12  2D11               	goto	u3167
  5380  0D13  0BA0               	decfsz	??_delay100ms,f
  5381  0D14  2D11               	goto	u3167
  5382  0D15  0BA1               	decfsz	??_delay100ms+1,f
  5383  0D16  2D11               	goto	u3167
  5384  0D17  0000               	nop
  5385                           
  5386                           ;newmain.c: 214:     }
  5387  0D18  3001               	movlw	1
  5388  0D19  0020               	movlb	0	; select bank0
  5389  0D1A  07A2               	addwf	delay100ms@i,f
  5390  0D1B  3000               	movlw	0
  5391  0D1C  3DA3               	addwfc	delay100ms@i+1,f
  5392  0D1D                     l137:	
  5393  0D1D  0823               	movf	delay100ms@i+1,w
  5394  0D1E  3A80               	xorlw	128
  5395  0D1F  00A0               	movwf	??_delay100ms
  5396  0D20  0875               	movf	delay100ms@n+1,w
  5397  0D21  3A80               	xorlw	128
  5398  0D22  0220               	subwf	??_delay100ms,w
  5399  0D23  1D03               	skipz
  5400  0D24  2D27               	goto	u2725
  5401  0D25  0874               	movf	delay100ms@n,w
  5402  0D26  0222               	subwf	delay100ms@i,w
  5403  0D27                     u2725:	
  5404  0D27  1C03               	skipc
  5405  0D28  2D2A               	goto	u2721
  5406  0D29  2D2B               	goto	u2720
  5407  0D2A                     u2721:	
  5408  0D2A  2D0B               	goto	l2574
  5409  0D2B                     u2720:	
  5410  0D2B                     l140:	
  5411  0D2B  0008               	return
  5412  0D2C                     __end_of_delay100ms:	
  5413                           
  5414                           	psect	text21
  5415  0DFD                     __ptext21:	
  5416 ;; *************** function ___awmod *****************
  5417 ;; Defined at:
  5418 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  divisor         2   34[BANK0 ] int 
  5421 ;;  dividend        2   36[BANK0 ] int 
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;  sign            1   39[BANK0 ] unsigned char 
  5424 ;;  counter         1   38[BANK0 ] unsigned char 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  2   34[BANK0 ] int 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5434 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5437 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5438 ;;Total ram usage:        7 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:    4
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_main
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           
  5449                           ;psect for function ___awmod
  5450  0DFD                     ___awmod:	
  5451  0DFD                     l2660:	
  5452                           ;incstack = 0
  5453                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5454                           
  5455  0DFD  0020               	movlb	0	; select bank0
  5456  0DFE  01C7               	clrf	___awmod@sign
  5457  0DFF                     l2662:	
  5458  0DFF  1FC5               	btfss	___awmod@dividend+1,7
  5459  0E00  2E02               	goto	u2841
  5460  0E01  2E03               	goto	u2840
  5461  0E02                     u2841:	
  5462  0E02  2E0A               	goto	l2668
  5463  0E03                     u2840:	
  5464  0E03                     l2664:	
  5465  0E03  09C4               	comf	___awmod@dividend,f
  5466  0E04  09C5               	comf	___awmod@dividend+1,f
  5467  0E05  0AC4               	incf	___awmod@dividend,f
  5468  0E06  1903               	skipnz
  5469  0E07  0AC5               	incf	___awmod@dividend+1,f
  5470  0E08                     l2666:	
  5471  0E08  01C7               	clrf	___awmod@sign
  5472  0E09  0AC7               	incf	___awmod@sign,f
  5473  0E0A                     l2668:	
  5474  0E0A  1FC3               	btfss	___awmod@divisor+1,7
  5475  0E0B  2E0D               	goto	u2851
  5476  0E0C  2E0E               	goto	u2850
  5477  0E0D                     u2851:	
  5478  0E0D  2E13               	goto	l2672
  5479  0E0E                     u2850:	
  5480  0E0E                     l2670:	
  5481  0E0E  09C2               	comf	___awmod@divisor,f
  5482  0E0F  09C3               	comf	___awmod@divisor+1,f
  5483  0E10  0AC2               	incf	___awmod@divisor,f
  5484  0E11  1903               	skipnz
  5485  0E12  0AC3               	incf	___awmod@divisor+1,f
  5486  0E13                     l2672:	
  5487  0E13  0842               	movf	___awmod@divisor,w
  5488  0E14  0443               	iorwf	___awmod@divisor+1,w
  5489  0E15  1903               	btfsc	3,2
  5490  0E16  2E18               	goto	u2861
  5491  0E17  2E19               	goto	u2860
  5492  0E18                     u2861:	
  5493  0E18  2E42               	goto	l2690
  5494  0E19                     u2860:	
  5495  0E19                     l2674:	
  5496  0E19  01C6               	clrf	___awmod@counter
  5497  0E1A  0AC6               	incf	___awmod@counter,f
  5498  0E1B  2E25               	goto	l2680
  5499  0E1C                     l2676:	
  5500  0E1C  3001               	movlw	1
  5501  0E1D                     u2875:	
  5502  0E1D  35C2               	lslf	___awmod@divisor,f
  5503  0E1E  0DC3               	rlf	___awmod@divisor+1,f
  5504  0E1F  0B89               	decfsz	9,f
  5505  0E20  2E1D               	goto	u2875
  5506  0E21                     l2678:	
  5507  0E21  3001               	movlw	1
  5508  0E22  00F5               	movwf	??___awmod
  5509  0E23  0875               	movf	??___awmod,w
  5510  0E24  07C6               	addwf	___awmod@counter,f
  5511  0E25                     l2680:	
  5512  0E25  1FC3               	btfss	___awmod@divisor+1,7
  5513  0E26  2E28               	goto	u2881
  5514  0E27  2E29               	goto	u2880
  5515  0E28                     u2881:	
  5516  0E28  2E1C               	goto	l2676
  5517  0E29                     u2880:	
  5518  0E29                     l2682:	
  5519  0E29  0843               	movf	___awmod@divisor+1,w
  5520  0E2A  0245               	subwf	___awmod@dividend+1,w
  5521  0E2B  1D03               	skipz
  5522  0E2C  2E2F               	goto	u2895
  5523  0E2D  0842               	movf	___awmod@divisor,w
  5524  0E2E  0244               	subwf	___awmod@dividend,w
  5525  0E2F                     u2895:	
  5526  0E2F  1C03               	skipc
  5527  0E30  2E32               	goto	u2891
  5528  0E31  2E33               	goto	u2890
  5529  0E32                     u2891:	
  5530  0E32  2E37               	goto	l2686
  5531  0E33                     u2890:	
  5532  0E33                     l2684:	
  5533  0E33  0842               	movf	___awmod@divisor,w
  5534  0E34  02C4               	subwf	___awmod@dividend,f
  5535  0E35  0843               	movf	___awmod@divisor+1,w
  5536  0E36  3BC5               	subwfb	___awmod@dividend+1,f
  5537  0E37                     l2686:	
  5538  0E37  3001               	movlw	1
  5539  0E38                     u2905:	
  5540  0E38  36C3               	lsrf	___awmod@divisor+1,f
  5541  0E39  0CC2               	rrf	___awmod@divisor,f
  5542  0E3A  0B89               	decfsz	9,f
  5543  0E3B  2E38               	goto	u2905
  5544  0E3C                     l2688:	
  5545  0E3C  3001               	movlw	1
  5546  0E3D  02C6               	subwf	___awmod@counter,f
  5547  0E3E  1D03               	btfss	3,2
  5548  0E3F  2E41               	goto	u2911
  5549  0E40  2E42               	goto	u2910
  5550  0E41                     u2911:	
  5551  0E41  2E29               	goto	l2682
  5552  0E42                     u2910:	
  5553  0E42                     l2690:	
  5554  0E42  0847               	movf	___awmod@sign,w
  5555  0E43  1903               	btfsc	3,2
  5556  0E44  2E46               	goto	u2921
  5557  0E45  2E47               	goto	u2920
  5558  0E46                     u2921:	
  5559  0E46  2E4C               	goto	l2694
  5560  0E47                     u2920:	
  5561  0E47                     l2692:	
  5562  0E47  09C4               	comf	___awmod@dividend,f
  5563  0E48  09C5               	comf	___awmod@dividend+1,f
  5564  0E49  0AC4               	incf	___awmod@dividend,f
  5565  0E4A  1903               	skipnz
  5566  0E4B  0AC5               	incf	___awmod@dividend+1,f
  5567  0E4C                     l2694:	
  5568  0E4C  0845               	movf	___awmod@dividend+1,w
  5569  0E4D  00C3               	movwf	?___awmod+1
  5570  0E4E  0844               	movf	___awmod@dividend,w
  5571  0E4F  00C2               	movwf	?___awmod
  5572  0E50                     l517:	
  5573  0E50  0008               	return
  5574  0E51                     __end_of___awmod:	
  5575                           
  5576                           	psect	text22
  5577  0F01                     __ptext22:	
  5578 ;; *************** function ___awdiv *****************
  5579 ;; Defined at:
  5580 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  divisor         2    0[BANK0 ] int 
  5583 ;;  dividend        2    2[BANK0 ] int 
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;  quotient        2    6[BANK0 ] int 
  5586 ;;  sign            1    5[BANK0 ] unsigned char 
  5587 ;;  counter         1    4[BANK0 ] unsigned char 
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  2    0[BANK0 ] int 
  5590 ;; Registers used:
  5591 ;;		wreg, status,2, status,0
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5597 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5598 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5599 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5600 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5601 ;;Total ram usage:        9 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    4
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_main
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           
  5612                           ;psect for function ___awdiv
  5613  0F01                     ___awdiv:	
  5614  0F01                     l2616:	
  5615                           ;incstack = 0
  5616                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5617                           
  5618  0F01  0020               	movlb	0	; select bank0
  5619  0F02  01A5               	clrf	___awdiv@sign
  5620  0F03                     l2618:	
  5621  0F03  1FA1               	btfss	___awdiv@divisor+1,7
  5622  0F04  2F06               	goto	u2741
  5623  0F05  2F07               	goto	u2740
  5624  0F06                     u2741:	
  5625  0F06  2F0E               	goto	l2624
  5626  0F07                     u2740:	
  5627  0F07                     l2620:	
  5628  0F07  09A0               	comf	___awdiv@divisor,f
  5629  0F08  09A1               	comf	___awdiv@divisor+1,f
  5630  0F09  0AA0               	incf	___awdiv@divisor,f
  5631  0F0A  1903               	skipnz
  5632  0F0B  0AA1               	incf	___awdiv@divisor+1,f
  5633  0F0C                     l2622:	
  5634  0F0C  01A5               	clrf	___awdiv@sign
  5635  0F0D  0AA5               	incf	___awdiv@sign,f
  5636  0F0E                     l2624:	
  5637  0F0E  1FA3               	btfss	___awdiv@dividend+1,7
  5638  0F0F  2F11               	goto	u2751
  5639  0F10  2F12               	goto	u2750
  5640  0F11                     u2751:	
  5641  0F11  2F1B               	goto	l2630
  5642  0F12                     u2750:	
  5643  0F12                     l2626:	
  5644  0F12  09A2               	comf	___awdiv@dividend,f
  5645  0F13  09A3               	comf	___awdiv@dividend+1,f
  5646  0F14  0AA2               	incf	___awdiv@dividend,f
  5647  0F15  1903               	skipnz
  5648  0F16  0AA3               	incf	___awdiv@dividend+1,f
  5649  0F17                     l2628:	
  5650  0F17  3001               	movlw	1
  5651  0F18  00F4               	movwf	??___awdiv
  5652  0F19  0874               	movf	??___awdiv,w
  5653  0F1A  06A5               	xorwf	___awdiv@sign,f
  5654  0F1B                     l2630:	
  5655  0F1B  01A6               	clrf	___awdiv@quotient
  5656  0F1C  01A7               	clrf	___awdiv@quotient+1
  5657  0F1D                     l2632:	
  5658  0F1D  0820               	movf	___awdiv@divisor,w
  5659  0F1E  0421               	iorwf	___awdiv@divisor+1,w
  5660  0F1F  1903               	btfsc	3,2
  5661  0F20  2F22               	goto	u2761
  5662  0F21  2F23               	goto	u2760
  5663  0F22                     u2761:	
  5664  0F22  2F52               	goto	l2652
  5665  0F23                     u2760:	
  5666  0F23                     l2634:	
  5667  0F23  01A4               	clrf	___awdiv@counter
  5668  0F24  0AA4               	incf	___awdiv@counter,f
  5669  0F25  2F2F               	goto	l2640
  5670  0F26                     l2636:	
  5671  0F26  3001               	movlw	1
  5672  0F27                     u2775:	
  5673  0F27  35A0               	lslf	___awdiv@divisor,f
  5674  0F28  0DA1               	rlf	___awdiv@divisor+1,f
  5675  0F29  0B89               	decfsz	9,f
  5676  0F2A  2F27               	goto	u2775
  5677  0F2B                     l2638:	
  5678  0F2B  3001               	movlw	1
  5679  0F2C  00F4               	movwf	??___awdiv
  5680  0F2D  0874               	movf	??___awdiv,w
  5681  0F2E  07A4               	addwf	___awdiv@counter,f
  5682  0F2F                     l2640:	
  5683  0F2F  1FA1               	btfss	___awdiv@divisor+1,7
  5684  0F30  2F32               	goto	u2781
  5685  0F31  2F33               	goto	u2780
  5686  0F32                     u2781:	
  5687  0F32  2F26               	goto	l2636
  5688  0F33                     u2780:	
  5689  0F33                     l2642:	
  5690  0F33  3001               	movlw	1
  5691  0F34                     u2795:	
  5692  0F34  35A6               	lslf	___awdiv@quotient,f
  5693  0F35  0DA7               	rlf	___awdiv@quotient+1,f
  5694  0F36  0B89               	decfsz	9,f
  5695  0F37  2F34               	goto	u2795
  5696  0F38  0821               	movf	___awdiv@divisor+1,w
  5697  0F39  0223               	subwf	___awdiv@dividend+1,w
  5698  0F3A  1D03               	skipz
  5699  0F3B  2F3E               	goto	u2805
  5700  0F3C  0820               	movf	___awdiv@divisor,w
  5701  0F3D  0222               	subwf	___awdiv@dividend,w
  5702  0F3E                     u2805:	
  5703  0F3E  1C03               	skipc
  5704  0F3F  2F41               	goto	u2801
  5705  0F40  2F42               	goto	u2800
  5706  0F41                     u2801:	
  5707  0F41  2F47               	goto	l2648
  5708  0F42                     u2800:	
  5709  0F42                     l2644:	
  5710  0F42  0820               	movf	___awdiv@divisor,w
  5711  0F43  02A2               	subwf	___awdiv@dividend,f
  5712  0F44  0821               	movf	___awdiv@divisor+1,w
  5713  0F45  3BA3               	subwfb	___awdiv@dividend+1,f
  5714  0F46                     l2646:	
  5715  0F46  1426               	bsf	___awdiv@quotient,0
  5716  0F47                     l2648:	
  5717  0F47  3001               	movlw	1
  5718  0F48                     u2815:	
  5719  0F48  36A1               	lsrf	___awdiv@divisor+1,f
  5720  0F49  0CA0               	rrf	___awdiv@divisor,f
  5721  0F4A  0B89               	decfsz	9,f
  5722  0F4B  2F48               	goto	u2815
  5723  0F4C                     l2650:	
  5724  0F4C  3001               	movlw	1
  5725  0F4D  02A4               	subwf	___awdiv@counter,f
  5726  0F4E  1D03               	btfss	3,2
  5727  0F4F  2F51               	goto	u2821
  5728  0F50  2F52               	goto	u2820
  5729  0F51                     u2821:	
  5730  0F51  2F33               	goto	l2642
  5731  0F52                     u2820:	
  5732  0F52                     l2652:	
  5733  0F52  0825               	movf	___awdiv@sign,w
  5734  0F53  1903               	btfsc	3,2
  5735  0F54  2F56               	goto	u2831
  5736  0F55  2F57               	goto	u2830
  5737  0F56                     u2831:	
  5738  0F56  2F5C               	goto	l2656
  5739  0F57                     u2830:	
  5740  0F57                     l2654:	
  5741  0F57  09A6               	comf	___awdiv@quotient,f
  5742  0F58  09A7               	comf	___awdiv@quotient+1,f
  5743  0F59  0AA6               	incf	___awdiv@quotient,f
  5744  0F5A  1903               	skipnz
  5745  0F5B  0AA7               	incf	___awdiv@quotient+1,f
  5746  0F5C                     l2656:	
  5747  0F5C  0827               	movf	___awdiv@quotient+1,w
  5748  0F5D  00A1               	movwf	?___awdiv+1
  5749  0F5E  0826               	movf	___awdiv@quotient,w
  5750  0F5F  00A0               	movwf	?___awdiv
  5751  0F60                     l504:	
  5752  0F60  0008               	return
  5753  0F61                     __end_of___awdiv:	
  5754                           
  5755                           	psect	text23
  5756  0C2F                     __ptext23:	
  5757 ;; *************** function _TMR1_StopTimer *****************
  5758 ;; Defined at:
  5759 ;;		line 302 in file "newmain.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;		None
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;		None
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  1    wreg      void 
  5766 ;; Registers used:
  5767 ;;		None
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5777 ;;Total ram usage:        0 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:    4
  5780 ;; This function calls:
  5781 ;;		Nothing
  5782 ;; This function is called by:
  5783 ;;		_main
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           
  5788                           ;psect for function _TMR1_StopTimer
  5789  0C2F                     _TMR1_StopTimer:	
  5790  0C2F                     l2588:	
  5791                           ;incstack = 0
  5792                           ; Regs used in _TMR1_StopTimer: []
  5793                           
  5794                           
  5795                           ;newmain.c: 304:     T1CONbits.TMR1ON = 0;
  5796  0C2F  0020               	movlb	0	; select bank0
  5797  0C30  1018               	bcf	24,0	;volatile
  5798  0C31                     l168:	
  5799  0C31  0008               	return
  5800  0C32                     __end_of_TMR1_StopTimer:	
  5801                           
  5802                           	psect	text24
  5803  0C54                     __ptext24:	
  5804 ;; *************** function _TMR1_Reload *****************
  5805 ;; Defined at:
  5806 ;;		line 307 in file "newmain.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0, pclath, cstack
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5824 ;;Total ram usage:        0 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:    5
  5827 ;; This function calls:
  5828 ;;		_TMR1_WriteTimer
  5829 ;; This function is called by:
  5830 ;;		_main
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           
  5835                           ;psect for function _TMR1_Reload
  5836  0C54                     _TMR1_Reload:	
  5837  0C54                     l2590:	
  5838                           ;incstack = 0
  5839                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
  5840                           
  5841                           
  5842                           ;newmain.c: 309:     TMR1_WriteTimer(timer1ReloadVal);
  5843  0C54  0879               	movf	_timer1ReloadVal+1,w	;volatile
  5844  0C55  00F5               	movwf	TMR1_WriteTimer@timerVal+1
  5845  0C56  0878               	movf	_timer1ReloadVal,w	;volatile
  5846  0C57  00F4               	movwf	TMR1_WriteTimer@timerVal
  5847  0C58  318C  244C  318C   	fcall	_TMR1_WriteTimer
  5848  0C5B                     l2592:	
  5849                           
  5850                           ;newmain.c: 310:     CountCallBack = 0;
  5851  0C5B  0023               	movlb	3	; select bank3
  5852  0C5C  01D0               	clrf	_CountCallBack^(0+384)	;volatile
  5853  0C5D  01D1               	clrf	(_CountCallBack+1)^(0+384)	;volatile
  5854  0C5E                     l171:	
  5855  0C5E  0008               	return
  5856  0C5F                     __end_of_TMR1_Reload:	
  5857                           
  5858                           	psect	text25
  5859  0C4C                     __ptext25:	
  5860 ;; *************** function _TMR1_WriteTimer *****************
  5861 ;; Defined at:
  5862 ;;		line 278 in file "newmain.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  timerVal        2    4[COMMON] unsigned short 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg, status,2
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;Total ram usage:        2 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    4
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_TMR1_Reload
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           
  5891                           ;psect for function _TMR1_WriteTimer
  5892  0C4C                     _TMR1_WriteTimer:	
  5893  0C4C                     l2482:	
  5894                           ;incstack = 0
  5895                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  5896                           
  5897                           
  5898                           ;newmain.c: 278: void TMR1_WriteTimer(uint16_t timerVal);newmain.c: 279: {;newmain.c: 28
      +                          1:         T1CONbits.TMR1ON = 0;
  5899  0C4C  0020               	movlb	0	; select bank0
  5900  0C4D  1018               	bcf	24,0	;volatile
  5901  0C4E                     l2484:	
  5902                           
  5903                           ;newmain.c: 283:         TMR1H = (timerVal >> 8);
  5904  0C4E  0875               	movf	TMR1_WriteTimer@timerVal+1,w
  5905  0C4F  0097               	movwf	23	;volatile
  5906  0C50                     l2486:	
  5907                           
  5908                           ;newmain.c: 284:         TMR1L = timerVal;
  5909  0C50  0874               	movf	TMR1_WriteTimer@timerVal,w
  5910  0C51  0096               	movwf	22	;volatile
  5911  0C52                     l2488:	
  5912                           
  5913                           ;newmain.c: 286:         T1CONbits.TMR1ON =1;
  5914  0C52  1418               	bsf	24,0	;volatile
  5915  0C53                     l158:	
  5916  0C53  0008               	return
  5917  0C54                     __end_of_TMR1_WriteTimer:	
  5918                           
  5919                           	psect	text26
  5920  0C81                     __ptext26:	
  5921 ;; *************** function _TMR1_Initialize *****************
  5922 ;; Defined at:
  5923 ;;		line 220 in file "newmain.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;		None
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;		None
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  1    wreg      void 
  5930 ;; Registers used:
  5931 ;;		wreg, status,2, status,0, pclath, cstack
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5941 ;;Total ram usage:        0 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; Hardware stack levels required when called:    5
  5944 ;; This function calls:
  5945 ;;		_TMR1_SetInterruptHandler
  5946 ;; This function is called by:
  5947 ;;		_main
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           
  5952                           ;psect for function _TMR1_Initialize
  5953  0C81                     _TMR1_Initialize:	
  5954  0C81                     l2576:	
  5955                           ;incstack = 0
  5956                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5957                           
  5958                           
  5959                           ;newmain.c: 225:     T1GCON = 0x00;
  5960  0C81  0020               	movlb	0	; select bank0
  5961  0C82  0199               	clrf	25	;volatile
  5962                           
  5963                           ;newmain.c: 228:     TMR1H = 0x00;
  5964  0C83  0197               	clrf	23	;volatile
  5965                           
  5966                           ;newmain.c: 231:     TMR1L = 0x00;
  5967  0C84  0196               	clrf	22	;volatile
  5968  0C85                     l2578:	
  5969                           
  5970                           ;newmain.c: 234:     PIR1bits.TMR1IF = 0;
  5971  0C85  1011               	bcf	17,0	;volatile
  5972  0C86                     l2580:	
  5973                           
  5974                           ;newmain.c: 237:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5975  0C86  0817               	movf	23,w	;volatile
  5976  0C87  00F9               	movwf	_timer1ReloadVal+1	;volatile
  5977  0C88  0816               	movf	22,w	;volatile
  5978  0C89  00F8               	movwf	_timer1ReloadVal	;volatile
  5979  0C8A                     l2582:	
  5980                           
  5981                           ;newmain.c: 240:     PIE1bits.TMR1IE = 1;
  5982  0C8A  0021               	movlb	1	; select bank1
  5983  0C8B  1411               	bsf	17,0	;volatile
  5984  0C8C                     l2584:	
  5985                           
  5986                           ;newmain.c: 243:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  5987  0C8C  3032               	movlw	low _TMR1_DefaultInterruptHandler
  5988  0C8D  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5989  0C8E  300C               	movlw	high _TMR1_DefaultInterruptHandler
  5990  0C8F  00F5               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5991  0C90  318C  2438  318C   	fcall	_TMR1_SetInterruptHandler
  5992  0C93                     l2586:	
  5993                           
  5994                           ;newmain.c: 247:     T1CON = 0b00110101;
  5995  0C93  3035               	movlw	53
  5996  0C94  0020               	movlb	0	; select bank0
  5997  0C95  0098               	movwf	24	;volatile
  5998  0C96                     l143:	
  5999  0C96  0008               	return
  6000  0C97                     __end_of_TMR1_Initialize:	
  6001                           
  6002                           	psect	text27
  6003  0C38                     __ptext27:	
  6004 ;; *************** function _TMR1_SetInterruptHandler *****************
  6005 ;; Defined at:
  6006 ;;		line 250 in file "newmain.c"
  6007 ;; Parameters:    Size  Location     Type
  6008 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  6009 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;		None
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  1    wreg      void 
  6014 ;; Registers used:
  6015 ;;		wreg
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6021 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;Total ram usage:        2 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    4
  6028 ;; This function calls:
  6029 ;;		Nothing
  6030 ;; This function is called by:
  6031 ;;		_TMR1_Initialize
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           
  6036                           ;psect for function _TMR1_SetInterruptHandler
  6037  0C38                     _TMR1_SetInterruptHandler:	
  6038  0C38                     l2480:	
  6039                           ;incstack = 0
  6040                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  6041                           
  6042                           
  6043                           ;newmain.c: 251:     TMR1_InterruptHandler = InterruptHandler;
  6044  0C38  0875               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  6045  0C39  0023               	movlb	3	; select bank3
  6046  0C3A  00DB               	movwf	(_TMR1_InterruptHandler+1)^(0+384)
  6047  0C3B  0874               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  6048  0C3C  00DA               	movwf	_TMR1_InterruptHandler^(0+384)
  6049  0C3D                     l146:	
  6050  0C3D  0008               	return
  6051  0C3E                     __end_of_TMR1_SetInterruptHandler:	
  6052                           
  6053                           	psect	intentry
  6054  0004                     __pintentry:	
  6055 ;; *************** function _general_int *****************
  6056 ;; Defined at:
  6057 ;;		line 123 in file "newmain.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;		None
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;		None
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  1    wreg      void 
  6064 ;; Registers used:
  6065 ;;		wreg, status,2, status,0, pclath, cstack
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6074 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6075 ;;Total ram usage:        2 bytes
  6076 ;; Hardware stack levels used:    1
  6077 ;; Hardware stack levels required when called:    3
  6078 ;; This function calls:
  6079 ;;		_TMR1_ISR
  6080 ;; This function is called by:
  6081 ;;		Interrupt level 1
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085  0004                     _general_int:	
  6086                           
  6087                           ;incstack = 0
  6088  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6089                           
  6090                           ; Regs used in _general_int: [wreg+status,2+status,0+pclath+cstack]
  6091  0005  3180               	pagesel	$
  6092  0006                     i1l2030:	
  6093                           
  6094                           ;newmain.c: 125:     if (IOCAFbits.IOCAF0) {
  6095  0006  0027               	movlb	7	; select bank7
  6096  0007  1C13               	btfss	19,0	;volatile
  6097  0008  280A               	goto	u188_21
  6098  0009  280B               	goto	u188_20
  6099  000A                     u188_21:	
  6100  000A  2823               	goto	i1l2040
  6101  000B                     u188_20:	
  6102  000B                     i1l2032:	
  6103                           
  6104                           ;newmain.c: 126:         if (IOCAPbits.IOCAP0) {
  6105  000B  1C11               	btfss	17,0	;volatile
  6106  000C  280E               	goto	u189_21
  6107  000D  280F               	goto	u189_20
  6108  000E                     u189_21:	
  6109  000E  2823               	goto	i1l2040
  6110  000F                     u189_20:	
  6111  000F                     i1l2034:	
  6112                           
  6113                           ;newmain.c: 127:           IOCAF = 0;
  6114  000F  0193               	clrf	19	;volatile
  6115  0010                     i1l2036:	
  6116                           
  6117                           ;newmain.c: 128:           _delay((unsigned long)((200)*(16000000/4000.0)));
  6118  0010  3005               	movlw	5
  6119  0011  00F3               	movwf	??_general_int+1
  6120  0012  300F               	movlw	15
  6121  0013  00F2               	movwf	??_general_int
  6122  0014  30F1               	movlw	241
  6123  0015                     u317_27:	
  6124  0015  0B89               	decfsz	9,f
  6125  0016  2815               	goto	u317_27
  6126  0017  0BF2               	decfsz	??_general_int,f
  6127  0018  2815               	goto	u317_27
  6128  0019  0BF3               	decfsz	??_general_int+1,f
  6129  001A  2815               	goto	u317_27
  6130  001B  0000               	nop
  6131  001C                     i1l2038:	
  6132                           
  6133                           ;newmain.c: 129:           BTN_PRESSED = 1;
  6134  001C  3001               	movlw	1
  6135  001D  00F2               	movwf	??_general_int
  6136  001E  0872               	movf	??_general_int,w
  6137  001F  0021               	movlb	1	; select bank1
  6138  0020  00EF               	movwf	_BTN_PRESSED^(0+128)	;volatile
  6139                           
  6140                           ;newmain.c: 130:           IOCAF = 0;
  6141  0021  0027               	movlb	7	; select bank7
  6142  0022  0193               	clrf	19	;volatile
  6143  0023                     i1l2040:	
  6144                           
  6145                           ;newmain.c: 134:     if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1) {
  6146  0023  0021               	movlb	1	; select bank1
  6147  0024  1C11               	btfss	17,0	;volatile
  6148  0025  2827               	goto	u190_21
  6149  0026  2828               	goto	u190_20
  6150  0027                     u190_21:	
  6151  0027  2830               	goto	i1l120
  6152  0028                     u190_20:	
  6153  0028                     i1l2042:	
  6154  0028  0020               	movlb	0	; select bank0
  6155  0029  1C11               	btfss	17,0	;volatile
  6156  002A  282C               	goto	u191_21
  6157  002B  282D               	goto	u191_20
  6158  002C                     u191_21:	
  6159  002C  2830               	goto	i1l120
  6160  002D                     u191_20:	
  6161  002D                     i1l2044:	
  6162                           
  6163                           ;newmain.c: 135:             TMR1_ISR();
  6164  002D  318C  24E8  3180   	fcall	_TMR1_ISR
  6165  0030                     i1l120:	
  6166  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6167  0031  0009               	retfie
  6168  0032                     __end_of_general_int:	
  6169                           
  6170                           	psect	text29
  6171  0CE8                     __ptext29:	
  6172 ;; *************** function _TMR1_ISR *****************
  6173 ;; Defined at:
  6174 ;;		line 262 in file "newmain.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;		None
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;		None
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  1    wreg      void 
  6181 ;; Registers used:
  6182 ;;		wreg, status,2, status,0, pclath, cstack
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;Total ram usage:        0 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:    2
  6195 ;; This function calls:
  6196 ;;		_TMR1_CallBack
  6197 ;;		i1_TMR1_WriteTimer
  6198 ;; This function is called by:
  6199 ;;		_general_int
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           
  6204                           ;psect for function _TMR1_ISR
  6205  0CE8                     _TMR1_ISR:	
  6206  0CE8                     i1l1842:	
  6207                           ;incstack = 0
  6208                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  6209                           
  6210                           
  6211                           ;newmain.c: 265:     PIR1bits.TMR1IF = 0;
  6212  0CE8  0020               	movlb	0	; select bank0
  6213  0CE9  1011               	bcf	17,0	;volatile
  6214  0CEA                     i1l1844:	
  6215                           
  6216                           ;newmain.c: 266:     TMR1_WriteTimer(timer1ReloadVal);
  6217  0CEA  0879               	movf	_timer1ReloadVal+1,w	;volatile
  6218  0CEB  00F1               	movwf	i1TMR1_WriteTimer@timerVal+1
  6219  0CEC  0878               	movf	_timer1ReloadVal,w	;volatile
  6220  0CED  00F0               	movwf	i1TMR1_WriteTimer@timerVal
  6221  0CEE  318C  2444  318C   	fcall	i1_TMR1_WriteTimer
  6222  0CF1                     i1l1846:	
  6223                           
  6224                           ;newmain.c: 269:     if (++CountCallBack >= TMR1_INTERRUPT_TICKER_FACTOR)
  6225  0CF1  3001               	movlw	1
  6226  0CF2  0023               	movlb	3	; select bank3
  6227  0CF3  07D0               	addwf	_CountCallBack^(0+384),f	;volatile
  6228  0CF4  3000               	movlw	0
  6229  0CF5  3DD1               	addwfc	(_CountCallBack+1)^(0+384),f	;volatile
  6230  0CF6  0855               	movf	(_TMR1_INTERRUPT_TICKER_FACTOR+1)^(0+384),w	;volatile
  6231  0CF7  0251               	subwf	(_CountCallBack+1)^(0+384),w	;volatile
  6232  0CF8  1D03               	skipz
  6233  0CF9  2CFC               	goto	u166_25
  6234  0CFA  0854               	movf	_TMR1_INTERRUPT_TICKER_FACTOR^(0+384),w	;volatile
  6235  0CFB  0250               	subwf	_CountCallBack^(0+384),w	;volatile
  6236  0CFC                     u166_25:	
  6237  0CFC  1C03               	skipc
  6238  0CFD  2CFF               	goto	u166_21
  6239  0CFE  2D00               	goto	u166_20
  6240  0CFF                     u166_21:	
  6241  0CFF  2D06               	goto	i1l155
  6242  0D00                     u166_20:	
  6243  0D00                     i1l1848:	
  6244                           
  6245                           ;newmain.c: 270:     {;newmain.c: 272:         TMR1_CallBack();
  6246  0D00  318C  245F  318C   	fcall	_TMR1_CallBack
  6247  0D03                     i1l1850:	
  6248                           
  6249                           ;newmain.c: 274:         CountCallBack = 0;
  6250  0D03  0023               	movlb	3	; select bank3
  6251  0D04  01D0               	clrf	_CountCallBack^(0+384)	;volatile
  6252  0D05  01D1               	clrf	(_CountCallBack+1)^(0+384)	;volatile
  6253  0D06                     i1l155:	
  6254  0D06  0008               	return
  6255  0D07                     __end_of_TMR1_ISR:	
  6256                           
  6257                           	psect	text30
  6258  0C44                     __ptext30:	
  6259 ;; *************** function i1_TMR1_WriteTimer *****************
  6260 ;; Defined at:
  6261 ;;		line 278 in file "newmain.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;  timerVal        2    0[COMMON] unsigned short 
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;		None
  6266 ;; Return value:  Size  Location     Type
  6267 ;;                  1    wreg      void 
  6268 ;; Registers used:
  6269 ;;		wreg, status,2
  6270 ;; Tracked objects:
  6271 ;;		On entry : 0/0
  6272 ;;		On exit  : 0/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6278 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6279 ;;Total ram usage:        2 bytes
  6280 ;; Hardware stack levels used:    1
  6281 ;; This function calls:
  6282 ;;		Nothing
  6283 ;; This function is called by:
  6284 ;;		_TMR1_ISR
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           
  6289                           ;psect for function i1_TMR1_WriteTimer
  6290  0C44                     i1_TMR1_WriteTimer:	
  6291  0C44                     i1l1834:	
  6292                           ;incstack = 0
  6293                           ; Regs used in i1_TMR1_WriteTimer: [wreg+status,2]
  6294                           
  6295                           
  6296                           ;newmain.c: 278: void TMR1_WriteTimer(uint16_t timerVal);newmain.c: 279: {;newmain.c: 28
      +                          1:         T1CONbits.TMR1ON = 0;
  6297  0C44  0020               	movlb	0	; select bank0
  6298  0C45  1018               	bcf	24,0	;volatile
  6299  0C46                     i1l1836:	
  6300                           
  6301                           ;newmain.c: 283:         TMR1H = (timerVal >> 8);
  6302  0C46  0871               	movf	i1TMR1_WriteTimer@timerVal+1,w
  6303  0C47  0097               	movwf	23	;volatile
  6304  0C48                     i1l1838:	
  6305                           
  6306                           ;newmain.c: 284:         TMR1L = timerVal;
  6307  0C48  0870               	movf	i1TMR1_WriteTimer@timerVal,w
  6308  0C49  0096               	movwf	22	;volatile
  6309  0C4A                     i1l1840:	
  6310                           
  6311                           ;newmain.c: 286:         T1CONbits.TMR1ON =1;
  6312  0C4A  1418               	bsf	24,0	;volatile
  6313  0C4B                     i1l158:	
  6314  0C4B  0008               	return
  6315  0C4C                     __end_ofi1_TMR1_WriteTimer:	
  6316                           
  6317                           	psect	text31
  6318  0C5F                     __ptext31:	
  6319 ;; *************** function _TMR1_CallBack *****************
  6320 ;; Defined at:
  6321 ;;		line 289 in file "newmain.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;		None
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      void 
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0, pclath, cstack
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6339 ;;Total ram usage:        0 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    1
  6342 ;; This function calls:
  6343 ;;		Absolute function
  6344 ;;		_TMR1_DefaultInterruptHandler
  6345 ;; This function is called by:
  6346 ;;		_TMR1_ISR
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           
  6351                           ;psect for function _TMR1_CallBack
  6352  0C5F                     _TMR1_CallBack:	
  6353  0C5F                     i1l1800:	
  6354                           ;incstack = 0
  6355                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  6356                           
  6357                           
  6358                           ;newmain.c: 291:     if(TMR1_InterruptHandler)
  6359  0C5F  0023               	movlb	3	; select bank3
  6360  0C60  085A               	movf	_TMR1_InterruptHandler^(0+384),w
  6361  0C61  045B               	iorwf	(_TMR1_InterruptHandler+1)^(0+384),w
  6362  0C62  1903               	btfsc	3,2
  6363  0C63  2C65               	goto	u160_21
  6364  0C64  2C66               	goto	u160_20
  6365  0C65                     u160_21:	
  6366  0C65  2C6B               	goto	i1l162
  6367  0C66                     u160_20:	
  6368  0C66                     i1l1802:	
  6369                           
  6370                           ;newmain.c: 292:     {;newmain.c: 293:         TMR1_InterruptHandler();
  6371  0C66  085B               	movf	(_TMR1_InterruptHandler+1)^(0+384),w
  6372  0C67  008A               	movwf	10
  6373  0C68  085A               	movf	_TMR1_InterruptHandler^(0+384),w
  6374  0C69  000A               	callw
  6375  0C6A  318C               	pagesel	$
  6376  0C6B                     i1l162:	
  6377  0C6B  0008               	return
  6378  0C6C                     __end_of_TMR1_CallBack:	
  6379                           
  6380                           	psect	text32
  6381  0C32                     __ptext32:	
  6382 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  6383 ;; Defined at:
  6384 ;;		line 254 in file "newmain.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		wreg
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;Total ram usage:        0 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; This function calls:
  6405 ;;		Nothing
  6406 ;; This function is called by:
  6407 ;;		_TMR1_Initialize
  6408 ;;		_TMR1_CallBack
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           
  6413                           ;psect for function _TMR1_DefaultInterruptHandler
  6414  0C32                     _TMR1_DefaultInterruptHandler:	
  6415  0C32                     i1l1744:	
  6416                           ;incstack = 0
  6417                           ; Regs used in _TMR1_DefaultInterruptHandler: [wreg]
  6418                           
  6419                           
  6420                           ;newmain.c: 257:     TIME_INTRO_ELAPSED = 1;
  6421  0C32  3001               	movlw	1
  6422  0C33  0021               	movlb	1	; select bank1
  6423  0C34  00ED               	movwf	_TIME_INTRO_ELAPSED^(0+128)	;volatile
  6424  0C35  3000               	movlw	0
  6425  0C36  00EE               	movwf	(_TIME_INTRO_ELAPSED^(0+128)+1)	;volatile
  6426  0C37                     i1l149:	
  6427  0C37  0008               	return
  6428  0C38                     __end_of_TMR1_DefaultInterruptHandler:	
  6429  007E                     btemp	set	126	;btemp
  6430  007E                     int$flags	set	126
  6431  007E                     wtemp0	set	126


Data Sizes:
    Strings     134
    Constant    0
    Data        0
    BSS         233
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     80      80
    BANK1            80     71      80
    BANK2            80     80      80
    BANK3            80     42      68
    BANK4            80      0      72
    BANK5            80      0      80
    BANK6            80      0      42
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    time@t	PTR long long  size(1) Largest target is 8
		 -> seedRand@toc(BANK0[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK4[32]), main@readbuffer_784(BANK3[20]), main@readbuffer_781(BANK3[20]), main@readbuffer_778(BANK2[20]), 
		 -> main@readbuffer_773(BANK2[20]), main@readbuffer_769(BANK2[20]), main@readbuffer_766(BANK1[22]), main@readbuffer_758(BANK2[20]), 
		 -> main@readbuffer(BANK1[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK4[32]), main@readbuffer_784(BANK3[20]), main@readbuffer_781(BANK3[20]), main@readbuffer_778(BANK2[20]), 
		 -> main@readbuffer_773(BANK2[20]), main@readbuffer_769(BANK2[20]), main@readbuffer_766(BANK1[22]), main@readbuffer_758(BANK2[20]), 
		 -> main@readbuffer(BANK1[20]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_9(CODE[12]), STR_8(CODE[12]), STR_7(CODE[17]), STR_6(CODE[13]), 
		 -> STR_5(CODE[18]), STR_4(CODE[11]), STR_3(CODE[21]), STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 22
		 -> main@readbuffer_784(BANK3[20]), main@readbuffer_781(BANK3[20]), main@readbuffer_778(BANK2[20]), main@readbuffer_773(BANK2[20]), 
		 -> main@readbuffer_769(BANK2[20]), main@readbuffer_766(BANK1[22]), main@readbuffer_758(BANK2[20]), main@readbuffer(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 22
		 -> main@readbuffer_784(BANK3[20]), main@readbuffer_781(BANK3[20]), main@readbuffer_778(BANK2[20]), main@readbuffer_773(BANK2[20]), 
		 -> main@readbuffer_769(BANK2[20]), main@readbuffer_766(BANK1[22]), main@readbuffer_758(BANK2[20]), main@readbuffer(BANK1[20]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    S1160_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 22
		 -> main@readbuffer_784(BANK3[20]), main@readbuffer_781(BANK3[20]), main@readbuffer_778(BANK2[20]), main@readbuffer_773(BANK2[20]), 
		 -> main@readbuffer_769(BANK2[20]), main@readbuffer_766(BANK1[22]), main@readbuffer_758(BANK2[20]), main@readbuffer(BANK1[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 22
		 -> main@readbuffer_784(BANK3[20]), main@readbuffer_781(BANK3[20]), main@readbuffer_778(BANK2[20]), main@readbuffer_773(BANK2[20]), 
		 -> main@readbuffer_769(BANK2[20]), main@readbuffer_766(BANK1[22]), main@readbuffer_758(BANK2[20]), main@readbuffer(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_9(CODE[12]), STR_8(CODE[12]), STR_7(CODE[17]), STR_6(CODE[13]), 
		 -> STR_5(CODE[18]), STR_4(CODE[11]), STR_3(CODE[21]), STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_9(CODE[12]), STR_8(CODE[12]), STR_7(CODE[17]), STR_6(CODE[13]), 
		 -> STR_5(CODE[18]), STR_4(CODE[11]), STR_3(CODE[21]), STR_2(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    sendOnly@buffer	PTR unsigned char  size(2) Largest target is 25
		 -> main@readbuffer_784(BANK3[20]), main@readbuffer_781(BANK3[20]), main@readbuffer_778(BANK2[20]), main@readbuffer_773(BANK2[20]), 
		 -> main@readbuffer_769(BANK2[20]), main@readbuffer_766(BANK1[22]), main@readbuffer_758(BANK2[20]), main@readbuffer(BANK1[20]), 
		 -> STR_1(CODE[25]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _main->_delay100ms
    _main->_strlen
    _pad->_strlen
    _abs->___aomod
    _sendOnly->_strlen
    _seedRand->_srand
    _rand->___omul
    _TMR1_Reload->_TMR1_WriteTimer
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _general_int in COMMON

    _TMR1_ISR->i1_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendOnly->_strlen
    _seedRand->_srand
    _rand->___omul
    ___awmod->_rand

Critical Paths under _general_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _general_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _general_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _general_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _general_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _general_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _general_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _general_int in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _general_int in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _general_int in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _general_int in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _general_int in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _general_int in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               175   171      4   15359
                                             18 BANK1     53    49      4
                                              0 BANK2     80    80      0
                                              0 BANK3     42    42      0
                    _TMR1_Initialize
                        _TMR1_Reload
                     _TMR1_StopTimer
                            ___awdiv
                            ___awmod
                         _delay100ms
                         _initialize
                               _rand
                           _seedRand
                           _sendOnly
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    9308
                                              0 BANK1     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    7922
                                             72 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    7503
                                             56 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5782
                                             26 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3570
                                             15 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     535
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1429
                                              4 COMMON     1     0      1
                                              8 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1037
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              4 COMMON     1     1      0
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              4 COMMON     1     1      0
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendOnly                                             6     2      4    1750
                                              2 BANK0      6     2      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _seedRand                                             8     8      0     287
                                              2 BANK0      8     8      0
                              _srand
                               _time
 ---------------------------------------------------------------------------------
 (2) _time                                                 1     1      0      98
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _srand                                                4     2      2     121
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _rand                                                10     8      2     316
                                             24 BANK0     10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (2) ___omul                                              25     9     16     316
                                              4 COMMON     1     1      0
                                              0 BANK0     24     8     16
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay100ms                                           6     4      2     428
                                              4 COMMON     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     613
                                              5 COMMON     1     1      0
                                             34 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0     207
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     207
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _general_int                                          2     2      0      70
                                              2 COMMON     2     2      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0      70
                      _TMR1_CallBack
                  i1_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) i1_TMR1_WriteTimer                                   2     0      2      70
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR1_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TMR1_Initialize
     _TMR1_SetInterruptHandler
   _TMR1_Reload
     _TMR1_WriteTimer
   _TMR1_StopTimer
   ___awdiv
   ___awmod
     _rand (ARG)
       ___omul
   _delay100ms
   _initialize
   _rand
     ___omul
   _seedRand
     _srand
     _time
   _sendOnly
     _strlen (ARG)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   _strlen

 _general_int (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
     i1_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     47      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     2A      44      11       85.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      48      13       90.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      50      15      100.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      2A      17       52.5%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     200      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     200      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jul 26 12:24:28 2020

                             __CFG_CP$OFF 0000                              ___awdiv@sign 0025  
                                     l140 0D2B                                       l124 0002  
                                     l133 07D6                                       l134 07F2  
                                     l302 0EC2                                       l310 03D4  
                                     l143 0C96                                       l311 03DD  
                                     l137 0D1D                                       l305 0EE4  
                                     l146 0C3D                                       l171 0C5E  
                                     l307 0F00                                       l315 03FA  
                                     l316 0410                                       l340 07BE  
                                     l180 009C                                       l333 04F3  
                                     l181 009F                                       l158 0C53  
                                     l174 07FF                                       l319 0480  
                                     l168 0C31                                       l504 0F60  
                                     l370 0DEC                                       l371 0DFC  
                                     l451 05E6                                       l347 0DB0  
                                     l452 05F7                                       l517 0E50  
                                     l464 06D2                                       l465 06E3  
                                     l820 0EA7                                       l805 0CE7  
                                     l808 0CE7                                       l843 0C80  
                                     l835 0D7F                                       l828 0D54  
                                     l852 0CCB                                       l846 0FFF  
                                     l838 0003                                       l856 0CB0  
                         _timer1ReloadVal 0078                                       _abs 0CCC  
                                     _pad 0EA8                              ___awmod@sign 0047  
                            __CFG_BORV$HI 0000                                       wreg 0009  
                            __CFG_LVP$OFF 0000                                      ?_abs 0032  
                                    l2300 0EE8                                      l2310 04F4  
                                    l2302 0EF1                                      l2320 054B  
                                    l2312 04F6                                      l2400 0417  
                                    l2330 0572                                      l2322 0550  
                                    l2314 0500                                      l2306 0CCC  
                                    l2250 0E51                                      l2410 048E  
                                    l2402 041C                                      l2340 05B4  
                                    l2332 0576                                      l2324 055A  
                                    l2316 0522                                      l2308 0CDA  
                                    l2260 0E89                                      l2252 0E57  
                                    l2420 04C1                                      l2412 049B  
                                    l2404 044B                                      l2500 0D86  
                                    l2510 0DB1                                      l2342 05B5  
                                    l2334 057A                                      l2326 0567  
                                    l2318 052C                                      l2350 05FA  
                                    l2262 0E9E                                      l2254 0E5C  
                                    l2270 0CBB                                      l2430 04D8  
                                    l2422 04C5                                      l2414 04A8  
                                    l2406 044F                                      l2502 0D8A  
                                    l2512 0DBB                                      l2520 0002  
                                    l2336 0582                                      l2328 056A  
                                    l2344 05C3                                      l2360 065C  
                                    l2352 0604                                      l2256 0E61  
                                    l2280 0D3F                                      l2272 0CC4  
                                    l2424 04C9                                      l2432 04E1  
                                    l2416 04B6                                      l2408 0453  
                                    l2440 06FF                                      l2504 0D9E  
                                    l2600 0D5E                                      l2530 07BF  
                                    l2514 0DC0                                      l2610 0F61  
                                    l2346 05C8                                      l2338 05A4  
                                    l2370 0691                                      l2362 065F  
                                    l2354 0626                                      l2258 0E6B  
                                    l2282 0D44                                      l2266 0CB1  
                                    l2290 0EBB                                      l2426 04CF  
                                    l2418 04BA                                      l2450 0733  
                                    l2442 0704                                      l2506 0DA8  
                                    l2602 0D60                                      l2620 0F07  
                                    l2540 07CC                                      l2532 07C6  
                                    l2516 0DD0                                      l2612 0FD9  
                                    l2372 06A1                                      l2364 0667  
                                    l2356 0630                                      l2348 05F8  
                                    l2276 0D2E                                      l2268 0CB7  
                                    l2292 0EC0                                      l2284 0EAA  
                                    l2428 04D4                                      l2380 039D  
                                    l2460 077F                                      l2452 074C  
                                    l2444 0708                                      l2436 06E6  
                                    l2604 0D62                                      l2700 006A  
                                    l2630 0F1B                                      l2622 0F0C  
                                    l2550 07D4                                      l2542 07CD  
                                    l2534 07C7                                      l2518 0DD8  
                                    l2366 066B                                      l2374 06AF  
                                    l2358 064F                                      l2278 0D31  
                                    l2294 0EC5                                      l2286 0EAE  
                                    l2390 03F2                                      l2382 03B0  
                                    l2462 078A                                      l2446 071A  
                                    l2438 06F7                                      l2606 0D73  
                                    l2710 0078                                      l2702 006D  
                                    l2480 0C38                                      l2640 0F2F  
                                    l2632 0F1D                                      l2624 0F0E  
                                    l2616 0F01                                      l2560 07E4  
                                    l2544 07CF                                      l2536 07C9  
                                    l2376 06B4                                      l2368 066F  
                                    l2296 0ED1                                      l2288 0EB6  
                                    l2392 0402                                      l2384 03B6  
                                    l2456 0766                                      l2448 072B  
                                    l2472 079B                                      l2800 01F8  
                                    l2720 0092                                      l2712 007A  
                                    l2704 0070                                      l2482 0C4C  
                                    l2650 0F4C                                      l2642 0F33  
                                    l2634 0F23                                      l2626 0F12  
                                    l2618 0F03                                      l2570 07F0  
                                    l2562 07E6                                      l2554 07DF  
                                    l2546 07D0                                      l2538 07CA  
                                    l2490 0C98                                      l2298 0ED6  
                                    l2394 0408                                      l2386 03D9  
                                    l2378 038D                                      l2474 07B4  
                                    l2458 0777                                      l2466 0790  
                                    l2810 022A                                      l2802 01FA  
                                    l2730 00AA                                      l2722 0094  
                                    l2714 0081                                      l2706 0072  
                                    l2580 0C86                                      l2484 0C4E  
                                    l2644 0F42                                      l2636 0F26  
                                    l2652 0F52                                      l2628 0F17  
                                    l2660 0DFD                                      l2572 0D07  
                                    l2564 07E8                                      l2556 07E1  
                                    l2548 07D2                                      l2492 0C9D  
                                    l2396 040C                                      l2388 03EC  
                                    l2468 0798                                      l2900 0386  
                                    l2820 028B                                      l2812 0230  
                                    l2804 0204                                      l2740 0112  
                                    l2732 00C5                                      l2724 0095  
                                    l2716 0083                                      l2708 0075  
                                    l2582 0C8A                                      l2486 0C50  
                                    l2590 0C54                                      l2654 0F57  
                                    l2646 0F46                                      l2638 0F2B  
                                    l2670 0E0E                                      l2662 0DFF  
                                    l2574 0D0B                                      l2566 07EA  
                                    l2558 07E2                                      l2398 0414  
                                    l2830 02C0                                      l2822 029E  
                                    l2814 0236                                      l2806 020F  
                                    l2750 013C                                      l2742 0117  
                                    l2734 00E0                                      l2726 0097  
                                    l2718 0086                                      l2584 0C8C  
                                    l2576 0C81                                      l2488 0C52  
                                    l2592 0C5B                                      l2656 0F5C  
                                    l2648 0F47                                      l2680 0E25  
                                    l2672 0E13                                      l2664 0E03  
                                    l2568 07EE                                      l2496 0C6C  
                                    l2840 02D8                                      l2832 02C3  
                                    l2824 02B2                                      l2816 0261  
                                    l2808 0223                                      l2760 015D  
                                    l2752 013D                                      l2744 011D  
                                    l2736 00EB                                      l2728 00A3  
                                    l2586 0C93                                      l2578 0C85  
                                    l2682 0E29                                      l2674 0E19  
                                    l2690 0E42                                      l2666 0E08  
                                    l2594 07F3                                      l2498 0D82  
                                    l2850 02F4                                      l2842 02DE  
                                    l2834 02C8                                      l2826 02BA  
                                    l2818 0281                                      l2770 0186  
                                    l2762 0168                                      l2754 014A  
                                    l2746 0127                                      l2738 00FE  
                                    l2588 0C2F                                      l2692 0E47  
                                    l2684 0E33                                      l2676 0E1C  
                                    l2668 0E0A                                      l2596 07F7  
                                    l2860 031E                                      l2852 02FF  
                                    l2844 02E0                                      l2828 02BD  
                                    l2836 02CC                                      l2780 01A3  
                                    l2772 0189                                      l2756 014F  
                                    l2764 017D                                      l2748 0137  
                                    l2694 0E4C                                      l2686 0E37  
                                    l2678 0E21                                      l2598 0D55  
                                    l2870 0338                                      l2862 0323  
                                    l2854 0313                                      l2846 02E7  
                                    l2838 02D2                                      l2790 01DF  
                                    l2774 018B                                      l2766 0180  
                                    l2782 01B7                                      l2758 0152  
                                    ?_pad 002F                                      l2688 0E3C  
                                    l2880 0359                                      l2872 033B  
                                    l2864 0328                                      l2856 0318  
                                    l2848 02E9                                      l2792 01E5  
                                    l2784 01C3                                      l2776 018D  
                                    l2768 0183                                      l2890 0379  
                                    l2882 036D                                      l2874 033E  
                                    l2858 031B                                      l2866 032C  
                                    l2794 01E8                                      l2786 01D7  
                                    l2778 0198                                      l2698 0064  
                                    l2892 037C                                      l2884 036F  
                                    l2876 0343                                      l2868 0332  
                                    l2796 01EA                                      l2788 01D9  
                                    l2894 037F                                      l2886 0376  
                                    l2878 034E                                      l2798 01F1  
                                    l2896 0382                                      l2888 0378  
                                    l2898 0384                                      STR_1 1000  
                                    STR_2 1081                                      STR_3 1019  
                                    STR_4 1076                                      STR_5 102E  
                                    STR_6 1051                                      STR_7 1040  
                                    STR_8 105E                                      STR_9 106A  
                                    _BRGH 0CF2                                      u2200 0D54  
                                    u3000 015A                                      u2201 0D53  
                                    u2210 0EAE                                      u3010 0195  
                                    u2211 0EAD                                      u2300 0557  
                                    u2220 0EBB                                      u3100 02D8  
                                    u3020 01DF                                      u2221 0EBA  
                                    u3101 02D7                                      u3021 01DE  
                                    u2310 0567                                      u2150 0E57  
                                    u2230 0EE4                                      u3110 02DE  
                                    u3030 01E5                                      u2311 0566  
                                    u2151 0E56                                      u2231 0EE3  
                                    u3111 02DD                                      u3031 01E4  
                                    u2320 057A                                      u2160 0E5C  
                                    u2240 0EE8                                      u3120 02F1  
                                    u3040 0201                                      u2321 0579  
                                    u2161 0E5B                                      u2241 0EE7  
                                    u2330 05A4                                      u2410 065C  
                                    u2250 0CDA                                      u2170 0E6B  
                                    u3130 0332                                      u3050 022A  
                                    u2331 05A3                                      u2411 065B  
                                    u2251 0CD9                                      u2171 0E6A  
                                    u2235 0EE0                                      u3131 0331  
                                    u3051 0229                                      u2340 05C3  
                                    u2260 0500                                      u2420 066F  
                                    u2180 0E89                                      u3140 0338  
                                    u3060 0230                                      u2341 05C2  
                                    u2261 04FF                                      u2421 066E  
                                    u2181 0E88                                      u3141 0337  
                                    u3061 022F                                      u2350 05C8  
                                    u2430 0691                                      u2190 0CC4  
                                    u2510 03D9                                      u3150 034B  
                                    u3070 0236                                      u2351 05C7  
                                    u2335 05A0                                      u2431 0690  
                                    u2255 0CD6                                      u2191 0CC3  
                                    u2511 03D8                                      u3071 0235  
                                    u2280 052C                                      u2440 06AF  
                                    u2600 04C1                                      u2520 03EC  
                                    u3080 0288                                      u2281 052B  
                                    u2441 06AE                                      u2185 0E85  
                                    u2601 04C0                                      u2521 03EB  
                                    u2450 06B4                                      u2370 0604  
                                    u2610 04C5                                      u2530 0408  
                                    u3090 02D2                                      u2451 06B3  
                                    u2435 068D                                      u2371 0603  
                                    u2611 04C4                                      u2531 0407  
                                    u3091 02D1                                      u2700 0DC0  
                                    u2620 04CF                                      u2540 040C  
                                    u2701 0DBF                                      u2621 04CE  
                                    u2541 040B                                      u2525 03E8  
                                    u2710 0DEC                                      u2390 0630  
                                    u2550 048E                                      u2470 03A8  
                                    u2630 06F7                                      u3167 0D11  
                                    u2711 0DEB                                      u2391 062F  
                                    u2551 048D                                      u2471 03A6  
                                    u2631 06F6                                      u2800 0F42  
                                    u2720 0D2B                                      u2560 049B  
                                    u2480 03A9                                      u2640 071A  
                                    u2801 0F41                                      u2721 0D2A  
                                    u2561 049A                                      u2641 0719  
                                    u2730 0FF8                                      u2570 04A8  
                                    u2490 03B6                                      u2650 072B  
                                    u2571 04A7                                      u2555 048A  
                                    u2491 03B5                                      u2651 072A  
                                    u2820 0F52                                      u2740 0F07  
                                    u2580 04B6                                      u2660 0777  
                                    u2821 0F51                                      u2805 0F3E  
                                    u2741 0F06                                      u2725 0D27  
                                    u2581 04B5                                      u2661 0776  
                                    u2830 0F57                                      u2750 0F12  
                                    u2910 0E42                                      u2670 0C9D  
                                    u2590 04BA                                      u2831 0F56  
                                    u2815 0F48                                      u2751 0F11  
                                    u2911 0E41                                      u2735 0FEF  
                                    u2671 0C9C                                      u2591 04B9  
                                    u2575 04A4                                      u2760 0F23  
                                    u2920 0E47                                      u2840 0E03  
                                    u2680 0DA8                                      u2761 0F22  
                                    u2921 0E46                                      u2905 0E38  
                                    u2841 0E02                                      u2585 04B2  
                                    u2681 0DA7                                      u2850 0E0E  
                                    u2690 0DB8                                      u2930 00A3  
                                    u2851 0E0D                                      u2931 00A2  
                                    u2780 0F33                                      u2860 0E19  
                                    u2940 00C5                                      u2781 0F32  
                                    u2861 0E18                                      u2941 00C4  
                                    u2950 00E0                                      u2775 0F27  
                                    u2951 00DF                                      u2880 0E29  
                                    u2960 00E8                                      u2881 0E28  
                                    u2945 00C1                                      u2890 0E33  
                                    u2970 011D                                      u2795 0F34  
                                    u2891 0E32                                      u2875 0E1D  
                                    u2971 011C                                      u2955 00DC  
                                    u2980 0124                                      u2990 013C  
                                    u2895 0E2F                                      u2991 013B  
                                    _TXIF 008C                              __CFG_WRT$OFF 0000  
                                    abs@a 0032                               main@seconds 00E3  
                                    _dbuf 0248                                      _main 0064  
                                    _dtoa 038B                                      _rand 0F61  
                                    _seed 01DC                                      _prec 01CE  
                                    _time 0C97                                      _nout 01CA  
                                    pad@i 0033                                      pad@p 0030  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    pad@w 0035                                      btemp 007E  
                           __CFG_BOREN$ON 0000                                      start 0032  
                           __CFG_IESO$OFF 0000                ??_TMR1_SetInterruptHandler 0076  
                                   ??_abs 0034                                     ??_pad 0032  
                         __end_of___aodiv 05F8                                     ?_main 00B2  
                                   ?_dtoa 003A                           __end_of___aomod 06E4  
                                   ?_rand 0038                           __end_of___awdiv 0F61  
                                   _DEBUG 01D2                                     _BRG16 0CFB  
                           __CFG_WDTE$OFF 0000                           __end_of___awmod 0E51  
                                   ?_time 0070                           ___awdiv@divisor 0020  
                                   _T1CON 0018                                     _IOCAF 0393  
                                   i1l120 0030                                     i1l162 0C6B  
                                   i1l155 0D06                                     i1l149 0C37  
                                   i1l158 0C4B                           ___awdiv@counter 0024  
                            vfpfcnvrt@fmt 0058                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _SPBRG 019B  
                                   _TXREG 019A                             __CFG_PWRTE$ON 0000  
                          __CFG_FCMEN$OFF 0000                          __end_of_TMR1_ISR 0D07  
                                   _flags 0076                                     _fputc 0E51  
                                   _fputs 0D2C                                     _srand 0C6C  
                                   pad@fp 0037                                     _width 01CC  
                                   _putch 0003                                     dtoa@d 003A  
                                   dtoa@i 0056                                     dtoa@n 004E  
                                   dtoa@p 0048                                     dtoa@s 004C  
                                   dtoa@w 004A                   __end_of_TMR1_Initialize 0C97  
                                   pclath 000A                                     time@t 0074  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 0D80                           _TMR1_WriteTimer 0C4C  
                          __CFG_MCLRE$OFF 0000                           __initialization 0034  
                            __end_of_main 038B                              __end_of_dtoa 04F4  
                            __end_of_rand 1000                              __end_of_time 0CB1  
                          __CFG_LPBOR$OFF 0000                                    ??_main 00B6  
                                  ??_dtoa 0042                                    ??_rand 003A  
                                  ??_time 0074                       __CFG_USBLSCLK$48MHz 0000  
                                  ?_fputc 0020                                    ?_fputs 0074  
                                  _ADRESH 009C                                    _ADRESL 009B  
                        ___awdiv@dividend 0022                                    ?_srand 0074  
                                  ?_putch 0070                                    _T1GCON 0019  
                 TMR1_WriteTimer@timerVal 0074                                    i1l2030 0006  
                                  i1l2032 000B                                    i1l2040 0023  
                                  i1l2042 0028                                    i1l2034 000F  
                                  i1l2044 002D                                    i1l2036 0010  
                                  i1l2038 001C                                    i1l1800 0C5F  
                                  i1l1802 0C66                                    i1l1744 0C32  
                                  i1l1840 0C4A                                    i1l1834 0C44  
                                  i1l1850 0D03                                    i1l1842 0CE8  
                                  i1l1836 0C46                                    i1l1844 0CEA  
                                  i1l1838 0C48                                    i1l1846 0CF1  
                                  i1l1848 0D00                                    u160_20 0C66  
                                  u160_21 0C65                                    u317_27 0015  
                                  u166_20 0D00                                    u190_20 0028  
                                  u166_21 0CFF                                    u190_21 0027  
                                  u166_25 0CFC                                    u191_20 002D  
                                  u191_21 002C                                    u188_20 000B  
                                  u188_21 000A                                    u189_20 000F  
                                  u189_21 000E                                    u240lld 064F  
                                  u250lld 03D4                                    u227lld 051F  
                                  u236lld 05E6                                    u229lld 054B  
                                  u246lld 06D2                                    u238lld 0623  
                    __size_of_general_int 002E                        main@readbuffer_773 0148  
                      main@readbuffer_781 01A0                        main@readbuffer_766 00B9  
                      main@readbuffer_758 0120                        main@readbuffer_784 01B4  
                      main@readbuffer_769 0134                        main@readbuffer_778 015C  
            _TMR1_INTERRUPT_TICKER_FACTOR 01D4      __end_of_TMR1_DefaultInterruptHandler 0C38  
   __size_of_TMR1_DefaultInterruptHandler 0006              _TMR1_DefaultInterruptHandler 0C32  
                            vfprintf@cfmt 006E                 i1TMR1_WriteTimer@timerVal 0070  
                            ?_TMR1_Reload 0070                                    ___omul 0DB1  
                               ??___aodiv 0074                                 ??___aomod 0074  
                               ??___awdiv 0074                                 ??___awmod 0075  
                        ___awdiv@quotient 0026                           ___awmod@divisor 0042  
                        __end_of_seedRand 0800                           ___awmod@counter 0046  
                                  pad@buf 002F                                    dtoa@fp 0045  
                                  _strlen 0CB1                          __end_of_sendOnly 0003  
                                  fputc@c 0020                                    fputs@c 002B  
                                  fputs@i 002C                                    fputs@s 002E  
                          _analog_reading 01D6                                    srand@s 0074  
                                  putch@c 0070                          __end_of_vfprintf 0DB1  
TMR1_SetInterruptHandler@InterruptHandler 0074                                 ??_sprintf 00A8  
                 __end_of_TMR1_WriteTimer 0C54                     __end_of_TMR1_CallBack 0C6C  
                        ?_TMR1_Initialize 0070                   __end_of__initialization 0060  
                            _GAME_STOPPED 00E9                               seedRand@toc 0022  
                          __pcstackCOMMON 0070                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_fputc 0EA8  
                           __end_of_fputs 0D55                             __end_of_srand 0C81  
                           __end_of_putch 0004                                _delay100ms 0D07  
                                 ??_fputc 0023                                   ??_fputs 0028  
                                 ??_srand 0020                                   ??_putch 0074  
                              __pbssBANK1 00E7                                __pbssBANK3 01CA  
                              __pbssBANK4 0220                                __pbssBANK5 02A0  
                              __pbssBANK6 0320                                __pmaintext 0064  
                                 ?___omul 0020                           __CFG_PLLMULT$3x 0000  
                              ??_TMR1_ISR 0072                                __pintentry 0004  
                     ___omul@multiplicand 0028                                   ?_strlen 0074  
                 __size_of_TMR1_StopTimer 0003                        __size_of_vfpfcnvrt 00DB  
                        ?_TMR1_WriteTimer 0074                            main@readbuffer 00CF  
                               ?_seedRand 0070                                 ?_sendOnly 0022  
                                 ___aodiv 04F4                                   ___aomod 05F8  
                                 ___awdiv 0F01                                   ___awmod 0DFD  
                         __size_of___omul 004C                          _HORN_END_STOPPED 00E7  
                               ?_vfprintf 0068                           __CFG_STVREN$OFF 0000  
                    __size_of_TMR1_Reload 000B                                _initialize 07BF  
                      _TIME_INTRO_ELAPSED 00ED                                   __ptext1 0D55  
                                 __ptext2 0D80                                   __ptext3 06E4  
                                 __ptext4 038B                                   __ptext5 0EA8  
                                 __ptext6 0CB1                                   __ptext7 0D2C  
                                 __ptext8 0E51                                   __ptext9 0003  
          ??_TMR1_DefaultInterruptHandler 0070                           __size_of_strlen 001B  
                               _T1CONbits 0018                              __size_of_abs 001C  
                            __size_of_pad 0059                          ___awmod@dividend 0044  
       __size_of_TMR1_SetInterruptHandler 0006                 ?_TMR1_SetInterruptHandler 0074  
                               _IOCAFbits 0393                                 _IOCAPbits 0391  
                             ?_delay100ms 0074                                   _sprintf 0D55  
                                 clrloop0 0C3F                      end_of_initialization 0060  
                          ___omul@product 0030                                   fputc@fp 0022  
                                 fputs@fp 0074                                ??_seedRand 0076  
                              ??_sendOnly 0076                         __end_of_vfpfcnvrt 07BF  
                               _RCSTAbits 019D                                ??_vfprintf 006B  
                                 strlen@a 0020                                   strlen@s 0074  
                               _PORTAbits 000C                                 _PORTBbits 000D  
                               _PORTCbits 000E                          __CFG_FOSC$INTOSC 0000  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                            _INTRO_FINISHED 01D8  
                           ??_general_int 0072                                 _TXSTAbits 019E  
                              main@randNr 00E5                    main@new_analog_reading 01C8  
                      __CFG_PLLEN$ENABLED 0000                       __size_of_delay100ms 0025  
                          __end_of___omul 0DFD                               vfpfcnvrt@ap 0059  
                             vfpfcnvrt@fp 0067                               vfpfcnvrt@ll 005F  
                             ?_initialize 0070                         __size_of_TMR1_ISR 001F  
                          _TMR1_StopTimer 0C2F                            __end_of_strlen 0CCC  
                     start_initialization 0034                               __end_of_abs 0CE8  
                             __end_of_pad 0F01                         ___omul@multiplier 0020  
                __size_of_TMR1_Initialize 0016                               vfprintf@fmt 0068  
                     __end_of_general_int 0032                                  ??___omul 0074  
                  __end_of_TMR1_StopTimer 0C32                    __size_of_TMR1_CallBack 000D  
                                ??_strlen 0076                               __pbssCOMMON 0076  
                               ___latbits 0002                              _INTRO_PLAYED 00EB  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                           __pcstackBANK2 0120                             __pcstackBANK3 01A0  
                        ___aodiv@dividend 0028                       __size_of_initialize 0034  
                       __size_of_seedRand 000D                         __size_of_sendOnly 0001  
        __end_of_TMR1_SetInterruptHandler 0C3E                                  ?___aodiv 0020  
                                ?___aomod 0020                                  ?___awdiv 0020  
                        ___aodiv@quotient 0032                                  ?___awmod 0042  
                         ?_TMR1_StopTimer 0070                         __size_of_vfprintf 0031  
                            ??_delay100ms 0020                              sendOnly@size 0024  
                                ?_sprintf 00A0                            __size_of_fputc 0057  
                          __size_of_fputs 0029                            __size_of_srand 0015  
                          __size_of_putch 0001                         i1_TMR1_WriteTimer 0C44  
                           _TMR1_CallBack 0C5F                                  _LATBbits 010D  
                             _general_int 0004                        ?i1_TMR1_WriteTimer 0070  
                               clear_ram0 0C3E                                  _PIE1bits 0091  
                __size_of_TMR1_WriteTimer 0008                                  _PIR1bits 0011  
                           ??_TMR1_Reload 0076                                 main@F3010 02C8  
                               main@F3002 0234                                 main@F3004 0220  
                               main@F3006 0320                                 main@F3014 02B4  
                               main@F3008 02DC                                 main@F3016 02A0  
                               main@F3018 0336                       ??i1_TMR1_WriteTimer 0072  
                                _TMR1_ISR 0CE8                               _BTN_PRESSED 00EF  
                               _vfpfcnvrt 06E4                        __end_of_delay100ms 0D2C  
                       ??_TMR1_Initialize 0076                                _ADCON0bits 009D  
                              _ADCON1bits 009E                 __end_ofi1_TMR1_WriteTimer 0C4C  
                          ?_TMR1_CallBack 0070                               delay100ms@i 0022  
                             delay100ms@n 0074                                vfprintf@ap 006A  
                              vfprintf@fp 006D                          __size_of___aodiv 0104  
                        __size_of___aomod 00EC                          __size_of___awdiv 0060  
                        __size_of___awmod 0054                                ?_vfpfcnvrt 0058  
                            ??_initialize 0074                            sendOnly@buffer 0022  
                         ___aodiv@divisor 0020                  _TMR1_SetInterruptHandler 0C38  
                         ___aodiv@counter 0030                       __end_of_TMR1_Reload 0C5F  
                              _ANSELAbits 018C                                _ANSELBbits 018D  
                              _ANSELCbits 018E                     _TMR1_InterruptHandler 01DA  
                              sprintf@fmt 00A2                                  _dtoa$861 0046  
                                __ptext10 0CCC                                  __ptext11 05F8  
                                __ptext20 0D07                                  __ptext12 04F4  
                                __ptext21 0DFD                                  __ptext13 0002  
                                __ptext30 0C44                                  __ptext22 0F01  
                                __ptext14 07F3                                  __ptext31 0C5F  
                                __ptext23 0C2F                                  __ptext15 0C97  
                                __ptext32 0C32                                  __ptext24 0C54  
                                __ptext16 0C6C                                  __ptext25 0C4C  
                                __ptext17 0F61                                  __ptext26 0C81  
                                __ptext18 0DB1                                  __ptext27 0C38  
                                __ptext19 07BF                                  __ptext29 0CE8  
                        __size_of_sprintf 002B                             __size_of_main 0327  
                           __size_of_dtoa 0169                             __size_of_rand 009F  
                           __size_of_time 001A                                  _seedRand 07F3  
                      __end_of_initialize 07F3                                  _sendOnly 0002  
                                int$flags 007E                                  _vfprintf 0D80  
                                main@argc 00B2                                  main@argv 00B4  
                       ??_TMR1_WriteTimer 0076                          ___aomod@dividend 0028  
                              _INTCONbits 000B                                _FVRCONbits 0117  
                          __pstringtext10 0000                           ??_TMR1_CallBack 0070  
              __size_ofi1_TMR1_WriteTimer 0008                                  intlevel1 0000  
                               sprintf@ap 00AB                             _CountCallBack 01D0  
                       __CFG_CLKOUTEN$OFF 0000                          ??_TMR1_StopTimer 0074  
                              _OSCCONbits 0099                               _TMR1_Reload 0C54  
                         ___aomod@divisor 0020                               ??_vfpfcnvrt 005A  
                         ___aomod@counter 0030                             __pstringtext1 1000  
                           __pstringtext2 1019                             __pstringtext3 102E  
                           __pstringtext4 1040                             __pstringtext5 1051  
                           __pstringtext6 105E                             __pstringtext7 106A  
                           __pstringtext8 1076                             __pstringtext9 1081  
                                sprintf@f 00AC                                  sprintf@s 00A0  
                     __CFG_CPUDIV$CLKDIV3 0000                              ___aodiv@sign 0031  
                            ?_general_int 0070                              ___aomod@sign 0031  
                         _TMR1_Initialize 0C81  
